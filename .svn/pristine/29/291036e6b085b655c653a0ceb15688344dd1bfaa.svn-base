/*
 * JSP generated by Resin Professional 4.0.36 (built Fri, 26 Apr 2013 03:33:09 PDT)
 */

package _jsp._coach;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import java.io.*;
import java.util.*;
import CP_Classes.vo.*;

public class _sessionname__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html");
    response.setCharacterEncoding("utf-8");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    CP_Classes.Login logchk;
    synchronized (pageContext.getSession()) {
      logchk = (CP_Classes.Login) pageContext.getSession().getAttribute("logchk");
      if (logchk == null) {
        logchk = new CP_Classes.Login();
        pageContext.getSession().setAttribute("logchk", logchk);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    CP_Classes.Database Database;
    synchronized (pageContext.getSession()) {
      Database = (CP_Classes.Database) pageContext.getSession().getAttribute("Database");
      if (Database == null) {
        Database = new CP_Classes.Database();
        pageContext.getSession().setAttribute("Database", Database);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    Coach.CoachOrganization CoachOrganization;
    synchronized (pageContext.getSession()) {
      CoachOrganization = (Coach.CoachOrganization) pageContext.getSession().getAttribute("CoachOrganization");
      if (CoachOrganization == null) {
        CoachOrganization = new Coach.CoachOrganization();
        pageContext.getSession().setAttribute("CoachOrganization", CoachOrganization);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    Coach.SessionSetup SessionSetup;
    synchronized (pageContext.getSession()) {
      SessionSetup = (Coach.SessionSetup) pageContext.getSession().getAttribute("SessionSetup");
      if (SessionSetup == null) {
        SessionSetup = new Coach.SessionSetup();
        pageContext.getSession().setAttribute("SessionSetup", SessionSetup);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    Coach.CoachDateGroup CoachDateGroup;
    synchronized (pageContext.getSession()) {
      CoachDateGroup = (Coach.CoachDateGroup) pageContext.getSession().getAttribute("CoachDateGroup");
      if (CoachDateGroup == null) {
        CoachDateGroup = new Coach.CoachDateGroup();
        pageContext.getSession().setAttribute("CoachDateGroup", CoachDateGroup);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    Coach.CoachSlotGroup CoachSlotGroup;
    synchronized (pageContext.getSession()) {
      CoachSlotGroup = (Coach.CoachSlotGroup) pageContext.getSession().getAttribute("CoachSlotGroup");
      if (CoachSlotGroup == null) {
        CoachSlotGroup = new Coach.CoachSlotGroup();
        pageContext.getSession().setAttribute("CoachSlotGroup", CoachSlotGroup);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    
		String username = (String) session.getAttribute("username");

		if (!logchk.isUsable(username)) {
	
    out.write(_jsp_string3, 0, _jsp_string3.length);
    
 	} else {
		Vector organizationlist=CoachOrganization.getAllOrganizations();
		Vector slotGroupList=CoachSlotGroup.getAllSlotGroup();
		Vector dayGroupList=CoachDateGroup.getAllDateGroup();
 		if (request.getParameter("add") != null) {
 			 Boolean Exist = false;
  		    String sessionName=request.getParameter("SessionName");
  		    String sessionDes=request.getParameter("SessionDescription");
  		    int sessionMAX=Integer.parseInt(request.getParameter("MaxSessions"));
  			Vector v = SessionSetup.getAllSession();
  			for(int i = 0; i < v.size(); i++){
  				voCoachSession vo = (voCoachSession)v.elementAt(i);
  				
  				String name = vo.getName();
  				//System.out.println("Existing Schedule Name:"+slotGroupName);
  				if(name.trim().equalsIgnoreCase((sessionName.trim()))){
  					Exist = true;
  					System.out.println("Same Coaching Session Name");
  				}

  			}

 			
 			if(!Exist) {						
 				try{					
 					boolean add =SessionSetup.addSession(sessionName, sessionDes,sessionMAX);
 					int sessionPK=SessionSetup.getSessionPKbyNameAndDes(sessionName, sessionDes);
 					if(add){
 						//get the added session name PK
 						SessionSetup.setSessionPK(sessionPK);
 						SessionSetup.setSessionName(sessionName);
 						System.out.println("Session PK"+SessionSetup.getSessionPK());
 						
    out.write(_jsp_string4, 0, _jsp_string4.length);
     
 					}
 					else{
 						
 					}
 				}catch(Exception SE) {
                      System.out.println(SE);
 				}
 			} else {			
 
    out.write(_jsp_string5, 0, _jsp_string5.length);
    			
 			}
 		}
 		
 
    out.write(_jsp_string6, 0, _jsp_string6.length);
    
 	}

    out.write(_jsp_string7, 0, _jsp_string7.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != -7791540776389363938L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("Coach/SessionName.jsp"), -4949116580699345864L, false);
    _caucho_depends.add(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string1;
  private final static char []_jsp_string0;
  private final static char []_jsp_string6;
  private final static char []_jsp_string5;
  private final static char []_jsp_string3;
  private final static char []_jsp_string2;
  private final static char []_jsp_string7;
  private final static char []_jsp_string4;
  static {
    _jsp_string1 = "\r\n	".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n<html>\r\n<head>\r\n\r\n<title>Coaching Session Name Setup</title>\r\n\r\n<meta http-equiv=\"Content-Type\" content=\"text/html\">\r\n<style type=\"text/css\">\r\n<!--\r\nbody {\r\n	\r\n}\r\n-->\r\n</style>\r\n</head>\r\n\r\n<body>\r\n	".toCharArray();
    _jsp_string6 = "\r\n	<!-- html codes  -->\r\n	<form name=\"AddSlot\" method=\"post\">\r\n		<p>	\r\n					<b><font color=\"#000080\" size=\"3\" face=\"Arial\">New Session Setup</font></b>\r\n				<br>\r\n				<br>\r\n				<br>\r\n			</p>\r\n			<p>\r\n				<b><font color=\"#000080\" size=\"2\" face=\"Arial\">Session Name:</font></b>\r\n			</p>\r\n			\r\n			<input name=\"SessionName\" type=\"text\"  style='font-size:10.0pt;font-family:Arial' id=\"SessionName\" size=\"50\" maxlength=\"50\">\r\n			<p>\r\n				<b><font color=\"#000080\" size=\"2\" face=\"Arial\">Session Description:</font></b>\r\n			</p>\r\n			\r\n			<input name=\"SessionDescription\" type=\"text\"  style='font-size:10.0pt;font-family:Arial' id=\"SessionDescription\" size=\"50\" maxlength=\"200\">\r\n			<br>\r\n		\r\n			<p>\r\n				<b><font color=\"#000080\" size=\"2\" face=\"Arial\">Maximum Sessions That One Candidate Can Book:</font></b>\r\n			</p>\r\n			<input name=\"MaxSessions\" type=\"text\"  style='font-size:10.0pt;font-family:Arial' id=\"SessionDescription\" size=\"50\" maxlength=\"2\">\r\n			<br>\r\n			<br>\r\n			<br>\r\n			\r\n			<input type=\"button\" name=\"back\" value=\"back\" onClick=\"javascript: window.location.href = 'SessionManagement.jsp';\">\r\n			<input type=\"button\" name=\"Submit\" value=\"Submit\" onClick=\"confirmAdd(this.form)\">\r\n	</form>\r\n".toCharArray();
    _jsp_string5 = "\r\n 	<script>\r\n   		alert(\"Coaching Session Name exists\");\r\n 		window.location.href='SessionName.jsp';\r\n 	</script>\r\n ".toCharArray();
    _jsp_string3 = "\r\n	<font size=\"2\"> <script>\r\n		parent.location.href = \"../index.jsp\";\r\n	</script> ".toCharArray();
    _jsp_string2 = "\r\n	<script type=\"text/javascript\">\r\n		function confirmAdd(form) {\r\n			if((form.SessionName.value != \"\")&&(form.MaxSessions.value != \"\")) {\r\n				if(confirm(\"Add Session Name?\")) {\r\n					form.action = \"SessionName.jsp?add=1\";\r\n					form.method = \"post\";\r\n					form.submit();\r\n					return true;\r\n				}else\r\n					return false;\r\n			} else {\r\n				if(form.SessionName.value == \"\") {\r\n					alert(\"Please enter session name\");\r\n					form.SessionName.focus();\r\n				}\r\n				if(form.MaxSessions.value == \"\") {\r\n					alert(\"Please enter maximum sessions\");\r\n					form.MaxSessions.focus();\r\n				}\r\n				\r\n				return false;\r\n			}\r\n		}\r\n		\r\n	\r\n	</script>\r\n\r\n	<!-- select Organization -->\r\n\r\n\r\n	".toCharArray();
    _jsp_string7 = "\r\n</body>\r\n</html>\r\n</body>\r\n</html>".toCharArray();
    _jsp_string4 = "\r\n 						<script>\r\n 						alert(\"Coaching Session successfully added\");\r\n 						window.location.href = 'CoachAssignment.jsp';\r\n 						</script>\r\n 						".toCharArray();
  }
}
