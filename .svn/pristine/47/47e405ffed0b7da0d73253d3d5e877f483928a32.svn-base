/*
 * JSP generated by Resin Professional 4.0.36 (built Fri, 26 Apr 2013 03:33:09 PDT)
 */

package _jsp._coach;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import java.io.*;
import java.util.*;
import CP_Classes.vo.*;

public class _selectcoach__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html");
    response.setCharacterEncoding("utf-8");

    // Author: Dai Yong in June 2013
    out.write(_jsp_string0, 0, _jsp_string0.length);
    CP_Classes.Login logchk;
    synchronized (pageContext.getSession()) {
      logchk = (CP_Classes.Login) pageContext.getSession().getAttribute("logchk");
      if (logchk == null) {
        logchk = new CP_Classes.Login();
        pageContext.getSession().setAttribute("logchk", logchk);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    CP_Classes.Database Database;
    synchronized (pageContext.getSession()) {
      Database = (CP_Classes.Database) pageContext.getSession().getAttribute("Database");
      if (Database == null) {
        Database = new CP_Classes.Database();
        pageContext.getSession().setAttribute("Database", Database);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    CP_Classes.Organization Organization;
    synchronized (pageContext.getSession()) {
      Organization = (CP_Classes.Organization) pageContext.getSession().getAttribute("Organization");
      if (Organization == null) {
        Organization = new CP_Classes.Organization();
        pageContext.getSession().setAttribute("Organization", Organization);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    Coach.SessionSetup SessionSetup;
    synchronized (pageContext.getSession()) {
      SessionSetup = (Coach.SessionSetup) pageContext.getSession().getAttribute("SessionSetup");
      if (SessionSetup == null) {
        SessionSetup = new Coach.SessionSetup();
        pageContext.getSession().setAttribute("SessionSetup", SessionSetup);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    Coach.CoachDateGroup CoachDateGroup;
    synchronized (pageContext.getSession()) {
      CoachDateGroup = (Coach.CoachDateGroup) pageContext.getSession().getAttribute("CoachDateGroup");
      if (CoachDateGroup == null) {
        CoachDateGroup = new Coach.CoachDateGroup();
        pageContext.getSession().setAttribute("CoachDateGroup", CoachDateGroup);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    Coach.CoachSlotGroup CoachSlotGroup;
    synchronized (pageContext.getSession()) {
      CoachSlotGroup = (Coach.CoachSlotGroup) pageContext.getSession().getAttribute("CoachSlotGroup");
      if (CoachSlotGroup == null) {
        CoachSlotGroup = new Coach.CoachSlotGroup();
        pageContext.getSession().setAttribute("CoachSlotGroup", CoachSlotGroup);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    	
				if(request.getParameter("generate")!=null){
					System.out.println("Generate the form");
					SessionSetup.generateScheduleForm();
					
    out.write(_jsp_string3, 0, _jsp_string3.length);
    
					
					//generate the schedule from
				}
			
				Vector CoachSlots = new Vector();
				int slotGroupPK=SessionSetup.getSelectedSlotGroup();
				CoachSlots = CoachSlotGroup.getSelectedSlotGroupDetails(slotGroupPK);
				voCoachSlotGroup slotGroup=CoachSlotGroup.getSelectedSlotGroup(slotGroupPK);
				
    out.write(_jsp_string4, 0, _jsp_string4.length);
    out.print((slotGroup.getSlotGroupName()));
    out.write(_jsp_string5, 0, _jsp_string5.length);
    
				int Display = 1;
				int pkslot=0;
				for (int i = 0; i < CoachSlots.size(); i++) {
					voCoachSlot voCoachSlot = new voCoachSlot();
					voCoachSlot = (voCoachSlot) CoachSlots.elementAt(i);

					pkslot = voCoachSlot.getPK();
					int startingTime = voCoachSlot.getStartingtime();
					int endingingTime = voCoachSlot.getEndingtime();
					String startingTime4Digits;
					String endingTime4Digits;
				if (startingTime < 1000) {
					startingTime4Digits="0"+startingTime;
				} else {
					startingTime4Digits=""+startingTime;
				}
				if (endingingTime < 1000) {
					endingTime4Digits="0"+endingingTime;
				} else {
					endingTime4Digits=""+endingingTime;
				}
			
					//System.out.println("ending time" + endingingTime);
			
    out.write(_jsp_string6, 0, _jsp_string6.length);
    out.print((Display));
    out.write(_jsp_string7, 0, _jsp_string7.length);
    out.print((startingTime4Digits));
    out.write(_jsp_string7, 0, _jsp_string7.length);
    out.print((endingTime4Digits));
    out.write(_jsp_string8, 0, _jsp_string8.length);
    
				Display++;
				}
			
    out.write(_jsp_string9, 0, _jsp_string9.length);
    
				int DisplayNo = 1;
				int pkDate=0;
				Vector CoachDates=new Vector();
				int dayGroupPK=SessionSetup.getSelectedDayGroup();
				voCoachDateGroup dateGroup=CoachDateGroup.getSelectedDateGroup(dayGroupPK);
				
				
				
    out.write(_jsp_string10, 0, _jsp_string10.length);
    out.print((SessionSetup.getSessionName()));
    out.write(_jsp_string5, 0, _jsp_string5.length);
    
				CoachDates = CoachDateGroup.getSelectedDateGroupDetails(dayGroupPK);
				for (int i = 0; i < CoachDates.size(); i++) {
					voCoachDate voCoachDate = new voCoachDate();
					voCoachDate = (voCoachDate) CoachDates.elementAt(i);

					pkDate = voCoachDate.getPK();
					String date=voCoachDate.getDate();
					voCoachVenue venue=SessionSetup.getSessionVenue(pkDate);
					String address1=venue.getVenue1();
				
    out.write(_jsp_string11, 0, _jsp_string11.length);
    out.print((pkDate));
    out.write(_jsp_string12, 0, _jsp_string12.length);
    out.print((DisplayNo));
    out.write(_jsp_string7, 0, _jsp_string7.length);
    out.print((date));
    out.write(_jsp_string13, 0, _jsp_string13.length);
    
						if (address1 == null || "".equalsIgnoreCase(address1)) {
					
    out.write(_jsp_string14, 0, _jsp_string14.length);
    
						} else {
					
    out.write(_jsp_string15, 0, _jsp_string15.length);
    out.print((address1));
    out.write(_jsp_string16, 0, _jsp_string16.length);
    
						}
					
    out.write(_jsp_string17, 0, _jsp_string17.length);
    
					Vector coaches=SessionSetup.getCoachBySessionIDandDateID(pkDate);
				for (int j = 0; j < coaches.size(); j++) {
					voCoach coach = new voCoach();
					coach = (voCoach) coaches.elementAt(j);
					String coachname=coach.getCoachName();
					
    out.write(_jsp_string18, 0, _jsp_string18.length);
    out.print((coachname));
    out.write(_jsp_string19, 0, _jsp_string19.length);
    
				}
				
				
    out.write(_jsp_string20, 0, _jsp_string20.length);
    
				DisplayNo++;
				}
			
    out.write(_jsp_string21, 0, _jsp_string21.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != -7791540776389363938L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("Coach/SelectCoach.jsp"), -3327528440046227825L, false);
    _caucho_depends.add(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string1;
  private final static char []_jsp_string11;
  private final static char []_jsp_string18;
  private final static char []_jsp_string9;
  private final static char []_jsp_string19;
  private final static char []_jsp_string12;
  private final static char []_jsp_string16;
  private final static char []_jsp_string15;
  private final static char []_jsp_string2;
  private final static char []_jsp_string10;
  private final static char []_jsp_string21;
  private final static char []_jsp_string7;
  private final static char []_jsp_string0;
  private final static char []_jsp_string4;
  private final static char []_jsp_string5;
  private final static char []_jsp_string3;
  private final static char []_jsp_string8;
  private final static char []_jsp_string17;
  private final static char []_jsp_string13;
  private final static char []_jsp_string20;
  private final static char []_jsp_string6;
  private final static char []_jsp_string14;
  static {
    _jsp_string1 = "\r\n	".toCharArray();
    _jsp_string11 = "\r\n				<tr onMouseOver=\"this.bgColor = '#99ccff'\"\r\n				onMouseOut=\"this.bgColor = '#FFFFCC'\">\r\n				<td style=\"border-width: 1px\"><font size=\"2\"> <input type=\"radio\" name=\"selDate\" value=".toCharArray();
    _jsp_string18 = "\r\n					".toCharArray();
    _jsp_string9 = "\r\n		</table>\r\n		<hr>\r\n		<table>\r\n			<th width=\"30\" bgcolor=\"navy\" bordercolor=\"#3399FF\" align=\"center\"><b>\r\n					<font style='color: white'>&nbsp;</font>\r\n			</b></th>\r\n			<th width=\"30\" bgcolor=\"navy\" bordercolor=\"#3399FF\" align=\"center\"><b>\r\n					<font style='color: white'>No</font>\r\n			</b></th>\r\n			<th width=\"150\" bgcolor=\"navy\" bordercolor=\"#3399FF\" align=\"center\"><b>\r\n					<font style='color: white'>Coaching Date</font>\r\n			</b></th>\r\n			<th width=\"300\" bgcolor=\"navy\" bordercolor=\"#3399FF\" align=\"center\"><b>\r\n					<font style='color: white'>Venue</font>\r\n			</b></th>\r\n			<th width=\"300\" bgcolor=\"navy\" bordercolor=\"#3399FF\" align=\"center\"><b>\r\n					<font style='color: white'>Coaches</font>\r\n			</b></th>\r\n			\r\n\r\n				".toCharArray();
    _jsp_string19 = ", \r\n					".toCharArray();
    _jsp_string12 = "></font></td>\r\n				<td align=\"center\">".toCharArray();
    _jsp_string16 = "</td>\r\n					".toCharArray();
    _jsp_string15 = "\r\n					<td align=\"center\">".toCharArray();
    _jsp_string2 = "\r\n	<script type=\"text/javascript\">\r\n	var x = parseInt(window.screen.width) / 2 - 240;  // the number 250 is the exact half of the width of the pop-up and so should be changed according to the size of the pop-up\r\n	var y = parseInt(window.screen.height) / 2 - 115;  // the number 125 is the exact half of the height of the pop-up and so should be changed according to the size of the pop-up\r\n		function check(field)\r\n		{\r\n			var isValid = 0;\r\n			var clickedValue = 0;\r\n			//check whether any checkbox selected\r\n			if( field == null ) {\r\n				isValid = 2;\r\n			\r\n			} else {\r\n\r\n				if(isNaN(field.length) == false) {\r\n					for (i = 0; i < field.length; i++)\r\n						if(field[i].checked) {\r\n							clickedValue = field[i].value;\r\n							isValid = 1;\r\n						}\r\n				}else {		\r\n					if(field.checked) {\r\n						clickedValue = field.value;\r\n						isValid = 1;\r\n					}\r\n						\r\n				}\r\n			}\r\n			\r\n			if(isValid == 1)\r\n				return clickedValue;\r\n			else if(isValid == 0)\r\n				alert(\"No record selected\");\r\n			else if(isValid == 2)\r\n				alert(\"No record available\");\r\n			\r\n			isValid = 0;\r\n\r\n		}\r\n		function editSessionCoach(form, field){\r\n			var value = check(field);\r\n			\r\n			if(value)\r\n			{	\r\n				var myWindow=window.open('EditSessionCoach.jsp?EditSessionCoach='+ value,'windowRef','scrollbars=no, width=480, height=400');\r\n				var query = \"EditSessionCoach.jsp?EditSessionCoach=\" + value;\r\n				myWindow.moveTo(x,y);\r\n		    	myWindow.location.href = query;\r\n			}\r\n			\r\n		}\r\n		function editSessionVenue(form, field){\r\n			var value = check(field);\r\n			\r\n			if(value)\r\n			{	\r\n				var myWindow=window.open('EditSessionVenue.jsp?EditSessionVenue='+ value,'windowRef','scrollbars=no, width=480, height=400');\r\n				var query = \"EditSessionVenue.jsp?EditSessionVenue=\" + value;\r\n				myWindow.moveTo(x,y);\r\n		    	myWindow.location.href = query;\r\n			}\r\n		}\r\n		function generateForm(form){\r\n			form.action = \"SelectCoach.jsp?generate=1\";\r\n			form.method = \"post\";\r\n			form.submit();\r\n		}\r\n\r\n		\r\n	</script>\r\n</head>\r\n<body>\r\n	<form>\r\n	<table>		\r\n			</b></th>\r\n			<th width=\"30\" bgcolor=\"navy\" bordercolor=\"#3399FF\" align=\"center\"><b>\r\n					<font style='color: white'>No</font>\r\n			</b></th>\r\n			<th width=\"150\" bgcolor=\"navy\" bordercolor=\"#3399FF\" align=\"center\"><b>\r\n					<font style='color: white'>Starting Time</font>\r\n			</b></th>\r\n			<th width=\"150\" bgcolor=\"navy\" bordercolor=\"#3399FF\" align=\"center\"><b>\r\n					<font style='color: white'>Ending Time</font>\r\n			</b></th>\r\n\r\n			".toCharArray();
    _jsp_string10 = "\r\n				<p>\r\n				<b><font color=\"#000080\" size=\"2\" face=\"Arial\">Coaches For ".toCharArray();
    _jsp_string21 = "\r\n		</table>\r\n		<br>\r\n		<br>\r\n		<input name=\"editCoach\" type=\"button\" id=\"Cancel\" value=\"Edit Coach\" onClick=\"editSessionCoach(this.form,this.form.selDate)\">\r\n		<input name=\"editVenue\" type=\"button\" id=\"venue\" value=\"Edit Venue\" onClick=\"editSessionVenue(this.form,this.form.selDate)\">\r\n		<input name=\"refresh\" type=\"button\" id=\"Refresh\" value=\"Refresh List\" onClick=\"javascript: location.reload()\">\r\n		<input name=\"generate\" type=\"button\" id=\"generate\" value=\"Generate Coaching Schedule\" onClick=\"generateForm(this.form)\">\r\n	</form>\r\n		<p>Tips: For Firefox and Chrome Users, the table may not be updated automatically. You may use the refresh button</p>\r\n</body>\r\n</html>".toCharArray();
    _jsp_string7 = "</td>\r\n				<td align=\"center\">".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n<html>\r\n<head>\r\n\r\n<title>Select Coach</title>\r\n\r\n<meta http-equiv=\"Content-Type\" content=\"text/html\">\r\n<style type=\"text/css\">\r\n<!--\r\nbody {\r\n	\r\n}\r\n-->\r\n</style>\r\n	".toCharArray();
    _jsp_string4 = "\r\n				<p>\r\n				<b><font color=\"#000080\" size=\"2\" face=\"Arial\">Schedule Details For ".toCharArray();
    _jsp_string5 = "</font></b>\r\n				</p>\r\n				".toCharArray();
    _jsp_string3 = "\r\n						<script>\r\n						alert(\"Train Schedule generate successfully\");\r\n						window.location.href='UserAssignment.jsp';\r\n						</script>\r\n					".toCharArray();
    _jsp_string8 = "</td>\r\n			</tr>\r\n			".toCharArray();
    _jsp_string17 = "\r\n				<!-- address1 column -->\r\n				<!--display all coaches  -->\r\n				<td>\r\n				".toCharArray();
    _jsp_string13 = "</td>\r\n			\r\n				<!-- address1 column -->\r\n					".toCharArray();
    _jsp_string20 = "\r\n				</td>\r\n				\r\n			</tr>\r\n			".toCharArray();
    _jsp_string6 = "\r\n			<tr>\r\n				<td align=\"center\">".toCharArray();
    _jsp_string14 = "<td align=\"center\">&nbsp;</td>\r\n					".toCharArray();
  }
}
