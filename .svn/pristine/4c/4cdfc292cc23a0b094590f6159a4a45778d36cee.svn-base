/*
 * JSP generated by Resin Professional 4.0.36 (built Fri, 26 Apr 2013 03:33:09 PDT)
 */

package _jsp._coach;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import java.io.*;
import java.util.*;
import java.text.SimpleDateFormat;
import CP_Classes.vo.*;

public class _adddate__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html");

    // Author: Dai Yong in June 2013
    out.write(_jsp_string0, 0, _jsp_string0.length);
    CP_Classes.Database Database;
    synchronized (pageContext.getSession()) {
      Database = (CP_Classes.Database) pageContext.getSession().getAttribute("Database");
      if (Database == null) {
        Database = new CP_Classes.Database();
        pageContext.getSession().setAttribute("Database", Database);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    CP_Classes.Login logchk;
    synchronized (pageContext.getSession()) {
      logchk = (CP_Classes.Login) pageContext.getSession().getAttribute("logchk");
      if (logchk == null) {
        logchk = new CP_Classes.Login();
        pageContext.getSession().setAttribute("logchk", logchk);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    Coach.CoachDate CoachDate;
    synchronized (pageContext.getSession()) {
      CoachDate = (Coach.CoachDate) pageContext.getSession().getAttribute("CoachDate");
      if (CoachDate == null) {
        CoachDate = new Coach.CoachDate();
        pageContext.getSession().setAttribute("CoachDate", CoachDate);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    Coach.CoachDateGroup CoachDateGroup;
    synchronized (pageContext.getSession()) {
      CoachDateGroup = (Coach.CoachDateGroup) pageContext.getSession().getAttribute("CoachDateGroup");
      if (CoachDateGroup == null) {
        CoachDateGroup = new Coach.CoachDateGroup();
        pageContext.getSession().setAttribute("CoachDateGroup", CoachDateGroup);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    Coach.LoginStatus LoginStatus;
    synchronized (pageContext.getSession()) {
      LoginStatus = (Coach.LoginStatus) pageContext.getSession().getAttribute("LoginStatus");
      if (LoginStatus == null) {
        LoginStatus = new Coach.LoginStatus();
        pageContext.getSession().setAttribute("LoginStatus", LoginStatus);
      }
    }
    out.write(_jsp_string3, 0, _jsp_string3.length);
    
String username=(String)session.getAttribute("username");
int FKCoachDateGroup=LoginStatus.getSelectedDateGroup();

  if (!logchk.isUsable(username)) 
  {

    out.write(_jsp_string4, 0, _jsp_string4.length);
    
 	} 
    else {
 		//System.out.println("Starting Time: "+request.getParameter("StartingTime"));
 		//System.out.println("Ending Time: "+request.getParameter("EndingTime"));
 		if (request.getParameter("add") != null) {
 			if (request.getParameter("inputField") != "") {
 				String date = request.getParameter("inputField");
 				Calendar cal = Calendar.getInstance();
 				Calendar today = Calendar.getInstance();
 				SimpleDateFormat sdf = new SimpleDateFormat("dd-MMM-yyyy");
 				cal.setTime(sdf.parse(date));// all done
 				boolean beforeToday = cal.before(today);

 				System.out.println("date: " + beforeToday);
 				if (beforeToday) {
 					
    out.write(_jsp_string5, 0, _jsp_string5.length);
    
 				}
 				boolean Exist = false;
 				//check time valid
 				Vector v = CoachDate.getAllDate(FKCoachDateGroup);
 				for (int i = 0; i < v.size(); i++) {
 					voCoachDate vo = (voCoachDate) v.elementAt(i);

 					String dates = vo.getDate();
 					//System.out.println("Existing Schedule Name:"+DateGroupName);
 					if (dates.trim().equalsIgnoreCase((date.trim()))) {
 						Exist = true;
 						//System.out.println("Same Coaching Date Exists");
 					}

 				}

 				if (!Exist) {
 					try {
 						boolean add = CoachDate.addDate(FKCoachDateGroup, date);

 						if (add) {LoginStatus.setSelectedDateGroup(FKCoachDateGroup);
 
    out.write(_jsp_string6, 0, _jsp_string6.length);
    
 	} else {
 						}
 					} catch (Exception SE) {
 						System.out.println(SE);
 					}
 				} else {
 
    out.write(_jsp_string7, 0, _jsp_string7.length);
    
 	}

 			} // end of input is valid

 		}//end of adding
 
    out.write(_jsp_string8, 0, _jsp_string8.length);
     } 
    out.write(_jsp_string9, 0, _jsp_string9.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != -7791540776389363938L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("Coach/AddDate.jsp"), 3524701254983056501L, false);
    _caucho_depends.add(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string7;
  private final static char []_jsp_string6;
  private final static char []_jsp_string0;
  private final static char []_jsp_string9;
  private final static char []_jsp_string4;
  private final static char []_jsp_string3;
  private final static char []_jsp_string1;
  private final static char []_jsp_string8;
  private final static char []_jsp_string5;
  private final static char []_jsp_string2;
  static {
    _jsp_string7 = " <script>\r\n	alert(\"Same Coaching Date exists\");\r\n	window.location.href = 'AddDate.jsp';\r\n</script> ".toCharArray();
    _jsp_string6 = " <script>\r\n		opener.location.href = \"DateGroup.jsp\";\r\n		window.close();\r\n	</script> ".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n<html>\r\n<head>\r\n\r\n<title>Add Coaching Date</title>\r\n\r\n<body style=\"background-color: #DEE3EF\">\r\n".toCharArray();
    _jsp_string9 = "\r\n</body>\r\n</html>".toCharArray();
    _jsp_string4 = "\r\n   \r\n<script>\r\n	parent.location.href = \"../index.jsp\";\r\n</script> ".toCharArray();
    _jsp_string3 = "\r\n<link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"jsDatePick_ltr.min.css\" />\r\n\r\n<script type=\"text/javascript\" src=\"jsDatePick.min.1.3.js\"></script>\r\n<script type=\"text/javascript\">\r\n	window.onload = function(){\r\n		new JsDatePick({\r\n			useMode:2,\r\n			target:\"inputField\",\r\n			dateFormat:\"%d-%M-%Y\"\r\n		});\r\n	};\r\n</script>\r\n\r\n\r\n<script language = \"javascript\">\r\nfunction confirmAddDate(form,field)\r\n{\r\n	\r\n	if(field.value != \"\") {\r\n		if(confirm(\"Add Coaching Date?\")) {\r\n			form.action = \"AddDate.jsp?add=1\";\r\n			form.method = \"post\";\r\n			form.submit();\r\n			return true;\r\n		}else\r\n			return false;\r\n	} else {\r\n		if(field.value == \"\") {\r\n			alert(\"Please enter coaching date\");\r\n			form.Date.focus();\r\n		}\r\n		return false;\r\n	}\r\n	return true;\r\n}\r\n\r\nfunction cancelAdd()\r\n{\r\n	window.close();\r\n}\r\n\r\nfunction confirmDelete(){\r\nvar agree=confirm(\"Are you sure you want to add date before today?\");\r\n	if(agree){\r\n 		return true;\r\n	}\r\n		else{ \r\n	return false;\r\n	}\r\n}\r\n\r\n</script>\r\n\r\n".toCharArray();
    _jsp_string1 = "\r\n".toCharArray();
    _jsp_string8 = "\r\n\r\n<form name=\"AddDate\" method=\"post\">\r\n	<p>	\r\n		<br>\r\n			<b><font color=\"#000080\" size=\"3\" face=\"Arial\">Add Coaching Date</font></b>\r\n		<br>\r\n	</p>\r\n  <table border=\"0\" width=\"480\"style='font-size:10.0pt;font-family:Arial'>\r\n    <tr>\r\n      <td width=\"120\" height=\"33\">Coaching Date:</td>\r\n      <td width=\"200\" height=\"33\">\r\n       <input name=\"inputField\" type=\"text\" size=\"12\" id=\"inputField\"  style='font-size:10.0pt;font-family:Arial' id=\"Date\" size=\"10\" maxlength=\"50\"/>\r\n	  </td>\r\n    </tr>\r\n   \r\n  </table>\r\n  <blockquote>\r\n    <blockquote>\r\n      <p>\r\n		<font face=\"Arial\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n		</font>		<font face=\"Arial\" span style=\"font-size: 10.0pt; font-family: Arial\">		\r\n	        <input type=\"button\" name=\"Submit\" value=\"Submit\" onClick=\"confirmAddDate(this.form,this.form.inputField)\"></font><font span style='font-family:Arial'>	    \r\n		</font>\r\n			<font face=\"Arial\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n        </font>\r\n		<font face=\"Arial\" span style=\"font-size: 10.0pt; font-family: Arial\">\r\n			<input name=\"Cancel\" type=\"button\" id=\"Cancel\" value=\"Cancel\" onClick=\"cancelAdd()\">\r\n			</font> </p>\r\n    </blockquote>\r\n  </blockquote>\r\n</form>\r\n".toCharArray();
    _jsp_string5 = " <script>\r\n						if(confirmDelete()){\r\n						}else{\r\n						opener.location.reload(false);\r\n						}\r\n					</script> \r\n					".toCharArray();
    _jsp_string2 = "   \r\n".toCharArray();
  }
}
