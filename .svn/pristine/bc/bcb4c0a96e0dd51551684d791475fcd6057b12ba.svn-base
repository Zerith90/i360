/*
 * JSP generated by Resin-3.1.8 (built Mon, 17 Nov 2008 12:15:21 PST)
 */

package _jsp;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import java.io.*;
import java.text.DateFormat;
import java.util.*;
import java.util.Date;
import java.text.*;
import java.lang.String;
import java.util.Vector;
import java.util.LinkedList;
import CP_Classes.vo.*;
import CP_Classes.SurveyResult;

public class _individualreport__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html");
    response.setCharacterEncoding("UTF-8");
    request.setCharacterEncoding("UTF-8");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      // by lydia Date 05/09/2008 Fix jsp file to support Thai language 
      out.write(_jsp_string1, 0, _jsp_string1.length);
      CP_Classes.Database Database;
      synchronized (pageContext.getSession()) {
        Database = (CP_Classes.Database) pageContext.getSession().getAttribute("Database");
        if (Database == null) {
          Database = new CP_Classes.Database();
          pageContext.getSession().setAttribute("Database", Database);
        }
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      CP_Classes.QuestionnaireReport QR;
      synchronized (pageContext.getSession()) {
        QR = (CP_Classes.QuestionnaireReport) pageContext.getSession().getAttribute("QR");
        if (QR == null) {
          QR = new CP_Classes.QuestionnaireReport();
          pageContext.getSession().setAttribute("QR", QR);
        }
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      CP_Classes.Login logchk;
      synchronized (pageContext.getSession()) {
        logchk = (CP_Classes.Login) pageContext.getSession().getAttribute("logchk");
        if (logchk == null) {
          logchk = new CP_Classes.Login();
          pageContext.getSession().setAttribute("logchk", logchk);
        }
      }
      out.write(_jsp_string3, 0, _jsp_string3.length);
      CP_Classes.User_Jenty User_Jenty;
      synchronized (pageContext.getSession()) {
        User_Jenty = (CP_Classes.User_Jenty) pageContext.getSession().getAttribute("User_Jenty");
        if (User_Jenty == null) {
          User_Jenty = new CP_Classes.User_Jenty();
          pageContext.getSession().setAttribute("User_Jenty", User_Jenty);
        }
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      CP_Classes.User USR;
      synchronized (pageContext.getSession()) {
        USR = (CP_Classes.User) pageContext.getSession().getAttribute("USR");
        if (USR == null) {
          USR = new CP_Classes.User();
          pageContext.getSession().setAttribute("USR", USR);
        }
      }
      out.write(_jsp_string3, 0, _jsp_string3.length);
      CP_Classes.IndividualReport ExcelIndividual;
      synchronized (pageContext.getSession()) {
        ExcelIndividual = (CP_Classes.IndividualReport) pageContext.getSession().getAttribute("ExcelIndividual");
        if (ExcelIndividual == null) {
          ExcelIndividual = new CP_Classes.IndividualReport();
          pageContext.getSession().setAttribute("ExcelIndividual", ExcelIndividual);
        }
      }
      out.write(_jsp_string3, 0, _jsp_string3.length);
      CP_Classes.DevelopmentGuide DG;
      synchronized (pageContext.getSession()) {
        DG = (CP_Classes.DevelopmentGuide) pageContext.getSession().getAttribute("DG");
        if (DG == null) {
          DG = new CP_Classes.DevelopmentGuide();
          pageContext.getSession().setAttribute("DG", DG);
        }
      }
      out.write(_jsp_string3, 0, _jsp_string3.length);
      CP_Classes.Setting Setting;
      synchronized (pageContext.getSession()) {
        Setting = (CP_Classes.Setting) pageContext.getSession().getAttribute("Setting");
        if (Setting == null) {
          Setting = new CP_Classes.Setting();
          pageContext.getSession().setAttribute("Setting", Setting);
        }
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      CP_Classes.AdvanceSettings AdvSetting;
      synchronized (pageContext.getSession()) {
        AdvSetting = (CP_Classes.AdvanceSettings) pageContext.getSession().getAttribute("AdvSetting");
        if (AdvSetting == null) {
          AdvSetting = new CP_Classes.AdvanceSettings();
          pageContext.getSession().setAttribute("AdvSetting", AdvSetting);
        }
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      CP_Classes.Translate trans;
      synchronized (pageContext.getSession()) {
        trans = (CP_Classes.Translate) pageContext.getSession().getAttribute("trans");
        if (trans == null) {
          trans = new CP_Classes.Translate();
          pageContext.getSession().setAttribute("trans", trans);
        }
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      CP_Classes.SurveyResult SR;
      synchronized (pageContext.getSession()) {
        SR = (CP_Classes.SurveyResult) pageContext.getSession().getAttribute("SR");
        if (SR == null) {
          SR = new CP_Classes.SurveyResult();
          pageContext.getSession().setAttribute("SR", SR);
        }
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      CP_Classes.Organization ORG;
      synchronized (pageContext.getSession()) {
        ORG = (CP_Classes.Organization) pageContext.getSession().getAttribute("ORG");
        if (ORG == null) {
          ORG = new CP_Classes.Organization();
          pageContext.getSession().setAttribute("ORG", ORG);
        }
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
       	// added to check whether organisation is a consulting company
// Mark Oei 09 Mar 2010 
      out.write(_jsp_string2, 0, _jsp_string2.length);
      CP_Classes.Create_Edit_Survey CE_Survey;
      synchronized (pageContext.getSession()) {
        CE_Survey = (CP_Classes.Create_Edit_Survey) pageContext.getSession().getAttribute("CE_Survey");
        if (CE_Survey == null) {
          CE_Survey = new CP_Classes.Create_Edit_Survey();
          pageContext.getSession().setAttribute("CE_Survey", CE_Survey);
        }
      }
      out.write(_jsp_string4, 0, _jsp_string4.length);
      out.print((trans.tslt("Please select the options")));
      out.write(_jsp_string5, 0, _jsp_string5.length);
      out.print((trans.tslt("Processing")));
      out.write(_jsp_string6, 0, _jsp_string6.length);
      out.print((trans.tslt("Please select Survey")));
      out.write(_jsp_string7, 0, _jsp_string7.length);
      out.print((trans.tslt("Processing")));
      out.write(_jsp_string8, 0, _jsp_string8.length);
      out.print((trans.tslt("Preview")));
      out.write(_jsp_string9, 0, _jsp_string9.length);
      out.print((trans.tslt("Processing")));
      out.write(_jsp_string10, 0, _jsp_string10.length);
      out.print((trans.tslt("Please select the survey name")));
      out.write(_jsp_string11, 0, _jsp_string11.length);
      out.print((trans.tslt("Preview")));
      out.write(_jsp_string12, 0, _jsp_string12.length);
      out.print((trans.tslt("Preview")));
      out.write(_jsp_string13, 0, _jsp_string13.length);
      
	//response.setHeader("Pragma", "no-cache");
	//response.setHeader("Cache-Control", "no-cache");
	//response.setDateHeader("expires", 0);

	String username=(String)session.getAttribute("username");
	
	Vector nameOfFilesCreated = new Vector<String>();
	Boolean bHasError = false;

	if (!logchk.isUsable(username)) 
	{
      out.write(_jsp_string14, 0, _jsp_string14.length);
        } 
	else 
	{
	    // Changed by Ha 23/05/08: set value to default when button show is clicked
		if(request.getParameter("proceed") != null)
		{ 
			int PKOrg = new Integer(request.getParameter("proceed")).intValue();
		 	logchk.setOrg(PKOrg);
		 	QR.setSurveyID(0);
		 	QR.setDivisionID(0);
		 	QR.setDepartmentID(0);
		 	QR.setGroupID(0);
		 	QR.setTargetID(0);
		}

		/*-----------------------------------end login modification 1--------------------------------------*/
		
		int compID = logchk.getCompany();
		
	
	int OrgID = logchk.getOrg();	
	
	int pkUser = logchk.getPKUser();
	int userType = logchk.getUserType();	// 1= super admin
	int nameSeq = User_Jenty.NameSequence(OrgID);

	Vector surveyList = QR.getSurvey(compID, OrgID);
	Vector divisionList = null;
	Vector departmentList = null;
	Vector groupList  = null;
	Vector targetList = null;
	Vector raterList  = null;
		
	int surveyID = QR.getSurveyID();
	int divisionID = QR.getDivisionID();
	int departmentID = QR.getDepartmentID();
	int groupID  = QR.getGroupID();	
	int target   = QR.getTargetID();
	//Added by Tracy 01 Sep 08
	String chkNormative="";
	//End add by Tracy**
	
	//Added by Chun Yeong 2 Jun 2011
	String chkGroupCPLine="";
	//End add by Chun Yeong**
	//Added by Chun Yeong 13 Jun 2011
	String chkSplit = "";
	//End add by Chun Yeong**
	
	//Added by Albert 9 July 2012
	String chkBreakCPR = "";
	
	//Added by Chun Yeong 1 Aug 2011
	int langType = 0;
	String template = "";
	//End add by Chun Yeong**
	
	if(surveyID != 0)
	{
		divisionList = QR.getDivision(surveyID);
		departmentList = QR.getDepartment(surveyID, divisionID);
		groupList = QR.getGroup(surveyID, QR.getDivisionID(), QR.getDepartmentID());
		targetList = QR.getTarget(surveyID, divisionID, departmentID, groupID);
		
		int count = 0;
		/*while(targetList.next())
		{
			count ++;
		}*/
		count=targetList.size();
	}
	
	if(request.getParameter("cancel") != null)
	{
		int iCancelled = Integer.parseInt(request.getParameter("cancel"));
		ExcelIndividual.setCancelPrint(iCancelled);		// 0=Proceed; 1=Cancelled
	} else {
		ExcelIndividual.setCancelPrint(0);
	}
	
	if(request.getParameter("surveyID") != null) {
		int ID = Integer.parseInt(request.getParameter("surveyID"));
		QR.setSurveyID(ID);
		QR.setDivisionID(0);
		QR.setDepartmentID(0);
		QR.setGroupID(0);
		QR.setRaterID(0);
		QR.setTargetID(0);	
		QR.setPageLoad(1);	
		
		divisionList = QR.getDivision(ID);
		departmentList = QR.getDepartment(ID);
		groupList = QR.getGroup(ID, QR.getDivisionID(), QR.getDepartmentID());
		targetList = QR.getTarget(ID,  QR.getDivisionID(),  QR.getDepartmentID(), QR.getGroupID());
	}
	else if(request.getParameter("groupID") != null) {
		int group = Integer.parseInt(request.getParameter("groupID"));
		QR.setGroupID(group);
		QR.setRaterID(0);
		QR.setTargetID(0);			
		targetList = QR.getTarget(QR.getSurveyID(),  QR.getDivisionID(),  QR.getDepartmentID(), QR.getGroupID());
	} 
	else if(request.getParameter("targetID") != null) {
		int ID = QR.getSurveyID();
		int targetID = Integer.parseInt(request.getParameter("targetID"));
		QR.setTargetID(targetID);
		QR.setRaterID(0);
		raterList = QR.getRater(surveyID, groupID, targetID);
	}
	
	if (request.getParameter("div") != null)
	{
		QR.setDepartmentID(0);
		QR.setGroupID(0);
		int ID = QR.getSurveyID();
		int div = Integer.parseInt(request.getParameter("selDiv"));
		QR.setDivisionID(div);
		departmentList = QR.getDepartment(ID, QR.getDivisionID());
		groupList = QR.getGroup(ID, QR.getDivisionID(), QR.getDepartmentID());
		targetList = QR.getTarget(ID,  QR.getDivisionID(),  QR.getDepartmentID(), QR.getGroupID());
	}
	
	if(request.getParameter("dept") != null)
	{
		QR.setGroupID(0);
		int ID = QR.getSurveyID();
		int dept = Integer.parseInt(request.getParameter("selDept"));
		QR.setDepartmentID(dept);
		groupList = QR.getGroup(ID, QR.getDivisionID(), QR.getDepartmentID());
		targetList = QR.getTarget(ID,  QR.getDivisionID(),  QR.getDepartmentID(), QR.getGroupID());
	}
		
		if(request.getParameter("open") != null)
		{
			int type = Integer.parseInt(request.getParameter("open"));
			
			surveyID = Integer.parseInt(request.getParameter("survey"));
			divisionID = QR.getDivisionID();
			departmentID = QR.getDepartmentID();
			groupID = QR.getGroupID();
			//Added getting Normative option by Tracy 01 Sep 08
		
			if (request.getParameter("chkNormative")!= null) {
				chkNormative= request.getParameter("chkNormative");
			}
			//End add by Tracy 01 Sep 08***
			
			//Added to get Group CP Line option by Chun Yeong 2 Jun 2011
			if (request.getParameter("chkGroupCPLine")!= null) {
				chkGroupCPLine= request.getParameter("chkGroupCPLine");
			}
			//End to get Group CP Line option by Chun Yeong 2 Jun 2011***

			//Added to get follow template option by Chun Yeong 13 Jun 2011
			if (request.getParameter("chkSplit")!=null) {
				chkSplit= request.getParameter("chkSplit");
			}
			//End to get follow template option by Chun Yeong 13 Jun 2011***
			
			//Added to get the breakCPR option by Albert 09 July 2012
			if (request.getParameter("chkBreakCPR")!=null) {
				chkBreakCPR= request.getParameter("chkBreakCPR");
			}
			//end to get breakCPR option
			
			//Added to get language option by Chun Yeong 1 Aug 2011
			if (request.getParameter("langType")!=null) {
				langType = Integer.parseInt(request.getParameter("langType"));
			}

			if (request.getParameter("template")!=null) {
				template = request.getParameter("template");
			}
			//End to get language option by Chun Yeong 1 Aug 2011***
			
			//Added checking null condition by Ha 16/05/08
			if (request.getParameter("targetName") != null)
			{
					target = Integer.parseInt(request.getParameter("targetName"));					
					
					QR.setTargetID(target);
										
					String surveyName = "";
					int iSurveyLevel = 0;	// 0=Comp, 1=KB
					votblSurvey voSurvey = SR.SurveyInfo(surveyID);
				
					surveyName = voSurvey.getSurveyName();	// Get username (for sending of email)
					iSurveyLevel = voSurvey.getLevelOfSurvey();
					
					int iNameSeq = ORG.getNameSeq(logchk.getOrg());
					String sUserEmail = User_Jenty.getUserEmail(logchk.getPKUser());	// Email of the person who gen the report
					
					String [] userInfo = USR.getUserDetail(target, iNameSeq);	// Get target's fullname (for sending of email)
					String targetName = userInfo[0] + " " + userInfo[1];
					
					boolean bDG = false;
					boolean bDMap = false;
					
					if(request.getParameter("chkDevGuide") != null)
						bDG = true;
						
					if(request.getParameter("chkDevMap") != null)
					{
						if(iSurveyLevel != 0)
							bDMap = true;
						else
							bDMap = false;				
					}
					
					boolean bMoreThanOne = false; // Flag to check whether user generate more than 1 type of report
					
					if( (type == 1 || type == 2) && bDG == true && bDMap == true )
						bMoreThanOne = true;	// Ind, DG & DMap chosen
					else if( (type == 1 || type == 2) && bDG == true )
						bMoreThanOne = true;	// Ind & DG chosen
					else if( (type == 1 || type == 2) && bDMap == true )
						bMoreThanOne = true;	// Ind & DMap chosen
					else if( bDG == true && bDMap == true )
						bMoreThanOne = true;	// DG & DMap chosen
					else
						bMoreThanOne = false;
					
					// If user doesn't specify a report to generate, prompt message
					if(type == 0 && bDG == false && bDMap == false)
					{
				
      out.write(_jsp_string15, 0, _jsp_string15.length);
      	}
					else
					{
						if(target != 0)
						{
							Date timeStamp = new java.util.Date();
							Vector Target = new Vector();
							SurveyResult s = new SurveyResult();
							SimpleDateFormat dFormat = new SimpleDateFormat("ddMMyyHHmmss");
							String temp  =  dFormat.format(timeStamp);
												
							if(type == 1 || type == 2)
							{
								timeStamp = new java.util.Date();
								dFormat = new SimpleDateFormat("ddMMyyHHmmss");
								temp  =  dFormat.format(timeStamp);
		
								String file_name = "Individual Report for " + targetName+ "(" + temp + ").xls";
								//Added by Ha 17/06/08 to automatically calculate
								//when generating report
								//Re-edit by Ha 04/07/08 to calculate for all target of that group
								Target = s.TargetID(surveyID, divisionID, departmentID, groupID);
			
								for (int j = 0; j < Target.size(); j++)
								{
									voUser vo = (voUser)Target.get(j);
									if (!s.checkCalculationStatusComplete(vo.getTargetLoginID(), surveyID ,divisionID, departmentID, groupID))
									{						
										 if (!s.isAllRaterRated(surveyID, groupID, vo.getTargetLoginID()))                	 
							                 s.CalculateStatus(vo.getTargetLoginID(),surveyID, divisionID, departmentID, groupID, 1);
							             else
							                 s.CalculateStatus(vo.getTargetLoginID(),surveyID, divisionID, departmentID, groupID, 0);						
									}
								}	
								
								//Edited printing ind report with Normative option by Tract 01 Sep 08
								//Edited printing ind report with Group CP Line option by Chun Yeong 2 Jun 2011
								//Edited allowing Split option, Chun Yeong 13 Jun 2011
								//Edited allowing Language option, Chun Yeong 1 Aug 2011
								//Edited allowing Template option, Chun Yeong 1 Aug 2011
								ExcelIndividual.Report(surveyID, target, pkUser, file_name, type, chkNormative, chkGroupCPLine, chkSplit, chkBreakCPR, langType, template);
								//End edit by Tracy 01 Sep 08
								
								System.out.println("OKKK");
				
								if(bMoreThanOne == false)
								{
									System.out.println("bMoreThanOne = false, Only 1 report is selected");
									String output = Setting.getReport_Path() + "\\" + file_name;
									nameOfFilesCreated.add(output);
									File f = new File (output);
									System.out.println("OUTPUT = " + output );
									//set the content type(can be excel/word/powerpoint etc..)
									response.reset();
									response.setContentType ("application/xls");
									
									// set the header and also the Name by which user will be prompted to save
									// Updated filename by which user will be prompted to save to this pattern "IndividualReport_<FamilyName><GivenName>.xls", Desmond 28 Oct 09
									response.addHeader ("Content-Disposition", "attachment;filename=\"IndividualReport_"+userInfo[0]+userInfo[1]+".xls\"");
		
									//get the file name
									String name = f.getName().substring(f.getName().lastIndexOf("/") + 1,f.getName().length());
									System.out.println("NAME = " + name);
									InputStream in = new FileInputStream(f);
									System.out.println("INPUTSTREAM = " + in);
									ServletOutputStream outs = response.getOutputStream();
									int bit = 256;
									int i = 0;
									try {
										while ((bit) >= 0) {
											bit = in.read();
											outs.write(bit);
										}
									} catch (IOException ioe) {
										ioe.printStackTrace(System.out);
									}
						
									outs.flush();
									outs.close();
									in.close();
								
								}	// END if(bMoreThanOne == false)
								else
								{
									// User chose to print more than 1 type of report, send through email instead
									ExcelIndividual.sendIndividualReport(targetName, surveyName, sUserEmail, file_name, surveyID);
								}
						
							}
							
							// Development Guide
							if(bDG == true)
							{	
								String file_name = "Development Guide" + temp + ".xls";	
								System.out.println("[IndividualReport] DG. Survey = " + surveyID + ", Target = " + target);
								DG.SelTarget(surveyID, target, pkUser, file_name);
								
								if(bMoreThanOne == false)
								{					
									String output = Setting.getReport_Path() + "\\" + file_name;
									nameOfFilesCreated.add(output);
									File f = new File (output);
									
									response.reset();
									response.setContentType ("application/xls");
									response.addHeader ("Content-Disposition", "attachment;filename=\"Development Guide.xls\"");
								
									//get the file name
									String name = f.getName().substring(f.getName().lastIndexOf("/") + 1,f.getName().length());
									
									InputStream in = new FileInputStream(f);
									ServletOutputStream outs = response.getOutputStream();
									
									int bit = 256;
									int i = 0;
						
									try {
										while ((bit) >= 0) {
											bit = in.read();
											outs.write(bit);
										}
									} catch (IOException ioe) {
										ioe.printStackTrace(System.out);
									}
					
									outs.flush();
									outs.close();
									in.close();
								}
								else
								{
									// User chose to print more than 1 type of report, send through email instead
									DG.sendDevelopmentGuide(targetName, surveyName, sUserEmail, file_name, surveyID);
								}
								
							}
							
							// Development Map
							if(bDMap == true)
							{	
								String file_name = "Development Map" + temp + ".xls";				
								boolean bBreakdown = AdvSetting.bIsBreakdown(surveyID);
								
								System.out.println("[IndividualReport] DMap. Survey = " + surveyID + ", Target = " + target);
								ExcelIndividual.reportDevelopmentMap(surveyID, target, file_name, bBreakdown);
								
								if(bMoreThanOne == false)
								{						
									String output = Setting.getReport_Path() + "\\" + file_name;
									nameOfFilesCreated.add(output);
									File f = new File (output);
									
									response.reset();
									response.setContentType ("application/xls");
									response.addHeader ("Content-Disposition", "attachment;filename=\"Development Map.xls\"");
								
									//get the file name
									String name = f.getName().substring(f.getName().lastIndexOf("/") + 1,f.getName().length());
									
									InputStream in = new FileInputStream(f);
									ServletOutputStream outs = response.getOutputStream();
									
									int bit = 256;
									int i = 0;
						
									try {
										while ((bit) >= 0) {
											bit = in.read();
											outs.write(bit);
										}
									} catch (IOException ioe) {
										ioe.printStackTrace(System.out);
									}
					
									outs.flush();
									outs.close();
									in.close();
								}
								else
								{
									// User chose to print more than 1 type of report, send through email instead
									ExcelIndividual.sendDevelopmentMap(targetName, surveyName, sUserEmail, file_name, surveyID);
								}
								
							}	
						} else {	//generate multiple reports here (rater != 0)
							
							target = Integer.parseInt(request.getParameter("targetName"));
							QR.setTargetID(target);
							divisionID = Integer.parseInt(request.getParameter("selDiv"));
							departmentID = Integer.parseInt(request.getParameter("selDept"));
							groupID = Integer.parseInt(request.getParameter("groupName"));
							QR.setDivisionID(divisionID);
							QR.setDepartmentID(departmentID);
							QR.setGroupID(groupID);
											
							int total = 1; //total report generated
							String path = "C:/tomcat/webapps/i360/Report/";
							/*
							System.out.println("Surv = " + surveyID);
							System.out.println("Div = " + divisionID);
							System.out.println("Dept = " + departmentID);
							System.out.println("Grp = " + groupID);
							*/
							// extract all targets under this group
							Vector allTarget = ExcelIndividual.AllTargets(surveyID, divisionID, departmentID, groupID, OrgID);
							int totalReports = allTarget.size();
														
							int totalGenerated = 0;
							
							for(int i=0; i<totalReports; i++) 
							{
								// for delay purpose
								if(i != 0)
									for(int j=0;j<100000;j++);
						
								if (ExcelIndividual.getCancelPrint() == 0)
								{
									//generate individual report.
									String [] data = (String[])(allTarget.elementAt(i));
									surveyName 	 = data[0];
									int targetID = Integer.parseInt(data[1]);
									targetName	 = data[2];					
				
      out.write(_jsp_string16, 0, _jsp_string16.length);
      out.print((targetName));
      out.write(_jsp_string17, 0, _jsp_string17.length);
      out.print((total));
      out.write(_jsp_string18, 0, _jsp_string18.length);
      out.print((totalReports));
      out.write(_jsp_string19, 0, _jsp_string19.length);
      				
									Date timeStamp = new java.util.Date();
									SimpleDateFormat dFormat = new SimpleDateFormat("ddMMyyHHmmss");
									String temp  =  dFormat.format(timeStamp);
									
									//try {
									request.getSession().setMaxInactiveInterval(1800);
									
									if(type == 1 || type == 2)
									{
										String file_name = "Individual Report for " + targetName + " (" + temp + ").xls";
										
										nameOfFilesCreated.add(file_name);
										
										System.out.println("Generating Individual Report for " + targetName + " (" + total + " of " + totalReports + ")....");
										
										//Added by Ha 19/06/08 to automatically calculate if user choose to generate report which has not been calculated yet
										//Re-edit by Ha 04/07/08 to calculate for all target of that group
										Vector Target = new Vector();
										SurveyResult s = new SurveyResult();								
											
										Target = s.TargetID(surveyID, divisionID, departmentID, groupID);
										
										for (int j = 0; j < Target.size(); j++)
										{
											voUser vo = (voUser)Target.get(j);
											if (!s.checkCalculationStatusComplete(vo.getTargetLoginID(), surveyID ,divisionID, departmentID, groupID))
											{						
												 if (!s.isAllRaterRated(surveyID, groupID, vo.getTargetLoginID()))                	 
									                 s.CalculateStatus(vo.getTargetLoginID(),surveyID, divisionID, departmentID, groupID, 1);
									             else
									                 s.CalculateStatus(vo.getTargetLoginID(),surveyID, divisionID, departmentID, groupID, 0);						
											}
										}	
										
										//Edited printing ind report with Normative option By Tracy 01 Sep 08***
										//Edited printing ind report with Group CP Line option by Chun Yeong 2 Jun 2011
										//Edited allowing Split option, Chun Yeong 13 Jun 2011
										//Edited allowing Language option, Chun Yeong 1 Aug 2011
										//Edited allowing Template option, Chun Yeong 1 Aug 2011
										ExcelIndividual.Report(surveyID, targetID, pkUser, file_name, type, chkNormative, chkGroupCPLine, chkSplit, chkBreakCPR, langType, template);									
										// End edit by Tracy****
										System.out.println("Completed Individual Report for " + targetName + " (" + total + " of " + totalReports + ")....");
										totalGenerated++;
									}
									
									if(bDG == true)
									{
										String file_name = "Development Guide for " + targetName + " (" + temp + ").xls";
										
										nameOfFilesCreated.add(file_name);
										
										System.out.println("Generating Development Guide for " + targetName + " (" + total + " of " + totalReports + ")....");
										DG.SelTarget(surveyID, targetID, pkUser, file_name);
										System.out.println("Completed Development Guide for " + targetName + " (" + total + " of " + totalReports + ")....");
										totalGenerated++;
									}
									
									if(bDMap == true)
									{
										String file_name = "Development Map for " + targetName + " (" + temp + ").xls";
										boolean bBreakdown = AdvSetting.bIsBreakdown(surveyID);
										
										nameOfFilesCreated.add(file_name);
										
										System.out.println("Generating Development Map for " + targetName + " (" + total + " of " + totalReports + ")....");
										ExcelIndividual.reportDevelopmentMap(surveyID, targetID, file_name, bBreakdown);
										System.out.println("Completed Development Map for " + targetName + " (" + total + " of " + totalReports + ")....");
										totalGenerated++;
									}
									
									//} catch (Exception E) { System.out.println(E.getMessage());}					
				
      out.write(_jsp_string20, 0, _jsp_string20.length);
      out.print((targetName));
      out.write(_jsp_string17, 0, _jsp_string17.length);
      out.print((total));
      out.write(_jsp_string18, 0, _jsp_string18.length);
      out.print((totalReports));
      out.write(_jsp_string21, 0, _jsp_string21.length);
      
									total++;
								} else {
									System.out.println("Report generation has been cancelled.\nThe generated reports are stored in " + path) ;
									i = totalReports;	// Stop generating, break the for loop
								}
								
							}	// end for
				
      out.write(_jsp_string22, 0, _jsp_string22.length);
      out.print((totalGenerated));
      out.write(_jsp_string23, 0, _jsp_string23.length);
      out.print((path));
      out.write(_jsp_string24, 0, _jsp_string24.length);
      
						}	// end if (target != 0)					
					} // END if(type == 0 && bDG == false && bDMap == false)
			}
		}	// end if (request.getParameter("open") != null)
		
		//if (nameOfFilesCreated.size() != 0) {
			//bHasError = ExcelIndividual.ZipAllFiles(nameOfFilesCreated);
		//}

      out.write(_jsp_string25, 0, _jsp_string25.length);
      
	if (bHasError) {

      out.write(_jsp_string26, 0, _jsp_string26.length);
      out.print(( trans.tslt("Generation process completed UnSuccessfully, ")));
      out.write(_jsp_string27, 0, _jsp_string27.length);
      out.print(( trans.tslt("Please see ")));
      out.write(_jsp_string28, 0, _jsp_string28.length);
      out.print(( trans.tslt("for the details of generation failed data")));
      out.write(_jsp_string29, 0, _jsp_string29.length);
      
	}

      out.write(_jsp_string30, 0, _jsp_string30.length);
      out.print((trans.tslt("Individual Report")));
      out.write(_jsp_string31, 0, _jsp_string31.length);
      out.print((trans.tslt("Organisation")));
      out.write(_jsp_string32, 0, _jsp_string32.length);
      
// Added to check whether organisation is also a consulting company
// if yes, will display a dropdown list of organisation managed by this company
// else, it will display the current organisation only
// Mark Oei 09 Mar 2010
	String [] UserDetail = new String[14];
	UserDetail = CE_Survey.getUserDetail(logchk.getPKUser());
	boolean isConsulting = true;
	isConsulting = ORG.isConsulting(UserDetail[10]); // check whether organisation is a consulting company 
	if (isConsulting){ 
      out.write(_jsp_string33, 0, _jsp_string33.length);
      out.print((trans.tslt("All")));
      out.write(_jsp_string34, 0, _jsp_string34.length);
      
		Vector vOrg = logchk.getOrgList(logchk.getCompany());

		for(int i=0; i<vOrg.size(); i++)
		{
			votblOrganization vo = (votblOrganization)vOrg.elementAt(i);
			int PKOrg = vo.getPKOrganization();
			String OrgName = vo.getOrganizationName();

			if(logchk.getOrg() == PKOrg)
			{ 
      out.write(_jsp_string35, 0, _jsp_string35.length);
      out.print((PKOrg));
      out.write(_jsp_string36, 0, _jsp_string36.length);
      out.print((OrgName));
      out.write(_jsp_string37, 0, _jsp_string37.length);
       } else { 
      out.write(_jsp_string35, 0, _jsp_string35.length);
      out.print((PKOrg));
      out.write('>');
      out.print((OrgName));
      out.write(_jsp_string37, 0, _jsp_string37.length);
      	}	
		} 
	} else { 
      out.write(_jsp_string38, 0, _jsp_string38.length);
      out.print((logchk.getSelfOrg()));
      out.write('>');
      out.print((UserDetail[10]));
      out.write(_jsp_string34, 0, _jsp_string34.length);
       } // End of isConsulting 
      out.write(_jsp_string39, 0, _jsp_string39.length);
      out.print((trans.tslt("Survey")));
      out.write(_jsp_string40, 0, _jsp_string40.length);
       int t = 0; 
      out.write(_jsp_string41, 0, _jsp_string41.length);
      out.print((t));
      out.write('>');
      out.print((trans.tslt("Please select one")));
      out.write(_jsp_string42, 0, _jsp_string42.length);
      
	  /*********************
	   * Edit By James 14-Nov 2007
	   ***********************/
	
	 // while(surveyList.next()) {
	 for(int i=0;i<surveyList.size();i++){
	  votblSurvey voS=(votblSurvey)surveyList.elementAt(i);
			int ID = voS.getSurveyID();
			String name = voS.getSurveyName();
	  		
			int selectedSurvey = QR.getSurveyID();
			
			if(selectedSurvey != 0 && ID == selectedSurvey) {
	  
      out.write(_jsp_string43, 0, _jsp_string43.length);
      out.print((selectedSurvey));
      out.write(_jsp_string36, 0, _jsp_string36.length);
      out.print((name));
      out.write(_jsp_string42, 0, _jsp_string42.length);
       } else {  
      out.write(_jsp_string43, 0, _jsp_string43.length);
      out.print((ID));
      out.write('>');
      out.print((name));
      out.write(_jsp_string44, 0, _jsp_string44.length);
       }
		   } 
	  
      out.write(_jsp_string45, 0, _jsp_string45.length);
      out.print((trans.tslt("Division")));
      out.write(_jsp_string46, 0, _jsp_string46.length);
      out.print((t));
      out.write('>');
      out.print((trans.tslt("All")));
      out.write(_jsp_string42, 0, _jsp_string42.length);
       
	  if(divisionList != null) {
	  /*********************
	   * Edit By James 14-Nov 2007
	   ***********************/
		  
		  //	while(divisionList.next()) {
		  for(int j=0;j<divisionList.size();j++){
		   voDivision voD=(voDivision)divisionList.elementAt(j);
		  	
				
	  			int ID = voD.getPKDivision();
				String name = voD.getDivisionName();
				int selectedDiv = QR.getDivisionID();

				if(selectedDiv != 0 && ID == selectedDiv) {
	  
      out.write(_jsp_string47, 0, _jsp_string47.length);
      out.print((ID));
      out.write(_jsp_string36, 0, _jsp_string36.length);
      out.print((name));
      out.write(_jsp_string42, 0, _jsp_string42.length);
       		} else { 
	  				
	  
      out.write(_jsp_string48, 0, _jsp_string48.length);
      out.print((ID));
      out.write('>');
      out.print((name));
      out.write(_jsp_string49, 0, _jsp_string49.length);
       		}
			} 
		}
		
      out.write(_jsp_string45, 0, _jsp_string45.length);
      out.print((trans.tslt("Department")));
      out.write(_jsp_string50, 0, _jsp_string50.length);
      out.print((t));
      out.write('>');
      out.print((trans.tslt("All")));
      out.write(_jsp_string42, 0, _jsp_string42.length);
       
	 if(departmentList != null) { 
	 	   /*********************
			* Edit By James 14-Nov 2007
			***********************/
	
		  	//while(departmentList.next()) {
	  			for(int k=0;k<departmentList.size();k++){
				voDepartment voDepartment=(voDepartment)departmentList.elementAt(k);
				
				
				//voDepartment.getLocation();
				int ID = voDepartment.getPKDepartment();
				String name = voDepartment.getDepartmentName();
				int selectedDept = QR.getDepartmentID();
			
				if(selectedDept != 0 && ID == selectedDept) {
	  
      out.write(_jsp_string43, 0, _jsp_string43.length);
      out.print((ID));
      out.write(_jsp_string36, 0, _jsp_string36.length);
      out.print((name));
      out.write(_jsp_string51, 0, _jsp_string51.length);
       } else 
			{ 
		
      out.write(_jsp_string47, 0, _jsp_string47.length);
      out.print((ID));
      out.write('>');
      out.print((name));
      out.write(_jsp_string52, 0, _jsp_string52.length);
      	}
		} 
	}
      out.write(_jsp_string45, 0, _jsp_string45.length);
      out.print((trans.tslt("Group")));
      out.write(_jsp_string53, 0, _jsp_string53.length);
      out.print((t));
      out.write('>');
      out.print((trans.tslt("All")));
      out.write(_jsp_string42, 0, _jsp_string42.length);
       

	  if(groupList != null) { 
			/*********************
			* Edit By James 14-Nov 2007
			***********************/
	
		  	//while(groupList.next()) {
			for(int l=0;l<groupList.size();l++){
			voGroup voGroup=(voGroup)groupList.elementAt(l);
				
	  			int ID = voGroup.getPKGroup();
				String name = voGroup.getGroupName();
				int selectedGroup = QR.getGroupID();
			
				if(selectedGroup != 0 && ID == selectedGroup) {
	  
      out.write(_jsp_string43, 0, _jsp_string43.length);
      out.print((ID));
      out.write(_jsp_string36, 0, _jsp_string36.length);
      out.print((name));
      out.write(_jsp_string51, 0, _jsp_string51.length);
       } else { 
      out.write(_jsp_string54, 0, _jsp_string54.length);
      out.print((ID));
      out.write('>');
      out.print((name));
      out.write(_jsp_string52, 0, _jsp_string52.length);
       }
			} }
      out.write(_jsp_string55, 0, _jsp_string55.length);
      out.print((trans.tslt("Target")));
      out.write(_jsp_string56, 0, _jsp_string56.length);
      out.print((t));
      out.write('>');
      out.print((trans.tslt("All")));
      out.write(_jsp_string42, 0, _jsp_string42.length);
       	if(targetList != null) {
			/*********************
			* Edit By James 14-Nov 2007
			***********************/
	
	  		//	while(targetList.next()) {
			for(int m=0;m<targetList.size();m++){
	     votblAssignment voTarget=(votblAssignment)targetList.elementAt(m);
			int loginID = voTarget.getTargetLoginID();
				String name=voTarget.getFullName();
				int selectedTarget = QR.getTargetID();
		
				if(loginID == selectedTarget) {
	  
      out.write(_jsp_string57, 0, _jsp_string57.length);
      out.print((loginID));
      out.write(_jsp_string36, 0, _jsp_string36.length);
      out.print((name));
      out.write(_jsp_string58, 0, _jsp_string58.length);
       } else { 
      out.write(_jsp_string43, 0, _jsp_string43.length);
      out.print((loginID));
      out.write('>');
      out.print((name));
      out.write(_jsp_string52, 0, _jsp_string52.length);
       }
			} 
			}
      out.write(_jsp_string59, 0, _jsp_string59.length);
      out.print((trans.tslt("Language")));
      out.write(_jsp_string60, 0, _jsp_string60.length);
       	//Added a new language drop down box, Chun Yeong 1 Aug 2011
		String[] languages = {"English", "Indonesian", "Thai"};
		for(int i=0; i<languages.length; i++) {
		
      out.write(_jsp_string61, 0, _jsp_string61.length);
      out.print((i));
      out.write('>');
      out.print((languages[i]));
      out.write(_jsp_string62, 0, _jsp_string62.length);
      
			} //End for loop, language array
			//End added a new language drop down box, Chun Yeong 1 Aug 2011
		
      out.write(_jsp_string63, 0, _jsp_string63.length);
      out.print((trans.tslt("Template")));
      out.write(_jsp_string64, 0, _jsp_string64.length);
      
	  		//Added display of templates of different languages, Chun Yeong 1 Aug 2011
	  		File dir = new File(Setting.getOOReportTemplatePath());
			String[] templates = dir.list();
			String defTemplate = "Individual Report Template_General_CPR.xls"; //default template in English
			String hidTemplate = "Individual Report Template.xls"; //template not used anymore in Individual Report but used in MOE Importance
			
			templates = dir.list(new FilenameFilter() {
			public boolean accept(File dir, String name) {
				return (name.startsWith("Individual Report Template") && !name.toLowerCase().contains("no_normative") && !name.toLowerCase().contains("nocpr") && !name.toLowerCase().contains("sps") && !name.toLowerCase().contains("old") && !name.toLowerCase().contains("allianz") && !name.toLowerCase().contains("combined"));
			}});
			
			String sel = "";
			
			for(int i=0; i<templates.length; i++) {
				if(templates[i].equalsIgnoreCase(defTemplate) ) { 
					sel = "selected";
				} //End if the default template is the same as the current template, Chun Yeong 1 Aug 2011
				if(templates[i].equalsIgnoreCase(hidTemplate) ) { 
					continue;
				} //End if the default template is the same as the current template, Chun Yeong 1 Aug 2011
	  
      out.write(_jsp_string65, 0, _jsp_string65.length);
      out.print((templates[i]));
      out.write(_jsp_string66, 0, _jsp_string66.length);
      out.print((sel));
      out.write('>');
      out.print((templates[i]));
      out.write(_jsp_string67, 0, _jsp_string67.length);
      
				sel = "";
			} // End for loop, templates array
			//End of display of templates of different languages, Chun Yeong 1 Aug 2011
	  
      out.write(_jsp_string68, 0, _jsp_string68.length);
      //Denise 30/12/2009 change default report to individual with normative
      out.write(_jsp_string69, 0, _jsp_string69.length);
      
				if(CE_Survey.getBreakCPR(QR.getSurveyID()) == 1){
				
      out.write(_jsp_string70, 0, _jsp_string70.length);
      
				} else{
				
      out.write(_jsp_string71, 0, _jsp_string71.length);
      
				}
				
      out.write(_jsp_string72, 0, _jsp_string72.length);
      	
	if(!logchk.getCompanyName().equalsIgnoreCase("demo") || userType == 1)
	{

      out.write(_jsp_string73, 0, _jsp_string73.length);
      out.print((trans.tslt("Preview")));
      out.write(_jsp_string74, 0, _jsp_string74.length);
      out.print((trans.tslt("Cancel")));
      out.write(_jsp_string75, 0, _jsp_string75.length);
      		
		
	} else { 
	


      out.write(_jsp_string76, 0, _jsp_string76.length);
      out.print((trans.tslt("Preview")));
      out.write(_jsp_string77, 0, _jsp_string77.length);
      out.print((trans.tslt("Cancel")));
      out.write(_jsp_string78, 0, _jsp_string78.length);
      	
	} // end if(compID != 2 || userType == 1) 
      out.write(_jsp_string79, 0, _jsp_string79.length);
       }

      out.write(_jsp_string80, 0, _jsp_string80.length);
      // by lydia Date 05/09/2008 Fix jsp file to support Thai language 
      out.write(_jsp_string81, 0, _jsp_string81.length);
      
	Calendar c = Calendar.getInstance();
	int year = c.get(Calendar.YEAR);

      out.write(_jsp_string82, 0, _jsp_string82.length);
       // Denise 05/01/2010 update new email address 
      out.write(_jsp_string83, 0, _jsp_string83.length);
      out.print((year));
      out.write(_jsp_string84, 0, _jsp_string84.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 1886798272571451039L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("IndividualReport.jsp"), -2658034179220685326L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("Footer.jsp"), -6500873733011061252L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string20;
  private final static char []_jsp_string17;
  private final static char []_jsp_string11;
  private final static char []_jsp_string62;
  private final static char []_jsp_string23;
  private final static char []_jsp_string19;
  private final static char []_jsp_string45;
  private final static char []_jsp_string59;
  private final static char []_jsp_string16;
  private final static char []_jsp_string66;
  private final static char []_jsp_string0;
  private final static char []_jsp_string24;
  private final static char []_jsp_string75;
  private final static char []_jsp_string37;
  private final static char []_jsp_string80;
  private final static char []_jsp_string48;
  private final static char []_jsp_string39;
  private final static char []_jsp_string55;
  private final static char []_jsp_string53;
  private final static char []_jsp_string22;
  private final static char []_jsp_string38;
  private final static char []_jsp_string73;
  private final static char []_jsp_string9;
  private final static char []_jsp_string33;
  private final static char []_jsp_string65;
  private final static char []_jsp_string43;
  private final static char []_jsp_string40;
  private final static char []_jsp_string49;
  private final static char []_jsp_string14;
  private final static char []_jsp_string77;
  private final static char []_jsp_string34;
  private final static char []_jsp_string6;
  private final static char []_jsp_string30;
  private final static char []_jsp_string52;
  private final static char []_jsp_string35;
  private final static char []_jsp_string44;
  private final static char []_jsp_string36;
  private final static char []_jsp_string26;
  private final static char []_jsp_string60;
  private final static char []_jsp_string83;
  private final static char []_jsp_string18;
  private final static char []_jsp_string47;
  private final static char []_jsp_string42;
  private final static char []_jsp_string72;
  private final static char []_jsp_string21;
  private final static char []_jsp_string28;
  private final static char []_jsp_string58;
  private final static char []_jsp_string4;
  private final static char []_jsp_string84;
  private final static char []_jsp_string61;
  private final static char []_jsp_string57;
  private final static char []_jsp_string8;
  private final static char []_jsp_string67;
  private final static char []_jsp_string69;
  private final static char []_jsp_string82;
  private final static char []_jsp_string15;
  private final static char []_jsp_string25;
  private final static char []_jsp_string27;
  private final static char []_jsp_string12;
  private final static char []_jsp_string78;
  private final static char []_jsp_string29;
  private final static char []_jsp_string31;
  private final static char []_jsp_string74;
  private final static char []_jsp_string56;
  private final static char []_jsp_string13;
  private final static char []_jsp_string51;
  private final static char []_jsp_string10;
  private final static char []_jsp_string7;
  private final static char []_jsp_string79;
  private final static char []_jsp_string32;
  private final static char []_jsp_string64;
  private final static char []_jsp_string2;
  private final static char []_jsp_string54;
  private final static char []_jsp_string76;
  private final static char []_jsp_string68;
  private final static char []_jsp_string41;
  private final static char []_jsp_string3;
  private final static char []_jsp_string1;
  private final static char []_jsp_string5;
  private final static char []_jsp_string46;
  private final static char []_jsp_string63;
  private final static char []_jsp_string50;
  private final static char []_jsp_string71;
  private final static char []_jsp_string81;
  private final static char []_jsp_string70;
  static {
    _jsp_string20 = "\r\n									<script>\r\n										window.status = \"Completed for \"+ \"".toCharArray();
    _jsp_string17 = " (".toCharArray();
    _jsp_string11 = " !\");\r\n		return false;\r\n	}\r\n	*/\r\n	}//End of checkField\r\n}\r\n\r\nfunction cancelPrint(form)\r\n{\r\n	form.btnOpen.value = \"".toCharArray();
    _jsp_string62 = "</option>\r\n		".toCharArray();
    _jsp_string23 = " Report(s) Generated Successfully.\\nThe generated reports are stored in ".toCharArray();
    _jsp_string19 = ".............)\";\r\n									</script>\r\n				".toCharArray();
    _jsp_string45 = "\r\n      </select></td>\r\n    </tr>\r\n    <tr>\r\n      <td align=\"right\" bordercolor=\"#FFFFCC\">".toCharArray();
    _jsp_string59 = "\r\n      </select></td>\r\n    </tr>\r\n    <tr>\r\n    	<td align=\"right\" bordercolor=\"#FFFFCC\" style=\"border-bottom-style: none; border-bottom-width: medium\">".toCharArray();
    _jsp_string16 = "\r\n									<script>\r\n										window.status = \"Generating Individual Report for \" + \"".toCharArray();
    _jsp_string66 = "\" ".toCharArray();
    _jsp_string0 = "  \r\n\r\n<html>\r\n<head>\r\n<title>Individual Report</title>\r\n\r\n<meta http-equiv=\"Content-Type\" content=\"text/html\">\r\n\r\n".toCharArray();
    _jsp_string24 = "\");\r\n							</script>\r\n				".toCharArray();
    _jsp_string75 = "\" onclick = \"return cancelPrint(this.form)\">\r\n".toCharArray();
    _jsp_string37 = "</option>\r\n			".toCharArray();
    _jsp_string80 = "\r\n</form>\r\n\r\n<table border=\"0\" width=\"610\" height=\"26\">\r\n	<tr>\r\n   \r\n		<td align=\"center\" height=\"5\" valign=\"top\">\r\n		</td>\r\n		</tr>\r\n	<tr>\r\n   \r\n		<td align=\"center\" height=\"5\" valign=\"top\">\r\n		</td>\r\n		</tr>\r\n	<tr>\r\n   \r\n		<td align=\"center\" height=\"5\" valign=\"top\">\r\n		</td>\r\n		</tr>\r\n	<tr>   \r\n	\r\n\r\n".toCharArray();
    _jsp_string48 = "				<option value = ".toCharArray();
    _jsp_string39 = "\r\n</select></td>\r\n		<td width=\"212\" align=\"left\" bordercolor=\"#FFFFFF\">&nbsp;</td>\r\n	</tr>\r\n	</table>\r\n\r\n\r\n  <table width=\"438\" boQEr=\"0\" style='font-size:10.0pt;font-family:Arial' bgcolor=\"#FFFFCC\" border=\"2\" bordercolor=\"#3399FF\" height=\"247\" cellspacing=\"3\">\r\n    <tr>\r\n      <td width=\"119\" align=\"right\" bordercolor=\"#FFFFCC\">".toCharArray();
    _jsp_string55 = "\r\n      </select></td>\r\n    </tr>\r\n    <tr>\r\n      <td align=\"right\" bordercolor=\"#FFFFCC\" style=\"border-bottom-style: none; border-bottom-width: medium\">".toCharArray();
    _jsp_string53 = " : </td>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n	  <td bordercolor=\"#FFFFCC\"><select name=\"groupName\" onChange=\"getID(this.form, this.form.groupName.options[groupName.selectedIndex].value, 2)\">\r\n	  <option value=".toCharArray();
    _jsp_string22 = "\r\n							<script>\r\n								alert(\"".toCharArray();
    _jsp_string38 = "\r\n		<select size=\"1\" name=\"selOrg\" onchange=\"proceed(this.form,this.form.selOrg)\">\r\n		<option value=".toCharArray();
    _jsp_string73 = "		\r\n		<!-- Edited by Tracy 01 Sep 08 -->\r\n  		<!-- Edited by Chun Yeong 2 Jun 2011 -->\r\n		<input type=\"button\" name=\"btnOpen\" value=\"".toCharArray();
    _jsp_string9 = "\";\r\n					form.btnOpen.disabled = false;\r\n				}\r\n			}\r\n			else\r\n			{\r\n				form.btnOpen.value = \"".toCharArray();
    _jsp_string33 = "\r\n		<select size=\"1\" name=\"selOrg\" onChange=\"proceed(this.form,this.form.selOrg)\">\r\n		<option value=\"0\" selected>".toCharArray();
    _jsp_string65 = "			\r\n    			<option value = \"".toCharArray();
    _jsp_string43 = "\r\n	  	<option value = ".toCharArray();
    _jsp_string40 = " \r\n		:</td>\r\n      <td width=\"1\" bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n      ".toCharArray();
    _jsp_string49 = "	\r\n	  ".toCharArray();
    _jsp_string14 = " \r\n    	<script>\r\n			parent.location.href = \"index.jsp\";\r\n		</script>\r\n".toCharArray();
    _jsp_string77 = "\" disabled>\r\n		<input type=\"button\" name=\"btnCancel\" value=\"".toCharArray();
    _jsp_string34 = "</option>\r\n	".toCharArray();
    _jsp_string6 = " ...\";\r\n			form.btnOpen.disabled = true;\r\n		}\r\n\r\n		form.action = \"IndividualReport.jsp?open=\"+type+\"&cancel=0&survey=\"+survey.value;\r\n		form.submit();\r\n		return true;	\r\n		\r\n	} else {\r\n		alert(\"".toCharArray();
    _jsp_string30 = "\r\n<br/>\r\n<font face=\"Arial\" size=\"2\">For generation of more than 1 type of reports, they \r\nwill be sent to the Administrator's email.\r\n<br>\r\n&nbsp;</font><table boQEr=\"0\" width=\"439\" cellspacing=\"0\" cellpadding=\"0\" font style='font-size:10.0pt;font-family:Arial'>\r\n	<tr>\r\n	  <td colspan=\"4\" align=\"left\"><b><font color=\"#000080\" size=\"2\" face=\"Arial\">".toCharArray();
    _jsp_string52 = "	  \r\n		".toCharArray();
    _jsp_string35 = "\r\n				<option value=".toCharArray();
    _jsp_string44 = "	  \r\n	  ".toCharArray();
    _jsp_string36 = " selected>".toCharArray();
    _jsp_string26 = "\r\n<b><font face=\"Arial\" color=\"#0000FF\">\r\n".toCharArray();
    _jsp_string60 = " \r\n		: </td>\r\n      <td bordercolor=\"#FFFFCC\" style=\"border-bottom-style: none; border-bottom-width: medium\">&nbsp;\r\n		</td>\r\n	  <td bordercolor=\"#FFFFCC\" style=\"border-bottom-style: none; border-bottom-width: medium\">\r\n      <select size=\"1\" name=\"langType\">\r\n		".toCharArray();
    _jsp_string83 = "\r\n		<td align=\"center\" height=\"5\" valign=\"top\"><font size=\"1\" color=\"navy\" face=\"Arial\">&nbsp;&nbsp;<a style=\"TEXT-DECORATION: none; color:navy;\" href=\"Login.jsp\">Home</a>&nbsp;| <a color=\"navy\" face=\"Arial\">&nbsp;<a style=\"TEXT-DECORATION: none; color:navy;\" href=\"mailto:3SixtyAdmin@pcc.com.sg?subject=Regarding:\">Contact \r\n		Us</a><a color=\"navy\" face=\"Arial\" href=\"termofuse.jsp\" target=\"_blank\"><span style=\"color: #000080; text-decoration: none\"> | Terms of Use </span></a>| <span style=\"color: #000080; text-decoration: none\"><a style=\"TEXT-DECORATION: none; color:navy;\" href=\"http://www.pcc.com.sg/\" target=\"_blank\">PCC Website</a></span></font></td></tr><tr>\r\n		<font size=\"2\" face=\"Arial\" style=\"font-size: 14pt\" color=\"#000080\">\r\n   \r\n		<td align=\"center\" height=\"5\" valign=\"top\">\r\n		<font size=\"1\" color=\"navy\" face=\"Arial\">&nbsp;Copyright &copy; ".toCharArray();
    _jsp_string18 = " of ".toCharArray();
    _jsp_string47 = "			<option value = ".toCharArray();
    _jsp_string42 = "\r\n	  ".toCharArray();
    _jsp_string72 = "\r\n				<td width=\"30%\"><font size=\"2\">Breakdown CPR</font></td>\r\n			</tr>\r\n			<tr>\r\n				<td width=\"6%\">\r\n				<p align=\"center\"><input type=\"checkbox\" name=\"chkDevGuide\"></td>\r\n				<td><font size=\"2\">Development Guide</font></td>\r\n			</tr>\r\n			<tr>\r\n				<td width=\"6%\">\r\n				<p align=\"center\"><input type=\"checkbox\" name=\"chkDevMap\"></td>\r\n				<td><font size=\"2\">Development Map (Only available for Key \r\n				Behaviour level surveys)</font></td>\r\n			</tr>\r\n		</table>\r\n		</td>\r\n    	\r\n    </tr>\r\n    \r\n	<tr>\r\n		<td bordercolor=\"#FFFFCC\" colspan=\"3\">\r\n		</td>\r\n		<td width=\"238\" bordercolor=\"#FFFFCC\"> \r\n".toCharArray();
    _jsp_string21 = ")\";\r\n									</script>\r\n				".toCharArray();
    _jsp_string28 = "<a href=\"ErrorLog.jsp\">ErrorLog.xls</a>\r\n".toCharArray();
    _jsp_string58 = "	\r\n	 ".toCharArray();
    _jsp_string4 = "\r\n\r\n<script language=\"javascript\">\r\n\r\nvar x = parseInt(window.screen.width) / 2 - 200;  // the number 250 is the exact half of the width of the pop-up and so should be changed according to the size of the pop-up\r\nvar y = parseInt(window.screen.height) / 2 - 200;\r\nvar myWindow;\r\n\r\nfunction getID(form, ID, type)\r\n{\r\n	var typeSelected = \"\";\r\n	\r\n	//if(ID != 0) {\r\n		switch(type) {\r\n			case 1: typeSelected = \"surveyID\";\r\n					  break;\r\n			case 2: typeSelected = \"groupID\";\r\n					  break;\r\n			case 3: typeSelected = \"targetID\";\r\n					  break;\r\n		}\r\n		var query = \"IndividualReport.jsp?\" + typeSelected + \"=\" + ID;\r\n		form.action = query;\r\n		form.method = \"post\";\r\n		form.submit();\r\n/*	} else {\r\n		alert(\"".toCharArray();
    _jsp_string84 = " Pacific Century Consulting Pte Ltd. All Rights Reserved.\r\n		</font>\r\n		</td>\r\n		\r\n	</tr>\r\n		\r\n</table>\r\n\r\n	</tr>\r\n</table>\r\n</body>\r\n</html>\r\n\r\n".toCharArray();
    _jsp_string61 = "\r\n        	<option value = ".toCharArray();
    _jsp_string57 = "\r\n	  <option value = ".toCharArray();
    _jsp_string8 = " ...\";\r\n					form.btnOpen.disabled = true;\r\n				}\r\n				else\r\n				{\r\n					bGenerate = false;\r\n					form.btnOpen.value = \"".toCharArray();
    _jsp_string67 = "</option>\r\n	  ".toCharArray();
    _jsp_string69 = "\r\n				<p align=\"center\"><input type=\"radio\" value=\"2\" name=\"optIndividual\" checked></td>\r\n				<td><font size=\"2\">Individual Report</font></td>\r\n				<!-- Added by Tracy 01 Sep 08 , Option to Print report with or without Normative-->\r\n				<td width=\"6%\">\r\n				<p align=\"center\"><input type=\"checkbox\" name=\"chkNormative\" checked></td>\r\n				<td width=\"30%\"><font size=\"2\">With Normative</font></td>\r\n				<!-- End add by Tracy 01 Sep 08 -->\r\n			</tr>\r\n			<tr>\r\n				<td width=\"6%\">\r\n				<p align=\"center\"><input type=\"radio\" value=\"1\" name=\"optIndividual\"></td>\r\n				<td><font size=\"2\">Simplified Individual Report (without charts)</font></td>\r\n                <!-- Added by Chun Yeong 2 Jun 2011 , Option to Print report with or without Group CP line-->\r\n				<td width=\"6%\">\r\n				<p align=\"center\"><input type=\"checkbox\" name=\"chkGroupCPLine\" checked></td>\r\n				<td width=\"30%\"><font size=\"2\">With Group CP Line</font></td>\r\n				<!-- End add by Chun Yeong 2 Jun 2011 -->\r\n			</tr>\r\n            <tr>\r\n				<td width=\"6%\"></td>\r\n				<td></td>\r\n                <!-- Added by Chun Yeong 13 Jun 2011 , Option to follow template and split peers and subordinates-->\r\n				<td width=\"6%\">\r\n				<p align=\"center\"><input type=\"checkbox\" name=\"chkSplit\"></td>\r\n				<td width=\"30%\"><font size=\"2\">Reverse Split Option</font></td>\r\n				<!-- End add by Chun Yeong 13 Jun 2011 -->\r\n			</tr>\r\n			<tr>\r\n				<td width=\"6%\"><font size=\"2\">with</font></td>\r\n				<td></td>\r\n				<td width=\"6%\">\r\n				".toCharArray();
    _jsp_string82 = "\r\n\r\n<table border=\"0\" width=\"610\" height=\"26\" id=\"table1\">\r\n\r\n	<tr>\r\n		<font size=\"2\" face=\"Arial\" style=\"font-size: 14pt\" color=\"#000080\">\r\n		".toCharArray();
    _jsp_string15 = "		<script>\r\n							alert(\"Please choose a report to generate\");\r\n						</script>\r\n				".toCharArray();
    _jsp_string25 = "\r\n<form name=\"IndividualReport\" method=\"post\">\r\n".toCharArray();
    _jsp_string27 = "<br/>\r\n".toCharArray();
    _jsp_string12 = "\";\r\n	form.action = \"IndividualReport.jsp?cancel=1\";\r\n	form.submit();\r\n	return true;\r\n}\r\n\r\nfunction finishPrint(form)\r\n{\r\n	form.btnOpen.value = \"".toCharArray();
    _jsp_string78 = "\" disabled>\r\n".toCharArray();
    _jsp_string29 = "\r\n</font></b>\r\n".toCharArray();
    _jsp_string31 = " </font></b></td>\r\n    </tr>\r\n\r\n</table>\r\n<font size=\"2\">&nbsp;</font><font size=\"2\"> </font>\r\n<table boQEr=\"0\" width=\"438\" cellspacing=\"3\" cellpadding=\"0\" style='font-size:10.0pt;font-family:Arial' border=\"2\" bordercolor=\"#3399FF\">\r\n	<tr>\r\n		<td width=\"100\" align=\"right\" bordercolor=\"#FFFFFF\">".toCharArray();
    _jsp_string74 = "\" onclick = \"return confirmOpen(this.form, this.form.optIndividual, this.form.surveyName, this.form.targetName, this.form.chkDevGuide, this.form.chkDevMap, this.form.chkNormative, this.form.chkGroupCPLine, this.form.chkSplit, this.form.langType, this.form.template)\">\r\n        <!-- End edit by Chun Yeong 2 Jun 2011 -->\r\n		<!-- End edit by Tracy 01 Sep 08 -->\r\n		<input type=\"button\" name=\"btnCancel\" value=\"".toCharArray();
    _jsp_string56 = " \r\n		: </td>\r\n      <td bordercolor=\"#FFFFCC\" style=\"border-bottom-style: none; border-bottom-width: medium\">&nbsp;\r\n		</td>\r\n	  <td bordercolor=\"#FFFFCC\" style=\"border-bottom-style: none; border-bottom-width: medium\"><select name=\"targetName\">\r\n	  <option value=".toCharArray();
    _jsp_string13 = "\";\r\n	form.action = \"IndividualReport.jsp\";\r\n	form.submit();\r\n	return true;\r\n}\r\n\r\n//function add\r\n/*------------------------------------------------------------start: Login modification 1------------------------------------------*/\r\n/*	choosing organization*/\r\n\r\nfunction proceed(form,field)\r\n{\r\n	form.action=\"IndividualReport.jsp?proceed=\"+field.value;\r\n	form.method=\"post\";\r\n	form.submit();\r\n}	\r\n\r\nfunction populateDept(form, field)\r\n{\r\n	form.action=\"IndividualReport.jsp?div=\"+field.value;\r\n	form.method=\"post\";\r\n	form.submit();\r\n}\r\n\r\nfunction populateGrp(form, field1, field2)\r\n{\r\n	form.action=\"IndividualReport.jsp?div=\" + field1.value + \"&dept=\"+ field2.value;\r\n	form.method=\"post\";\r\n	form.submit();\r\n}\r\n\r\n</script>\r\n\r\n<p>\r\n  ".toCharArray();
    _jsp_string51 = "\r\n		".toCharArray();
    _jsp_string10 = " ...\";\r\n				form.btnOpen.disabled = true;\r\n			}\r\n		}\r\n\r\n		if(bGenerate == true)\r\n		{\r\n			myWindow=window.open('IndividualReportAll.jsp','IndividualReportPopUp','scrollbars=no, width=480, height=250');\r\n			var query = \"IndividualReportAll.jsp\";\r\n			myWindow.moveTo(x,y);\r\n			myWindow.location.href = query;\r\n	\r\n			form.action = \"IndividualReport.jsp?open=\"+type+\"&cancel=0&survey=\"+survey.value;\r\n			form.submit();\r\n			return true;	\r\n		}\r\n		\r\n	} else {\r\n		alert(\"".toCharArray();
    _jsp_string7 = "\");\r\n		return false;\r\n	}\r\n	\r\n	/*\r\n	var bMultiple = false;	// Check whether user want to generate more than 1 report type\r\n	\r\n	if(type > 0 && chkDG.checked && chkDMap.checked)\r\n		bMultiple = true;\r\n	else if(type > 0 && chkDG.checked)\r\n		bMultiple = true;\r\n	else if(type > 0 && chkDMap.checked)\r\n		bMultiple = true;\r\n	else if(chkDG.checked && chkDMap.checked)\r\n		bMultiple = true;\r\n	else\r\n		bMultiple = false;\r\n\r\n	if(survey.value != 0)\r\n	{\r\n		bGenerate = true;\r\n		\r\n		if(target.value == 0)\r\n		{\r\n			if(bMultiple == true)\r\n			{\r\n				if(confirm(\"Printing all targets' reports at one go needs sufficient system resources such as memory\"+\r\n							\"and network bandwith. System may hang if resources are insufficient.\\n\\n\"+\r\n							\"Should the system hang, you may want to print reports in batches of 20 reports.\"))\r\n				{\r\n					form.btnOpen.value = \"".toCharArray();
    _jsp_string79 = "\r\n    	</td>   \r\n    	\r\n    </tr>\r\n    \r\n  </table>\r\n  \r\n".toCharArray();
    _jsp_string32 = " \r\n		:</td>\r\n		<td width=\"19\" bordercolor=\"#FFFFFF\">&nbsp;</td>\r\n		<td width=\"207\" bordercolor=\"#FFFFFF\">\r\n".toCharArray();
    _jsp_string64 = " \r\n		: </td>\r\n      <td bordercolor=\"#FFFFCC\" style=\"border-bottom-style: none; border-bottom-width: medium\">&nbsp;\r\n		</td>\r\n	  <td bordercolor=\"#FFFFCC\" style=\"border-bottom-style: none; border-bottom-width: medium\">\r\n      <select size=\"1\" name=\"template\" style=\"width:320px\">\r\n      ".toCharArray();
    _jsp_string2 = "\r\n".toCharArray();
    _jsp_string54 = "\r\n		<option value = ".toCharArray();
    _jsp_string76 = "		<input type=\"button\" name=\"btnOpen\" value=\"".toCharArray();
    _jsp_string68 = "\r\n      </select>\r\n      </td>\r\n    </tr>\r\n	<tr>\r\n		<td bordercolor=\"#FFFFCC\" colspan=\"4\">&nbsp;\r\n        \r\n		</td>\r\n    	\r\n    </tr>\r\n    \r\n	<tr>\r\n		<td bordercolor=\"#FFFFCC\" colspan=\"4\">\r\n		Reports to be printed:\r\n		<table border=\"0\" width=\"100%\" id=\"table1\">\r\n			<tr>\r\n				<td width=\"6%\">\r\n				".toCharArray();
    _jsp_string41 = "\r\n	  <td width=\"110\" bordercolor=\"#FFFFCC\">\r\n	  <select name=\"surveyName\" onchange = \"getID(this.form, this.form.surveyName.options[surveyName.selectedIndex].value, 1)\">\r\n	  <option value=".toCharArray();
    _jsp_string3 = " \r\n".toCharArray();
    _jsp_string1 = "\r\n\r\n</head>\r\n\r\n<body>\r\n".toCharArray();
    _jsp_string5 = " !\");\r\n		return false;\r\n	}\r\n*/	return true;	\r\n}\r\n\r\nfunction delay(gap)\r\n{ 	/* gap is in millisecs */\r\n	var then,now; then=new Date().getTime();\r\n	now=then;\r\n	\r\n	while((now-then)<gap)\r\n	{\r\n		now = new Date().getTime();\r\n	}\r\n}\r\n//Function checkFiled is created by James 11- Jun 2008 to make sure survey name and type are selected.\r\nfunction checkField(form){\r\n	var msg = \"Please select following information: \\n\";\r\n	var valid = true;\r\n	var checkType = false;\r\n	for (i=0;i<form.optIndividual.length;i++){\r\n	if (form.optIndividual[i].checked==true){\r\n	 		checkType=true;\r\n	 		break;\r\n	 	}\r\n	}\r\n\r\n	if(!checkType){\r\n		msg += \" - Report Type \\n\";\r\n		valid = false;\r\n	}\r\n	if(form.surveyName.selectedIndex == 0){\r\n		msg += \" - Survey Name \\n\";\r\n		valid = false;\r\n	}\r\n	if(valid){\r\n		return valid;\r\n	}else{\r\n		alert(msg);\r\n	}\r\n\r\n}\r\nfunction confirmOpen(form, optReport, survey, target, chkDG, chkDMap, chkNormative, chkGroupCPLines, chkSplit, chkBreakCPR, langType)\r\n{\r\n   if(checkField(form)){\r\n	var type = 0;	//type 1=simplified;2=standard\r\n	for (i = 0; i < optReport.length; i++) \r\n	{\r\n		if(optReport[i].checked)\r\n		{\r\n			type = optReport[i].value;\r\n		}		\r\n	}\r\n	\r\n	if(survey.value != 0)\r\n	{\r\n		if(target.value == 0)\r\n		{\r\n			form.btnOpen.value = \"".toCharArray();
    _jsp_string46 = " : </td>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n	  <td bordercolor=\"#FFFFCC\"><select name=\"selDiv\" onChange=\"populateDept(this.form, this.form.selDiv)\">\r\n	  <option value=".toCharArray();
    _jsp_string63 = "\r\n			\r\n		</select></td>\r\n    </tr>\r\n    <tr>\r\n    	<td align=\"right\" bordercolor=\"#FFFFCC\" style=\"border-bottom-style: none; border-bottom-width: medium\">".toCharArray();
    _jsp_string50 = " : </td>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n	  <td bordercolor=\"#FFFFCC\"><select name=\"selDept\" onChange=\"populateGrp(this.form, this.form.selDiv, this.form.selDept)\">\r\n	  <option value=".toCharArray();
    _jsp_string71 = "\r\n					<p align=\"center\"><input type=\"checkbox\" name=\"chkBreakCPR\"></td>\r\n				".toCharArray();
    _jsp_string81 = "\r\n\r\n".toCharArray();
    _jsp_string70 = "\r\n					<p align=\"center\"><input type=\"checkbox\" name=\"chkBreakCPR\" checked></td>\r\n				".toCharArray();
  }
}
