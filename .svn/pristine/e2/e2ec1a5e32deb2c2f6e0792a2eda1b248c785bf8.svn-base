<%@ page import="java.sql.*"%>
<%@ page errorPage="" %>
<%@ page import="java.io.*%>
<%@ page import="java.lang.String"%>
<%@ page import="java.lang.Object"%> 
<%@ page pageEncoding="UTF-8"%>
<%//by Yiting 19/09/2008 Fix jsp files to support Thai Language%>  
<html>
<head>
<title>Questionnaire</title>
<style type="text/css">
<!--
.style1 {
	color: #CCFFCC;
	font-weight: bold;
}
.style2 {font-size: 14pt}
body {
	background-color: #FFFFFF;
}
.style3 {color: #FFCCCC}
-->
</style>
<meta http-equiv="Content-Type" content="text/html">
</head>

<body>
<jsp:useBean id="Database" class="CP_Classes.Database" scope="session"/>
<jsp:useBean id="RDE" class="CP_Classes.RatersDataEntry" scope="session"/>
<jsp:useBean id="Questionnaire" class="CP_Classes.Questionnaire" scope="session"/>
<jsp:useBean id="Calculation" class="CP_Classes.Calculation" scope="session"/>
<jsp:useBean id="SurveyResult" class="CP_Classes.SurveyResult" scope="session"/>
<jsp:useBean id="logchk" class="CP_Classes.Login" scope="session"/> 
<jsp:useBean id="User" class="CP_Classes.User_Jenty" scope="session"/>   
<jsp:useBean id="EV" class="CP_Classes.EventViewer" scope="session"/>
<jsp:useBean id="KB" class="CP_Classes.KeyBehaviour" scope="session"/>
<jsp:useBean id="trans" class="CP_Classes.Translate" scope="session"/>
<jsp:useBean id="server" class="CP_Classes.Setting" scope="session"/>   

<script language="javascript">

void function disableButton(form)
{
	//Disable User to click again while system is processing
	form.btnNext.disabled = true;
	form.btnPrev.disabled = true;
	form.btnFinish.disabled = true;
	form.btnExit.disabled = true;
	form.btnSave.disabled = true;
}

void function enableButton(form)
{
	//Disable User to click again while system is processing
	form.btnNext.disabled = false;
	form.btnPrev.disabled = false;
	form.btnFinish.disabled = false;
	form.btnExit.disabled = false;
	form.btnSave.disabled = false;
}

void function goNext(form)
{
	disableButton(form);
	
	form.action = "Questionnaires.jsp?next=1";
	form.method = "post";
	form.submit();
}

void function goPrev(form)
{
	disableButton(form);
	
	form.action = "Questionnaires.jsp?prev=1";
	form.method = "post";
	form.submit();
}

function confirmFinish(form, type)
{
	disableButton(form);

	//type 1=save, 2=finish
	var clicked = false;
	
	if(type == 1) {			
		if(confirm("<%=trans.tslt("If you are finished and do not wish to change the rating any further, click CANCEL here and click on the FINISH button instead. If you simply want to save your rating for now, click OK here")%>."))
			clicked = true;
		else 
		{
			enableButton(form);		
			return false;				
		}
	}
	else if(type == 2)
		clicked = true;
	else {
		if(confirm("<%=trans.tslt("Your rating will be saved and your assignment status for this target will be set to incomplete")%>."))
			clicked = true;
		else 
		{
			enableButton(form);		
			return false;				
		}				
	}
					
	if(clicked == true) {
		form.action = "Questionnaires.jsp?finish=" + type;
		form.method = "post";
		form.submit();
	}
	
	return true;
}

</script>
<form name = "Questionnaire" method="post">
<table width="610" border="1" font style='font-size:12.0pt;font-family:Arial'>
<th align="center" bgcolor="navy"><b><font style='color:white'><%=trans.tslt("Questionnaire")%><span class="style2"></span></font></b></th>
</table>

<%
String username=(String)session.getAttribute("username");

  if (!logchk.isUsable(username)) 
  {%> 	<font size="2">   
		<script>
			parent.location.href = "index.jsp";
		</script>
<%  } 

	int surveyID = RDE.getSurveyID();			// open this comment when it is ready to be linked from ratersdataentry
	int surveyLevel = Calculation.LevelOfSurvey(surveyID);
	int pkUser = logchk.getPKUser();
	int userType = logchk.getUserType();
	int start = Questionnaire.getStartID();
	
	int compID = logchk.getCompany();
	int orgID = logchk.getOrg();
	
	String [] UserInfo = User.getUserDetail(pkUser);

	int pk = Questionnaire.getCurrID();	
	int assignmentID = Questionnaire.getAssignmentID();

	// check if comment needs to be included
	int included = Questionnaire.commentIncluded(surveyID);
	int selfIncluded = Questionnaire.SelfCommentIncluded(surveyID);
	
	// check if it is self
	String rCode = SurveyResult.RaterCode(assignmentID);
	
	ResultSet KBList = null;
	ResultSet surveyInfo = Questionnaire.getSurveyInfo(surveyID);
	String surveyName = "";
	if(surveyInfo.next())
		surveyName = surveyInfo.getString("SurveyName");

	String name = Questionnaire.getName();
	String jobPost = Questionnaire.getJobPost();
	String timeFrame = Questionnaire.getTimeFrame();
	String futureJob = Questionnaire.getFutureJob();
	
	if(futureJob == null)
		futureJob = "";
	if(timeFrame == null)
		timeFrame = "";
							
	int targetLoginID = RDE.getTargetID();
	int raterLoginID = RDE.getRaterID();
	
	String raterName = Questionnaire.UserName(orgID, raterLoginID);
	
	int RTID[] = Questionnaire.getRT();
	int RSID[] = Questionnaire.getRS();

	int totalRatingTask = Questionnaire.getTotalSurveyRating(surveyID);
	int totalAll = Questionnaire.TotalList(surveyID);
	
	if(request.getParameter("finishall") != null) {

		String temp = surveyName + "(S); " + name + "(T); " + raterName + "(R); Complete";
		try {
			EV.addRecord("Finish", "Questionnaire", temp, UserInfo[2], UserInfo[11], UserInfo[10]);
		}catch(SQLException SE) {}
	
		Questionnaire.SetRaterStatus(assignmentID, 1);
		SurveyResult.Calculate(assignmentID, 0);		// calculation part, 0=not include/exclude rater				
		
%>
<script language="javascript">
alert("<%=trans.tslt("Thank You for your participation")%>");
</script>
<%								
			if(userType == 1 || userType == 2) {
%>
<script language="javascript">
		window.location.href = "SurveyList_Process.jsp";
</script>
<%						
			} else if(userType == 3) {
%>
<script language="javascript">
		window.location.href = "RatersDataEntry.jsp";
</script>
<%						
			} else if(userType == 4) {		// raters
%>
<script language="javascript">
		window.location.href = "RatersToDoList.jsp";
</script>
<%
		}
	}
	
	String RT[] = new String[totalRatingTask];
	
/********************************************************* RATING TASK *******************************************************/	
	
	for (int i=0; i<totalRatingTask; i++)
		RT[i] = Questionnaire.getSurveyRatingTask(RTID[i], surveyID); 

/********************************************************* RATING TASK *******************************************************/	


/*************************************************** FOR COMPETENCY 0R KB LEVEL *******************************************************/	

	int totalCurrComp = Questionnaire.getTotalCurrComp();	// to mantain the total current competency
	int totalComp = Questionnaire.getTotalComp();
	
	int pkComp = 0;
	int pkKB = 0;
	
	int totalCompleted = Questionnaire.TotalResult(assignmentID);
	
	int complete = 0;
	if(totalCompleted == (totalAll * totalRatingTask))
		complete = 1;
	
	String compDef = "";
	String KBDef = "";
	
	ResultSet List = Questionnaire.CompetencyOrKBList(surveyID);
	if (List.next()) {

		pkComp = List.getInt("CompetencyID");
		compDef = List.getString("CompetencyDefinition");
		
		if(surveyLevel == 0)
			KBList = KB.filterKBList(pkComp, 0, compID, orgID);
	}
	else 
	{
		if(userType == 1 || userType == 2) {
%>			<script language="javascript">
				window.location.href = "SurveyList_Process.jsp";
			</script>
<%						
		} else if(userType == 3) {
%>			<script language="javascript">
				window.location.href = "RatersDataEntry.jsp";
			</script>
<%						
		} else if(userType == 4) {
%>			<script language="javascript">
				window.location.href = "RatersToDoList.jsp";
			</script>
<%		}
	}
	
	if(surveyLevel == 1) {
		pkKB = List.getInt("KeyBehaviourID");
		KBDef = List.getString("KeyBehaviour");
	}
	
	if(totalCurrComp == 0) {
		if(surveyLevel == 0)
			Questionnaire.setCurrID(pkComp);
		else if(surveyLevel == 1)
			Questionnaire.setCurrID(pkKB);
	}
		
	if(totalCurrComp == 0 && start == 1) {	
		Questionnaire.setStartID(0);
		int total = Questionnaire.TotalResult(assignmentID, pkComp, pkKB);
		
		while((total == totalRatingTask) && List.next()) 
		{
			totalCurrComp++;
			pkComp = List.getInt("CompetencyID");
			compDef = List.getString("CompetencyDefinition");
			Questionnaire.setCurrID(pkComp);
			
			if(surveyLevel == 1) 
			{
				pkKB = List.getInt("KeyBehaviourID");
				KBDef = List.getString("KeyBehaviour");
				Questionnaire.setCurrID(pkKB);
			} else 					
				KBList = KB.FilterKBList(pkComp, 0, compID, orgID);
				
			Questionnaire.setTotalCurrComp(totalCurrComp);	
			total = Questionnaire.TotalResult(assignmentID, pkComp, pkKB);
		}
	}
		
	if(request.getParameter("prev") != null && totalCurrComp >= 0) 
	{
		for(int rs=0; rs<totalRatingTask; rs++) 
		{
			int RTStatus = Questionnaire.RTSetupStatus(RTID[rs], surveyID);
			pk = Questionnaire.getCurrID();
			if(RTStatus != 0) 
			{
				float oldResult = Questionnaire.CheckOldResultExist(assignmentID, pk, RTID[rs]);
				if(oldResult < 0) {
					try {
						float score = 0;
						
						if (surveyLevel == 0)
							score = Questionnaire.RTScore(RTID[rs], surveyID, pk);
						else
							score = Questionnaire.RTScoreBehv(RTID[rs], surveyID, pk);
						
						Questionnaire.addResult(assignmentID, pk, RTID[rs], score); 
					}catch(SQLException SE) {}
				}
			} else 
			{									
				String [] scaleValue = request.getParameterValues("rbtnScale" + rs);
				if(scaleValue != null)
				{
					for(int i=0; i<scaleValue.length; i++)
					if(scaleValue[i] != null){
						float value = Integer.parseInt(scaleValue[i]);
						float oldResult = Questionnaire.CheckOldResultExist(assignmentID, pk, RTID[rs]);
						
						if(oldResult < 0) {
							try {
								Questionnaire.addResult(assignmentID, pk, RTID[rs], value); //add date
							}catch(SQLException SE) {}
						}								
						else if(oldResult >= 0 && oldResult != value)
							Questionnaire.updateOldResult(assignmentID, pk, RTID[rs], value);
					}
				}				
			}
		}
		
		if((rCode.equals("SELF") && selfIncluded == 1) || included == 1) 
		{
			if(!request.getParameter("comments").equals("")) {
				String value = request.getParameter("comments");
				value = value.trim();
				value = Database.SQLFixer(value);
				
				int competency = pk;
				int keybehaviour = 0;
				
				if(surveyLevel == 1) {
					competency = Questionnaire.CompetencyID(pk);
					keybehaviour = pk;
				}
					
				String oldResult = Questionnaire.checkCommentExist(assignmentID, competency, keybehaviour);
				if(oldResult == "") {
					try {
						Questionnaire.addComment(assignmentID, competency, keybehaviour, value); 
					}catch(SQLException SE) {}
				}								
				else if(oldResult != null && !oldResult.equals(value))
					Questionnaire.updateComment(assignmentID, competency, keybehaviour, value);
			}
		}
	
		totalCurrComp--;
		Questionnaire.setTotalCurrComp(totalCurrComp);			
		
		for(int i=0; i<totalCurrComp && i<totalComp; i++)
			List.next();
		if(totalCurrComp != 0)
		{
			pkComp = List.getInt("CompetencyID");
			compDef = List.getString("CompetencyDefinition");
			Questionnaire.setCurrID(pkComp);
			
			if(surveyLevel == 1) {
				pkKB = List.getInt("KeyBehaviourID");
				KBDef = List.getString("KeyBehaviour");
				Questionnaire.setCurrID(pkKB);
			}
		}
	}	// end request.getParameter("prev")
	
	if(request.getParameter("next") != null && totalCurrComp < totalComp) 
	{
		for(int rs=0; rs<totalRatingTask; rs++) 
		{
			int RTStatus = Questionnaire.RTSetupStatus(RTID[rs], surveyID);
			pk = Questionnaire.getCurrID();
			//System.out.println("RTStatus = " + RTStatus);
			if(RTStatus != 0) 
			{	// Admin fixed score
				float oldResult = Questionnaire.CheckOldResultExist(assignmentID, pk, RTID[rs]);
				//System.out.println("oldResult = " + oldResult);
				if(oldResult <= 0) {
					try {
						float score = 0;
						if (surveyLevel == 0)
							score = Questionnaire.RTScore(RTID[rs], surveyID, pk);
						else
							score = Questionnaire.RTScoreBehv(RTID[rs], surveyID, pk);
					//System.out.println("RTID[rs] = " + RTID[rs]);
					System.out.println("SCORE = " + score);
						Questionnaire.addResult(assignmentID, pk, RTID[rs], score); //add date
					} catch(SQLException SE) {}
				}
			}
			else 
			{
				String [] scaleValue = request.getParameterValues("rbtnScale" + rs);
				if(scaleValue != null)
				{
					for(int i=0; i<scaleValue.length; i++)
					if(scaleValue[i] != null) {
						float value = Float.parseFloat(scaleValue[i]);
						float oldResult = Questionnaire.CheckOldResultExist(assignmentID, pk, RTID[rs]);
						//System.out.println("VALUE = " + value);
						if(oldResult < 0) {
							try {
								Questionnaire.addResult(assignmentID, pk, RTID[rs], value); 
							}catch(SQLException SE) {}
						}
						else if(oldResult >= 0 && oldResult != value)
							Questionnaire.updateOldResult(assignmentID, pk, RTID[rs], value);
					}
				}
			}
		}
			
		if((rCode.equals("SELF") && selfIncluded == 1) || included == 1) {
			if(!request.getParameter("comments").equals("")) {
				String value = request.getParameter("comments");
				value = value.trim();			
				value = Database.SQLFixer(value);

				int competency = pk;
				int keybehaviour = 0;
				
				if(surveyLevel == 1) {
					competency = Questionnaire.CompetencyID(pk);
					keybehaviour = pk;
				}
				
				String oldResult = Questionnaire.checkCommentExist(assignmentID, competency, keybehaviour);
				if(oldResult == "") {
					try {
						Questionnaire.addComment(assignmentID, competency, keybehaviour, value); 
					}catch(SQLException SE) {}
				}								
				else if(oldResult != null && !oldResult.equals(value))
					Questionnaire.updateComment(assignmentID, competency, keybehaviour, value);
			}
		}
						
		totalCurrComp++;
		Questionnaire.setTotalCurrComp(totalCurrComp);
		
		for(int i=0; i<totalCurrComp && i<totalComp; i++)
			List.next();
		pkComp = List.getInt("CompetencyID");
		compDef = List.getString("CompetencyDefinition");
		Questionnaire.setCurrID(pkComp);
		
		if(surveyLevel == 1)
		{
			pkKB = List.getInt("KeyBehaviourID");
			KBDef = List.getString("KeyBehaviour");
			Questionnaire.setCurrID(pkKB);
		}
		else
			KBList = KB.FilterKBList(pkComp, 0, compID, orgID);
	}	// end request.getParameter("next")

	
	if(request.getParameter("finish") != null) 
	{
		for(int rs=0; rs<totalRatingTask; rs++) 
		{
			int RTStatus = Questionnaire.RTSetupStatus(RTID[rs], surveyID);
			pk = Questionnaire.getCurrID();
			if(RTStatus != 0) 
			{
				float oldResult = Questionnaire.CheckOldResultExist(assignmentID, pk, RTID[rs]);
				if(oldResult < 0) {
					try {
						float score = 0;

						if (surveyLevel == 0)
							score = Questionnaire.RTScore(RTID[rs], surveyID, pk);
						else
							score = Questionnaire.RTScoreBehv(RTID[rs], surveyID, pk);

						Questionnaire.addResult(assignmentID, pk, RTID[rs], score); //add data
					}catch(SQLException SE) {}
				}					
			} else 
			{
				String [] scaleValue = request.getParameterValues("rbtnScale" + rs);
				if(scaleValue != null)
				{
					for(int i=0; i<scaleValue.length; i++)
					if(scaleValue[i] != null) {
						float value = Integer.parseInt(scaleValue[i]);
						float oldResult = Questionnaire.CheckOldResultExist(assignmentID, pk, RTID[rs]);
						
						if(oldResult < 0) {
							try {
								Questionnaire.addResult(assignmentID, pk, RTID[rs], value); 
							}catch(SQLException SE) {}
						}								
						else if(oldResult >= 0 && oldResult != value)
							Questionnaire.updateOldResult(assignmentID, pk, RTID[rs], value);
					}
				}
			}
		}
		
		if((rCode.equals("SELF") && selfIncluded == 1) || included == 1) {
			if(!request.getParameter("comments").equals("")) {
				String value = request.getParameter("comments");
				value = value.trim();
				value = Database.SQLFixer(value);
				int competency = pk;
				int keybehaviour = 0;
				
				if(surveyLevel == 1) {
					competency = Questionnaire.CompetencyID(pk);
					keybehaviour = pk;
				}
					
				String oldResult = Questionnaire.checkCommentExist(assignmentID, competency, keybehaviour);
				if(oldResult == "") {
					try {
						Questionnaire.addComment(assignmentID, competency, keybehaviour, value); 
					}catch(SQLException SE) {}
				}								
				else if(oldResult != null && !oldResult.equals(value))
					Questionnaire.updateComment(assignmentID, competency, keybehaviour, value);
			}
		}

		if(Integer.parseInt(request.getParameter("finish")) == 3) {
			String temp = surveyName + "(S); " + name + "(T); " + raterName + "(R); Incomplete";
			try{
				EV.addRecord("Exit", "Questionnaire", temp, UserInfo[2], UserInfo[11], UserInfo[10]);
			}catch(SQLException SE) {}
			
			if(userType == 1 || userType == 2) {
				%>
				<script language="javascript">
						window.location.href = "SurveyList_Process.jsp";
				</script>
				<%						
			} else if(userType == 3) {
				%>
				<script language="javascript">
						window.location.href = "RatersDataEntry.jsp";
				</script>
				<%						
			} else if(userType == 4) {
				%>
				<script language="javascript">
						window.location.href = "RatersToDoList.jsp";
				</script>
				<%						
			}
		}
		
		if(Integer.parseInt(request.getParameter("finish")) == 2) {
			totalCompleted = Questionnaire.TotalResult(assignmentID);
			//System.out.println("totalCompleted = " + totalCompleted + ", totalAll = " + totalAll + ", totalRatingTask = " + totalRatingTask);
				
			if(totalCompleted == (totalAll * totalRatingTask)) {
				int commentIncluded = Questionnaire.commentIncluded(surveyID);
					
				int commentInput = 1;
				if(commentIncluded == 1)
					commentInput = Questionnaire.checkCommentInput(assignmentID);
				if(targetLoginID == raterLoginID)
					commentInput = Questionnaire.SelfCommentIncluded(surveyID);
				
				if(commentInput == 0) {
					%>
					<script>
						if(confirm("<%=trans.tslt("No comments included. Do you want to finish")%>?"))
							window.location.href = "Questionnaires.jsp?finishall=1";
					</script>
					<%				
				}else {		
					%>
					<script>
						if(confirm("<%=trans.tslt("Once you click FINISH, no more ammendment can be done")%>."))
							window.location.href = "Questionnaires.jsp?finishall=1";
					</script>
					<%		
				}
			} else {
				String temp = surveyName + "(S); " + name + "(T); " + raterName + "(R); Incomplete";
				EV.addRecord("Finish", "Questionnaire", temp, UserInfo[2], UserInfo[11], UserInfo[10]);
				Questionnaire.setStartID(1);
				%>
				<script language="javascript">
				alert("<%=trans.tslt("You have not completed the questionnaire. Your rating will be saved and your assignment status for this target will be set to incomplete")%>.");
				</script>
				<!----------------------------------------Incomplete Questionnaire------------------------------------------->
				<%								
				
				if(userType == 1 || userType == 2) {
					%>
					<script language="javascript">
							window.location.href = "Questionnaire.jsp";
					</script>
					<%						
				} else if(userType == 3) {
					%>
					<script language="javascript">
							window.location.href = "Questionnaire.jsp";
					</script>
					<%						
				} else if(userType == 4) {
					%>
					<script language="javascript">
							window.location.href = "Questionnaire.jsp";
					</script>
					<%						
				}			
			}
		} else {
			%>
			<script language="javascript">
					window.location.href = "Questionnaire.jsp";
			</script>
			<%		
		}
	} //end if(request.getParameter("finish") != null)
%>

<table width="610" border="0" font style='font-size:10.0pt;font-family:Arial'>
  <tr>        
    <td width="84" align="left"><%=trans.tslt("Target Name")%> :</td>
	<td width="183" align="left">
    <input name="targetName" type="text" size="30" value="<%=name%>" readonly style="font-family: Arial; font-size: 10pt"></td>
	<td>&nbsp;</td>
<% if (futureJob != "") {
%>
	<td width="84"  align="left"><%=trans.tslt("Future Job")%> :</td>
	<td width="183">
	<input name="futureJob" type="text" size="30" value="<%=futureJob%>" readonly style="font-family: arial; font-size: 10pt"></td>
<% }%>
  </tr>
  <tr>
    <td><%=trans.tslt("Job Position")%> : </td>
    <td>
	<input name="jobPos" type="text" size="30" value="<%=jobPost%>" readonly style="font-family: arial; font-size: 10pt">
	</td>
	<td>&nbsp;</td>
<% if(timeFrame != "") {
%>
	<td width="84"  align="left"><%=trans.tslt("Time Frame")%> :</td>
	<td width="183">
	<input name="timeFrame" type="text" size="30" value="<%=timeFrame%>" readonly style="font-family: arial; font-size: 10pt"></td>
<% }%>
  </tr>
</table>
<table width="610" border="0" font style='font-size:10.0pt;font-family:Arial'>
<tr>
<td width="84"><strong><%=trans.tslt("Competency Statement")%> :</strong></td>
<td>
<textarea font style='font-size:10pt;font-family:Arial' name="compStatement" cols="82" rows="3" readonly><%=compDef%></textarea>
<% if(server.getCompanySetting() == 3) {%>
<font face="sans-serif" size="4">
&nbsp;</font><%}%>
</td>
</tr>
<tr>
<td><strong><%=trans.tslt("Key Behaviour")%> :</strong></td>
<%
if(surveyLevel == 0) {
%>
<td width="515">
<table border="1" font style='font-size:10.0pt;font-family:Arial' width="515" height="5">
<th width="504" bgcolor="navy"><b>
<font style='color:white'><%=trans.tslt("Key Behaviours")%></font></b></th>
<tr>
<td>

<div style='width:504px; height:60px; z-index:1; overflow:auto'>
<table border="1" font style='font-size:10.0pt;font-family:Arial' width="487" bgcolor="#FFFFCC">
<% while(KBList.next()) {
%>
	<tr onMouseOver = "this.bgColor = '#99ccff'"
   		onMouseOut = "this.bgColor = '#FFFFCC'">
		<td><%=KBList.getString("KeyBehaviour")%></td>
	</tr>
<% } %>	
</table>
</div>
</td></tr>
</table>
</td>
<% } else {
%>
<td>
<textarea font style='font-size:10pt;font-family:Arial' name="KBStatement" cols="82" rows="3" readonly><%=KBDef%></textarea></td>
<% } %>
</tr>
</table>

<%
	for(int RS=0; RS<RSID.length; RS++) {
		float oldRS = 0;
		if(surveyLevel == 0)
			oldRS = Questionnaire.CheckOldResultExist(assignmentID, pkComp, RTID[RS]);
		else
			oldRS = Questionnaire.CheckOldResultExist(assignmentID, pkKB, RTID[RS]);
			
		ResultSet RScale = Questionnaire.getRatingScale(RSID[RS]);
		int totalRS   = Questionnaire.getTotalRS(RSID[RS]);
		
%>
<%
/************************** CHECK EITHER TO SHOW OR HIDE RATING TASK *********************************************/
	int RTSetup = Questionnaire.RTSetupStatus(RTID[RS], surveyID);
	//System.out.println(RT[RS] + "---" + RTSetup);
	if(RTSetup != 2) {
%>
<table width="610" border="0" font style='font-size:10.0pt;font-family:Arial'>
<th align="center" bgcolor="#99CCFF"><span class="style1"><font style='color:black'><%=RT[RS]%></font></span></th>
</table>
<table width="610" border="0"  font style='font-size:10.0pt;font-family:Arial'>
<tr align="center" height="5">
<%
	int low [] = new int [totalRS];
	int high [] = new int [totalRS];
	int lowValue=0, highValue=0;
	int colspan = 0;
	String scaleDesc = "";

	while(RScale.next()) {		
		low[lowValue] = RScale.getInt("LowValue");
		high[highValue] = RScale.getInt("HighValue");
		scaleDesc = RScale.getString("ScaleDescription");
		
		colspan = high[highValue] - low[lowValue] + 1;
		
		lowValue++;
		highValue++;
%>
<td height="10" width="80" bgcolor="#CCCCCC" colspan="<%=colspan%>" align="center"><b><%=scaleDesc%></b></td>
<%
	}
%>
</tr>

<tr align="center">
<%
	int i=0;
	while(i < totalRS) {
		lowValue = low[i];
		highValue = high[i];

	do {
%>	
<td>
<%	
		//int score = 0;
		if(RTSetup == 1) 		//Fixed by admin in Survey Setup and display in Questionnaire
			oldRS = (int)Questionnaire.RTScore(RTID[RS], surveyID, pkComp);
			
		if(oldRS >= 0 && oldRS == lowValue) {
			if(RTSetup == 1) {
	%>			<input type="radio" name="<%="rbtnScale"+RS%>" value="<%=lowValue%>" checked disabled>
	<%		} else {
	%>			<input type="radio" name="<%="rbtnScale"+RS%>" value="<%=lowValue%>" checked>
	<%		}
		} else {
			if(RTSetup == 1) {
	%>			<input type="radio" name="<%="rbtnScale"+RS%>" value="<%=lowValue%>" disabled>
	<%		} else {
	%>			<input type="radio" name="<%="rbtnScale"+RS%>" value="<%=lowValue%>">
	<% 		}
		} 
		
		if(lowValue == 0) {
	%>		<%="N/A"%>
	<% 	} else {
	%>		<%=lowValue%>
	<% 	} %>
</td>
<%				
		lowValue++;
	} while(lowValue <= highValue);
		i++;
	}	//end do
%>
</tr>
</table>
<% } 
}%>
<strong>
<!------------------------------------------------------- ADD COMMENTS ------------------------------------------------------------------->
<%
	
	if((rCode.equals("SELF") && selfIncluded == 1) || included == 1) {
	
%>
<p></p>
<font style='font-size:11.0pt;font-family:Arial'><%=trans.tslt("Narrative Comments")%>:</font></strong>
<br>
<%
	int competency = pkComp;
	int keybehaviour = pkKB;
				
	if(surveyLevel == 1) {
		competency = Questionnaire.CompetencyID(pkKB);
		keybehaviour = pkKB;
	}
		
	String oldComment = Questionnaire.checkCommentExist(assignmentID, competency, keybehaviour);

%>

<textarea name="comments" cols="98" rows="5" style="font-size: 10pt; font-family: Arial"><%=oldComment%></textarea>
<% } %>

<!------------------------------------------------------- ADD COMMENTS ------------------------------------------------------------------->



<input name="totalCompleted" type="hidden" id="totalCompleted" value="<%=complete%>">
<table width="610" border="1" font style='font-size:10.0pt;font-family:Arial;color:white' bgcolor="navy">
  <tr>
  <% if(surveyLevel == 1) {
  %>
    <td width="139"><strong><%=totalCurrComp + 1%>  <%=trans.tslt("of")%> <%=totalComp%> <%=trans.tslt("Questions")%></strong></td>  
	<% } else {
	%>
	<td width="123"><strong><%=totalCurrComp + 1%>  <%=trans.tslt("of")%> <%=totalComp%> <%=trans.tslt("Questions")%></strong></td>  
	<% }
	%>	
	<td width="226" align="center">
	<input type="button" name="btnSave" value="<%=trans.tslt("Save")%>" align="right" onclick="return confirmFinish(this.form, 1)">
    <input type="button" name="btnFinish" value="<%=trans.tslt("Finish")%>" align="right" onclick="return confirmFinish(this.form, 2)">
	<input type="button" name="btnExit" value=" <%=trans.tslt("Exit")%> " align="right" onclick="return confirmFinish(this.form, 3)">
	</td>
    <td width="97" align="center"><strong>
      
<%
	int total = totalCurrComp;

	if(total == 0) {
%>	  
<input type="button" name="btnPrev" value="   <   " disabled>
<% } else {
%>
<input type="button" name="btnPrev" value="   <   " onclick="goPrev(this.form)">

<% } 
	if(total+1 == totalComp) {
%>
<input type="button" name="btnNext" value="   >   " disabled>
<% } else {
%>
<input type="button" name="btnNext" align="right" value="   >   " onclick="goNext(this.form)">
<% } %>
</strong></td>

</tr>

</table>

</form>
<%@ include file="Footer.jsp"%>
</body>
</html>