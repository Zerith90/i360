/*
 * JSP generated by Resin-3.1.8 (built Mon, 17 Nov 2008 12:15:21 PST)
 */

package _jsp;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import CP_Classes.vo.voCompetency.*;
import java.util.*;
import CP_Classes.vo.*;

public class _editcompetency__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = _jsp_application.getJspApplicationContext().allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);
    javax.servlet.jsp.PageContext _jsp_parentContext = pageContext;
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html");
    response.setCharacterEncoding("UTF-8");
    request.setCharacterEncoding("UTF-8");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
      // by lydia Date 05/09/2008 Fix jsp file to support Thai language 
      out.write(_jsp_string1, 0, _jsp_string1.length);
      CP_Classes.Database Database;
      synchronized (pageContext.getSession()) {
        Database = (CP_Classes.Database) pageContext.getSession().getAttribute("Database");
        if (Database == null) {
          Database = new CP_Classes.Database();
          pageContext.getSession().setAttribute("Database", Database);
        }
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      CP_Classes.Competency Comp;
      synchronized (pageContext.getSession()) {
        Comp = (CP_Classes.Competency) pageContext.getSession().getAttribute("Comp");
        if (Comp == null) {
          Comp = new CP_Classes.Competency();
          pageContext.getSession().setAttribute("Comp", Comp);
        }
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      CP_Classes.KeyBehaviour KB;
      synchronized (pageContext.getSession()) {
        KB = (CP_Classes.KeyBehaviour) pageContext.getSession().getAttribute("KB");
        if (KB == null) {
          KB = new CP_Classes.KeyBehaviour();
          pageContext.getSession().setAttribute("KB", KB);
        }
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      CP_Classes.DevelopmentActivities DRA;
      synchronized (pageContext.getSession()) {
        DRA = (CP_Classes.DevelopmentActivities) pageContext.getSession().getAttribute("DRA");
        if (DRA == null) {
          DRA = new CP_Classes.DevelopmentActivities();
          pageContext.getSession().setAttribute("DRA", DRA);
        }
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      CP_Classes.DevelopmentResources DRARes;
      synchronized (pageContext.getSession()) {
        DRARes = (CP_Classes.DevelopmentResources) pageContext.getSession().getAttribute("DRARes");
        if (DRARes == null) {
          DRARes = new CP_Classes.DevelopmentResources();
          pageContext.getSession().setAttribute("DRARes", DRARes);
        }
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      CP_Classes.Login logchk;
      synchronized (pageContext.getSession()) {
        logchk = (CP_Classes.Login) pageContext.getSession().getAttribute("logchk");
        if (logchk == null) {
          logchk = new CP_Classes.Login();
          pageContext.getSession().setAttribute("logchk", logchk);
        }
      }
      out.write(_jsp_string2, 0, _jsp_string2.length);
      CP_Classes.Translate trans;
      synchronized (pageContext.getSession()) {
        trans = (CP_Classes.Translate) pageContext.getSession().getAttribute("trans");
        if (trans == null) {
          trans = new CP_Classes.Translate();
          pageContext.getSession().setAttribute("trans", trans);
        }
      }
      out.write(_jsp_string3, 0, _jsp_string3.length);
      out.print((trans.tslt("Edit Competency")));
      out.write(_jsp_string4, 0, _jsp_string4.length);
      out.print((trans.tslt("Please enter Competency Name")));
      out.write(_jsp_string5, 0, _jsp_string5.length);
      out.print((trans.tslt("Please enter Definition")));
      out.write(_jsp_string6, 0, _jsp_string6.length);
      
	//response.setHeader("Pragma", "no-cache");
	//response.setHeader("Cache-Control", "no-cache");
	//response.setDateHeader("expires", 0);

	String username = (String) session.getAttribute("username");

	if (!logchk.isUsable(username)) {

      out.write(_jsp_string7, 0, _jsp_string7.length);
      
 	} else {

 		/*-------------------------------------------------------------------end login modification 1--------------------------------------*/

 		String chkStr = request.getParameter("checked");
 		int PKComp = 0;
 		String name = "";
 		String definition = "";

 		int orgID = logchk.getOrg();
 		int compID = logchk.getCompany();
 		int pkUser = logchk.getPKUser();
 		int userType = logchk.getUserType(); // 1= super admin

 		PKComp = Comp.getPKComp();
 		if (PKComp != 0) {

 			/***************************************
 			 *Edit By James 15 - Nov 2007
 			 ******************************************/

 			voCompetency voEdit = Comp.getCompetency(PKComp);
 			if (voEdit != null) {
 				name = voEdit.getCompetencyName();
 				definition = voEdit.getCompetencyDefinition();
 			}
 		}

 		if (chkStr != null) {
 			PKComp = Integer.parseInt(chkStr);

 			Comp.setPKComp(PKComp);

 			//Comp
 			/***************************************
 			 *Edit By James 15 - Nov 2007
 			 ******************************************/
 			voCompetency voEdit = Comp.getCompetency(PKComp);
 			//ResultSet rsEdit = Database.getRecord(query);
 			//rsEdit.next();
 			if (voEdit != null) {
 				name = voEdit.getCompetencyName();
 				definition = voEdit.getCompetencyDefinition();
 			}
 			//rsEdit.close();

 			int check = Comp.CheckSysLibCompetency(PKComp);

 			if (check == 1 && userType != 1) {
 
      out.write(_jsp_string8, 0, _jsp_string8.length);
      out.print((trans.tslt("The edited System Generated Competency will be saved as a new User Generated Competency")));
      out.write(_jsp_string9, 0, _jsp_string9.length);
      
 	}
 		} else {
 			if (request.getParameter("edited") != null) 
 			{

 				PKComp = Integer.parseInt(request
 						.getParameter("PKComp"));
 				name = request.getParameter("editName");
 				definition = request.getParameter("editDefinition");

 				name = Database.SQLFixer(name);
 				definition = Database.SQLFixer(definition);

 				if (Integer.parseInt(request.getParameter("edited")) == 1)
 				{

 					int compExist = Comp.CheckCompetencyExist(
 							name, definition, orgID, compID);

 					if (compExist != 0 && compExist != PKComp) 
 					{
						 
      out.write(_jsp_string10, 0, _jsp_string10.length);
      out.print((trans.tslt("Record exists")));
      out.write(_jsp_string11, 0, _jsp_string11.length);
      
 					} 
 					else 
 					{

 						try {
 						System.out.println(name);
 							boolean edit = Comp.editRecord(name,
 									definition, PKComp, pkUser);
 						 // Changed by Ha on 14/05/08: Change message to Edited sucessfully
 							
 							if (edit)
 							       {  								
		 						   
      out.write(_jsp_string12, 0, _jsp_string12.length);
      									
                                   	}

 						} catch (SQLException SE) {
 						
      out.write(_jsp_string10, 0, _jsp_string10.length);
      out.print((trans.tslt("Record exists")));
      out.write(_jsp_string13, 0, _jsp_string13.length);
      
 							}
 					}
 				} else if (Integer.parseInt(request
 						.getParameter("edited")) == 2) { // admin or syslib
 					int compExist = Comp.CheckCompetencyExist(
 							name, definition, orgID, compID);

 					if (compExist == 0) {

 						try {
 							boolean add = Comp.addRecord(name,
 									definition, compID, orgID, pkUser,
 									userType);
 							// copy all KBs, DRAs, DRARes under this competency
 							int pk = 0;
 							if (add) {
 								pk = Comp
 										.CheckCompetencyExist(name,
 												definition, orgID,
 												compID);

 								Comp.setPKComp(pk);
 							}

 							//kb
 							/********************
 							 * Edited by James 30 Oct 2007
 							 ************************/
 							Vector copyKB = KB.getRecord(PKComp,
 									compID, orgID);
 							for (int i = 0; i < copyKB.size(); i++) {
 								voKeyBehaviour voKB = (voKeyBehaviour) copyKB
 										.elementAt(i);
 								//while(copyKB.next()) {					
 								String kb1 = voKB.getKeyBehaviour();
 								kb1 = Database.SQLFixer(kb1);
 								int kbLvl1 = voKB.getKBLevel();

 								try {
 									boolean copy = KB.addRecord(pk,
 											kb1, kbLvl1, compID, orgID,
 											pkUser, userType);

 								} catch (SQLException SE) {
 								}
 							}
 							/********************
 							 * Edited by James 30 Oct 2007
 							 ************************/
 							//DRA
 							Vector copyDRA = DRA.getRecord(PKComp,
 									compID, orgID);
 							//while(copyDRA.next()) {

							//Gwen Oh - 27/10/2011: Added logic codes so that when sa creates the development activity, isSystemGenerated = 1 is the default
							String isSysGen = "1";
							if (userType != 1) isSysGen = "0";
						
 							for (int i = 0; i < copyDRA.size(); i++) {
 								votblDRA voDRA = (votblDRA) copyDRA
 										.elementAt(i);
 								String kb1 = voDRA.getDRAStatement();
 								kb1 = Database.SQLFixer(kb1);
 								try {
 									//Gwen Oh - 27/10/2011: Added missing isSystemGenerated parameter for addRecord method
 									boolean copy = DRA.addRecord(pk,
 											kb1, isSysGen, compID, orgID, pkUser,
 											userType);
 								} catch (SQLException SE) {
 								}
 							}

 							/********************
 							 * Edited by James 30 Oct 2007
 							 ************************/
 							//DRARes
 							Vector copyDRARes = DRARes.getRecord(
 									PKComp, compID, orgID);
 							//while(copyDRARes.next()) {	
 							for (int i = 0; i < copyDRARes.size(); i++) {
 								votblDRARES voDRAES = (votblDRARES) copyDRARes
 										.elementAt(i);
 								String kb1 = voDRAES.getResource();
 								kb1 = Database.SQLFixer(kb1);
 								int res1 = voDRAES.getResType();

 								try {
 									//Gwen Oh - 27/10/2011: Added missing isSystemGenerated parameter for addRecord method
 									boolean copy = DRARes.addRecord(pk,
 											kb1, res1, isSysGen, compID, orgID,
 											pkUser, userType);
 								} catch (SQLException SE) {
 								}
 							}
							//Changed by Ha 10/06/08 message to Added Successfully
 							if (add) {
 
      out.write(_jsp_string14, 0, _jsp_string14.length);
      
 	}

 						} catch (SQLException SE) {
 
      out.write(_jsp_string15, 0, _jsp_string15.length);
      
 	}
 					} else {
 
      out.write(_jsp_string10, 0, _jsp_string10.length);
      out.print((trans.tslt("Record exists")));
      out.write(_jsp_string16, 0, _jsp_string16.length);
      
 	}

 				}
 			}//end of edited Type
 		}
 
      out.write(_jsp_string17, 0, _jsp_string17.length);
      out.print((PKComp));
      out.write(_jsp_string18, 0, _jsp_string18.length);
      out.print((trans.tslt("Competency")));
      out.write(_jsp_string19, 0, _jsp_string19.length);
      out.print((name));
      out.write(_jsp_string20, 0, _jsp_string20.length);
      out.print((trans.tslt("Statement")));
      out.write(_jsp_string21, 0, _jsp_string21.length);
      out.print((definition));
      out.write(_jsp_string22, 0, _jsp_string22.length);
      
	if (Comp.CheckSysLibCompetency(PKComp) == 1
				&& logchk.getUserType() != 1) {

      out.write(_jsp_string23, 0, _jsp_string23.length);
      out.print(( trans.tslt("Save") ));
      out.write(_jsp_string24, 0, _jsp_string24.length);
      
 	} else {
 
      out.write(_jsp_string25, 0, _jsp_string25.length);
      out.print(( trans.tslt("Save") ));
      out.write(_jsp_string26, 0, _jsp_string26.length);
      
 	}
 
      out.write(_jsp_string27, 0, _jsp_string27.length);
      out.print(( trans.tslt("Save As New") ));
      out.write(_jsp_string28, 0, _jsp_string28.length);
      out.print(( trans.tslt("Cancel") ));
      out.write(_jsp_string29, 0, _jsp_string29.length);
      
	}

      out.write(_jsp_string30, 0, _jsp_string30.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_application.getJspApplicationContext().freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.server.util.CauchoSystem.getVersionId() != 1886798272571451039L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.vfs.Dependency depend;
      depend = (com.caucho.vfs.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void init(ServletConfig config)
    throws ServletException
  {
    com.caucho.server.webapp.WebApp webApp
      = (com.caucho.server.webapp.WebApp) config.getServletContext();
    super.init(config);
    com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
    com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.PageContextImpl(webApp, this);
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("EditCompetency.jsp"), -4577419705173419979L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string22;
  private final static char []_jsp_string6;
  private final static char []_jsp_string15;
  private final static char []_jsp_string30;
  private final static char []_jsp_string8;
  private final static char []_jsp_string18;
  private final static char []_jsp_string23;
  private final static char []_jsp_string14;
  private final static char []_jsp_string0;
  private final static char []_jsp_string11;
  private final static char []_jsp_string20;
  private final static char []_jsp_string1;
  private final static char []_jsp_string7;
  private final static char []_jsp_string3;
  private final static char []_jsp_string25;
  private final static char []_jsp_string19;
  private final static char []_jsp_string21;
  private final static char []_jsp_string28;
  private final static char []_jsp_string12;
  private final static char []_jsp_string9;
  private final static char []_jsp_string29;
  private final static char []_jsp_string16;
  private final static char []_jsp_string26;
  private final static char []_jsp_string2;
  private final static char []_jsp_string10;
  private final static char []_jsp_string13;
  private final static char []_jsp_string5;
  private final static char []_jsp_string4;
  private final static char []_jsp_string27;
  private final static char []_jsp_string17;
  private final static char []_jsp_string24;
  static {
    _jsp_string22 = "</textarea></td>\r\n	</tr>\r\n</table>\r\n<blockquote>\r\n<blockquote>\r\n".toCharArray();
    _jsp_string6 = " !\");		\r\n			form.editDefinition.focus();\r\n		}\r\n		return false;\r\n	}\r\n	return true;	\r\n}\r\n\r\n//Edited by Xuehai 02 Jun 2011. Remove 'void'. Enable to run on different browers like Chrome&Firefox.\r\n//void function cancelEdit()\r\nfunction cancelEdit()\r\n{\r\n	window.close();\r\n}\r\n</script>\r\n\r\n\r\n".toCharArray();
    _jsp_string15 = " <script>  							\r\n  							window.close();\r\n	opener.location.href = 'Competency.jsp';\r\n						</script> ".toCharArray();
    _jsp_string30 = "\r\n</form>\r\n</body>\r\n</html>".toCharArray();
    _jsp_string8 = " <script>\r\n	alert(\"".toCharArray();
    _jsp_string18 = "\" size=\"10\">\r\n</font>\r\n<table width=\"480\" border=\"0\" font span\r\n	style='font-size: 10.0pt; font-family: Arial'>\r\n	<tr>\r\n		<td width=\"70\">".toCharArray();
    _jsp_string23 = "\r\n<p>&nbsp;&nbsp; <font span\r\n	style='font-size: 10.0pt; font-family: Arial'> <input\r\n	name=\"Submit\" type=\"button\" id=\"Submit\"\r\n	value=\"".toCharArray();
    _jsp_string14 = " <script>  			\r\n							alert(\"Added successfully\");				\r\n  							window.close();\r\n							opener.location.href = 'Competency.jsp';\r\n						</script> ".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n<html>\r\n<head>\r\n<title>Competency</title>\r\n\r\n<meta http-equiv=\"Content-Type\" content=\"text/html\">\r\n\r\n".toCharArray();
    _jsp_string11 = "\");  							\r\n						 </script> ".toCharArray();
    _jsp_string20 = "\" size=\"50\" maxlength=\"50\"></td>\r\n	</tr>\r\n	<tr>\r\n		<td>&nbsp;</td>\r\n		<td>&nbsp;</td>\r\n		<td>&nbsp;</td>\r\n	</tr>\r\n	<tr>\r\n		<td>".toCharArray();
    _jsp_string1 = "\r\n\r\n<style type=\"text/css\">\r\n<!--\r\nbody {\r\n	background-color: #eaebf4;\r\n}\r\n-->\r\n</style>\r\n</head>\r\n\r\n<body>\r\n".toCharArray();
    _jsp_string7 = "\r\n<font size=\"2\"> <script>\r\n	parent.location.href = \"index.jsp\";\r\n</script> ".toCharArray();
    _jsp_string3 = "\r\n\r\n<script language=\"javascript\">\r\nfunction editText(form, type)\r\n{\r\n	if(form.editName.value != \"\" && form.editDefinition.value != \"\") {\r\n		if(confirm(\"".toCharArray();
    _jsp_string25 = "\r\n\r\n<p>&nbsp;&nbsp; <font span\r\n	style='font-size: 10.0pt; font-family: Arial'> <input\r\n	name=\"Submit\" type=\"button\" id=\"Submit\"\r\n	value=\"".toCharArray();
    _jsp_string19 = "</td>\r\n		<td width=\"10\">&nbsp;</td>\r\n		<td width=\"400\"><input name=\"editName\"\r\n			style='font-size: 10.0pt; font-family: Arial' type=\"text\"\r\n			id=\"editName\" value=\"".toCharArray();
    _jsp_string21 = "</td>\r\n		<td>&nbsp;</td>\r\n		<td><textarea name=\"editDefinition\"\r\n			style='font-size: 10.0pt; font-family: Arial' cols=\"50\" rows=\"5\"\r\n			id=\"textarea\">".toCharArray();
    _jsp_string28 = "\"\r\n	onClick=\"return editText(this.form, 2)\"> </font> &nbsp;&nbsp;&nbsp; <font\r\n	span style='font-size: 10.0pt; font-family: Arial'> <input\r\n	name=\"Cancel\" type=\"button\" id=\"Cancel\"\r\n	value=\"".toCharArray();
    _jsp_string12 = "<script>	 \r\n										alert(\"Edited successfully\");\r\n			  							window.close();\r\n										opener.location.href = 'Competency.jsp';\r\n									</script> ".toCharArray();
    _jsp_string9 = "\")\r\n</script> ".toCharArray();
    _jsp_string29 = "\" onClick=\"cancelEdit()\"> </font></p>\r\n</blockquote>\r\n</blockquote>\r\n".toCharArray();
    _jsp_string16 = "\");\r\n  							\r\n						</script> ".toCharArray();
    _jsp_string26 = "\"\r\n	onClick=\"return editText(this.form, 1)\"> </font> ".toCharArray();
    _jsp_string2 = "\r\n".toCharArray();
    _jsp_string10 = " <script>\r\n  							alert(\"".toCharArray();
    _jsp_string13 = "\");  							\r\n						  </script> ".toCharArray();
    _jsp_string5 = " !\");		\r\n			form.editName.focus();\r\n		}else {\r\n			alert(\"".toCharArray();
    _jsp_string4 = "?\")) {\r\n			form.action = \"EditCompetency.jsp?edited=\" + type;\r\n			form.method = \"post\";\r\n			form.submit();\r\n			return true;\r\n		}else\r\n			return false;\r\n	} else {\r\n		if(form.editName.value == \"\") {\r\n			alert(\"".toCharArray();
    _jsp_string27 = "&nbsp;&nbsp;&nbsp;&nbsp; <font span\r\n	style='font-size: 10.0pt; font-family: Arial'> <input\r\n	name=\"SaveAs\" type=\"button\" id=\"Submit\"\r\n	value=\"".toCharArray();
    _jsp_string17 = "\r\n\r\n<form name=\"EditCompetency\" method=\"post\"><font span\r\n	style='font-size: 10.0pt; font-family: Arial'> <input\r\n	name=\"PKComp\" type=\"hidden\" id=\"PKComp\" value=\"".toCharArray();
    _jsp_string24 = "\"\r\n	onClick=\"return editText(this.form, 1)\" disabled> </font> ".toCharArray();
  }
}
