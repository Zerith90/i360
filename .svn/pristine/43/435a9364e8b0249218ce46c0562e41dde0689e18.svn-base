/*
 * JSP generated by Resin Professional 4.0.36 (built Fri, 26 Apr 2013 03:33:09 PDT)
 */

package _jsp;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import java.io.*;
import java.text.DateFormat;
import java.util.*;
import java.util.Date;
import java.text.*;
import java.lang.String;
import java.util.Vector;
import CP_Classes.vo.*;
import CP_Classes.Calculation;
import CP_Classes.SurveyResult;

public class _groupsummaryreport__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html");
    response.setCharacterEncoding("utf-8");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    //added in this file to support group summary reports
    out.write(_jsp_string1, 0, _jsp_string1.length);
    CP_Classes.Database Database;
    synchronized (pageContext.getSession()) {
      Database = (CP_Classes.Database) pageContext.getSession().getAttribute("Database");
      if (Database == null) {
        Database = new CP_Classes.Database();
        pageContext.getSession().setAttribute("Database", Database);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.QuestionnaireReport QR;
    synchronized (pageContext.getSession()) {
      QR = (CP_Classes.QuestionnaireReport) pageContext.getSession().getAttribute("QR");
      if (QR == null) {
        QR = new CP_Classes.QuestionnaireReport();
        pageContext.getSession().setAttribute("QR", QR);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.Login logchk;
    synchronized (pageContext.getSession()) {
      logchk = (CP_Classes.Login) pageContext.getSession().getAttribute("logchk");
      if (logchk == null) {
        logchk = new CP_Classes.Login();
        pageContext.getSession().setAttribute("logchk", logchk);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.User_Jenty User_Jenty;
    synchronized (pageContext.getSession()) {
      User_Jenty = (CP_Classes.User_Jenty) pageContext.getSession().getAttribute("User_Jenty");
      if (User_Jenty == null) {
        User_Jenty = new CP_Classes.User_Jenty();
        pageContext.getSession().setAttribute("User_Jenty", User_Jenty);
      }
    }
    out.write(_jsp_string3, 0, _jsp_string3.length);
    CP_Classes.GroupSummaryReport ExcelGroupSum;
    synchronized (pageContext.getSession()) {
      ExcelGroupSum = (CP_Classes.GroupSummaryReport) pageContext.getSession().getAttribute("ExcelGroupSum");
      if (ExcelGroupSum == null) {
        ExcelGroupSum = new CP_Classes.GroupSummaryReport();
        pageContext.getSession().setAttribute("ExcelGroupSum", ExcelGroupSum);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.Setting Setting;
    synchronized (pageContext.getSession()) {
      Setting = (CP_Classes.Setting) pageContext.getSession().getAttribute("Setting");
      if (Setting == null) {
        Setting = new CP_Classes.Setting();
        pageContext.getSession().setAttribute("Setting", Setting);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.Translate trans;
    synchronized (pageContext.getSession()) {
      trans = (CP_Classes.Translate) pageContext.getSession().getAttribute("trans");
      if (trans == null) {
        trans = new CP_Classes.Translate();
        pageContext.getSession().setAttribute("trans", trans);
      }
    }
    out.write(_jsp_string4, 0, _jsp_string4.length);
    out.print((trans.tslt("Please select the options")));
    out.write(_jsp_string5, 0, _jsp_string5.length);
    out.print((trans.tslt("Please select the options")));
    out.write(_jsp_string6, 0, _jsp_string6.length);
    

String username=(String)session.getAttribute("username");

  if (!logchk.isUsable(username)) 
  {
    out.write(_jsp_string7, 0, _jsp_string7.length);
      } 
  else 
  { 	
if(request.getParameter("proceed") != null)
{ 
	int PKOrg = new Integer(request.getParameter("proceed")).intValue();
 	logchk.setOrg(PKOrg);
 	QR.setJobPostID(0);
 	QR.setSurveyID(0);
 	QR.setDivisionID(0);
 	QR.setDepartmentID(0);
 	QR.setGroupID(0);
 
}

/*-------------------------------------------------------------------end login modification 1--------------------------------------*/

	int compID = logchk.getCompany();

    out.write(_jsp_string8, 0, _jsp_string8.length);
    out.print((trans.tslt("Group Summary Report")));
    out.write(_jsp_string9, 0, _jsp_string9.length);
    out.print((trans.tslt("Organisation")));
    out.write(_jsp_string10, 0, _jsp_string10.length);
    out.print((trans.tslt("All")));
    out.write(_jsp_string2, 0, _jsp_string2.length);
    
	Vector vOrg = logchk.getOrgList(logchk.getCompany());
	
	for(int i=0; i<vOrg.size(); i++)
	{
		votblOrganization vo = (votblOrganization)vOrg.elementAt(i);
		int PKOrg = vo.getPKOrganization();
		String OrgName = vo.getOrganizationName();
	
		if(logchk.getOrg() == PKOrg)
		{

    out.write(_jsp_string11, 0, _jsp_string11.length);
    out.print((PKOrg));
    out.write(_jsp_string12, 0, _jsp_string12.length);
    out.print((OrgName));
    out.write(_jsp_string13, 0, _jsp_string13.length);
    		}
		else	
		{

    out.write(_jsp_string11, 0, _jsp_string11.length);
    out.print((PKOrg));
    out.write('>');
    out.print((OrgName));
    out.write(_jsp_string14, 0, _jsp_string14.length);
    		}	
	}

    out.write(_jsp_string15, 0, _jsp_string15.length);
    	
	int OrgID = logchk.getOrg();	
	int pkUser = logchk.getPKUser();
	int nameSeq = User_Jenty.NameSequence(OrgID);
	int userType = logchk.getUserType();	// 1= super admin

	Vector jobPostList = QR.getJobPost(compID, OrgID);
	Vector surveyList = null;
	Vector groupList  = null;
	Vector DivisionList = null;
	Vector DepartmentList = null;	
	
	
	//Changed made by Ha 27/05/08 to set respective value to default when changing upper layer
	if (request.getParameter("jobPost")!=null)
	{		
	    int id = Integer.parseInt(request.getParameter("jobPost"));
		
	    QR.setJobPostID(id);
		QR.setSurveyID(0);
		QR.setDivisionID(0);
		QR.setDepartmentID(0);
		QR.setGroupID(0);
		
		DivisionList = null;
		DepartmentList = null;
		groupList = null;	
		
		surveyList = QR.getSurvey(id);
	}
	if (request.getParameter("surveyID")!=null)
	{		
	    int id = Integer.parseInt(request.getParameter("surveyID"));
		QR.setSurveyID(id);
		QR.setDivisionID(0);
		QR.setDepartmentID(0);
		QR.setGroupID(0);
		
		DivisionList = QR.getDivision(id);
		DepartmentList = QR.getDepartment(id, QR.getDivisionID());
		groupList = QR.getGroup(id, QR.getDivisionID(), QR.getDepartmentID());
	}
	if (request.getParameter("div")!=null)
	{		
	    int id = Integer.parseInt(request.getParameter("div"));
		QR.setDivisionID(id);
		QR.setDepartmentID(0);
		QR.setGroupID(0);
		
		DivisionList = QR.getDivision(QR.getSurveyID());
		DepartmentList = QR.getDepartment(QR.getSurveyID(), QR.getDivisionID());
		groupList = QR.getGroup(QR.getSurveyID(), QR.getDivisionID(), QR.getDepartmentID());
	}
	
	if (request.getParameter("dept")!=null)
	{		
	    int id = Integer.parseInt(request.getParameter("dept"));
		QR.setDepartmentID(id);
		QR.setGroupID(0);
		
		DivisionList = QR.getDivision(QR.getSurveyID());
		DepartmentList = QR.getDepartment(QR.getSurveyID(),  QR.getDivisionID());
		groupList = QR.getGroup(QR.getSurveyID(), QR.getDivisionID(), QR.getDepartmentID());
	}
	
	if (request.getParameter("groupName")!=null)
	{		
		int id = Integer.parseInt(request.getParameter("groupName"));	
		QR.setGroupID(id);
		DivisionList = QR.getDivision(QR.getSurveyID());
		DepartmentList = QR.getDepartment(QR.getSurveyID(),  QR.getDivisionID());
		groupList = QR.getGroup(QR.getSurveyID(),  QR.getDivisionID(), QR.getDepartmentID());
	}
	//End of change made by Ha
	int jobPost = QR.getJobPostID();	
	int surveyID = QR.getSurveyID();	
	int divID = QR.getDivisionID();
	int deptID = QR.getDepartmentID();
	int groupID  = QR.getGroupID();

	if(jobPost != 0) 
		surveyList = QR.getSurvey(jobPost);
		
	if(surveyID != 0) {				
		DivisionList = QR.getDivision(surveyID);
		DepartmentList = QR.getDepartment(surveyID, QR.getDivisionID());
		groupList = QR.getGroup(surveyID, QR.getDivisionID(), QR.getDepartmentID());
	}

//Changed by Albert (12/06/2012) to fix bug where two or more groups with same name appear duplicate	
		if(request.getParameter("open") != null) {
			Vector assignment = new Vector();
			SurveyResult s = new SurveyResult();
			jobPost = QR.getJobPostID();		
			surveyID = QR.getSurveyID();
		  
			// Added by Ha 26/05/08 adding checking null value-re-edit by Ha 06/06/08 name of parameter
			String sDivID = request.getParameter("div");			
			if (sDivID !=null){
				if(!(sDivID.equals("0"))) divID = Integer.parseInt(sDivID);
				else divID=0;			
			}
		
			String sDeptID = request.getParameter("dept");			
			if (sDeptID !=null){
				if(!(sDeptID.equals("0"))) deptID = Integer.parseInt(sDeptID);
				else deptID=0;
			}
		
			String sGroupID = request.getParameter("groupName");			
			if (sGroupID !=null){
				if(!(sGroupID.equals("0"))) groupID = Integer.parseInt(sGroupID);
				else groupID=0;
			}			
			
			
			Vector<Integer> deptIDList = new Vector<Integer>();
			Vector<Integer> groupIDList = new Vector<Integer>();
		
			if(divID==0){ //division is all, deptID might be pointing more than one
				System.out.println("I enter divID=0");
				if(deptID==0){ //department is all, group ID might be pointing more than one
					System.out.println("	I enter deptID=0");
					deptIDList.add(0);
					if(groupID==0){
						groupIDList.add(0);
					} else{
						String currentGroupName = "";
						groupList = QR.getGroup(QR.getSurveyID(),divID,deptID);
						//get the name of the current selected group
						for(int i = 0; i < groupList.size(); i ++){
							voGroup voGrp = (voGroup) groupList.elementAt(i);
						   	if(voGrp.getPKGroup() == groupID){
							   currentGroupName = voGrp.getGroupName();
							}
						} 
						//get the groupIDs of all the groups with the same name as the current seleceted one
						for(int i = 0; i < groupList.size(); i ++){
							voGroup voGrp = (voGroup) groupList.elementAt(i);
							if(voGrp.getGroupName().equals(currentGroupName)){
								groupIDList.add(voGrp.getPKGroup());
							}
						}
					}//end if groupID==0
				} else { //particular department, might point more than one department actually
					System.out.println("	I enter deptID!=0");
	  				String currentDepartmentName= "";
	  				DepartmentList = QR.getDepartment(QR.getSurveyID(),divID);
	  				//get the current department name
	  				for(int i=0; i<DepartmentList.size(); i++){
	  					voDepartment voDept = (voDepartment) DepartmentList.elementAt(i);
	  					if(voDept.getPKDepartment() == deptID) currentDepartmentName=voDept.getDepartmentName();
	  				}
	  				//get all departmentIDs with the same name as the current department name
	  				for(int i=0; i<DepartmentList.size(); i++){
	  					voDepartment voDept = (voDepartment) DepartmentList.elementAt(i);
	  					if(voDept.getDepartmentName().equals(currentDepartmentName)) deptIDList.add(voDept.getPKDepartment());
	  				}
	  				if(groupID==0){
	  					System.out.println("		I enter groupID=0");
	  					//get the groupIDs from all the groups
						for(int i = 0; i < deptIDList.size(); i++){
						   for( Object o : QR.getGroup(QR.getSurveyID(), divID, deptIDList.elementAt(i))) groupList.add(o);
						}
						for(int i = 0; i < groupList.size(); i++){
							voGroup voGrp = (voGroup) groupList.elementAt(i);
							groupIDList.add(voGrp.getPKGroup());
						}
	  				} else{
	  					System.out.println("		I enter groupID!=0");
	  					//get the groupIDs from all the groups
						for(int i = 0; i < deptIDList.size(); i++){
					  	 	for( Object o : QR.getGroup(QR.getSurveyID(), divID, deptIDList.elementAt(i))) groupList.add(o);
						}
						String currentGroupName = "";
						//get the name of the current selected group
						for(int i = 0; i < groupList.size(); i ++){
							voGroup voGrp = (voGroup) groupList.elementAt(i);
					   		if(voGrp.getPKGroup() == groupID){
							 	currentGroupName = voGrp.getGroupName();
							}
						} 
						//get the groupIDs of all the groups with the same name as the current seleceted one
						for(int i = 0; i < groupList.size(); i ++){
							voGroup voGrp = (voGroup) groupList.elementAt(i);
							if(voGrp.getGroupName().equals(currentGroupName)){
								groupIDList.add(voGrp.getPKGroup());
							}
						}
	  				}//end if groupID==0
				}//end if deptID==0
			} else{ //divison is particular ID
			System.out.println("I enter divID!=0");
				if(deptID==0){
					System.out.println("	I enter deptID=0");
					deptIDList.add(0);
					if(groupID==0){
						System.out.println("		I enter groupID=0");
						groupIDList.add(0);
					} else{
						System.out.println("		I enter groupID!=0");
						String currentGroupName = "";
						groupList = QR.getGroup(QR.getSurveyID(),divID,deptID);
						//get the name of the current selected group
						for(int i = 0; i < groupList.size(); i ++){
							voGroup voGrp = (voGroup) groupList.elementAt(i);
					   		if(voGrp.getPKGroup() == groupID){
							   currentGroupName = voGrp.getGroupName();
							}
						} 
						//get the groupIDs of all the groups with the same name as the current seleceted one
						for(int i = 0; i < groupList.size(); i ++){
							voGroup voGrp = (voGroup) groupList.elementAt(i);
							if(voGrp.getGroupName().equals(currentGroupName)){
								groupIDList.add(voGrp.getPKGroup());
							}
						}
					}
				} else{
					System.out.println("	I enter deptID!=0");
					deptIDList.add(deptID);
					groupIDList.add(groupID);
				}
			}
			
			Vector Target = new Vector();
			Date timeStamp = new java.util.Date();
			SimpleDateFormat dFormat = new SimpleDateFormat("ddMMyyHHmmss");
			String temp  =  dFormat.format(timeStamp);
			String file_name = "GroupSummaryReport" + temp + ".xls";
			String temp1 = "";
			System.out.println("survey ID is " +surveyID + "-- groupList is " +  groupIDList + "-- deptList is" +  deptIDList + "-- divList is" + divID);
			//Changed by Ha 17/06/08 to automatically calculate if not all the raters have been calculated
			// when generating the report
			Target = s.TargetID(surveyID, divID, deptIDList, groupIDList);
			System.out.println("target size is "+Target.size());
			for (int j = 0; j < Target.size(); j++)
				{
					voUser vo = (voUser)Target.get(j);
					if (!s.checkCalculationStatusComplete(vo.getTargetLoginID(), surveyID ,divID, deptID, groupID))
					{						
						 if (!s.isAllRaterRated(surveyID, groupID, vo.getTargetLoginID()))                	 
			                 s.CalculateStatus(vo.getTargetLoginID(),surveyID, divID, deptID, groupID, 1);
			             else
			                 s.CalculateStatus(vo.getTargetLoginID(),surveyID, divID, deptID, groupID, 0);						
					}
				}				
			
			/*
			Generate the report with surveyID and file_name
			*/
			ExcelGroupSum.Report(surveyID,divID,deptIDList,groupIDList, file_name);

			String output = Setting.getReport_Path() + "\\" + file_name;
			File f = new File (output);
		
			//set the content type(can be excel/word/powerpoint etc..)
			response.reset();
			response.setContentType ("application/xls");
			//set the header and also the Name by which user will be prompted to save
			response.addHeader ("Content-Disposition", "attachment;filename=\"GroupSummaryReport.xls\"");
				
			//get the file name
			String name = f.getName().substring(f.getName().lastIndexOf("/") + 1,f.getName().length());
			//OPen an input stream to the file and post the file contents thru the 
			//servlet output stream to the client m/c
			
			InputStream in = new FileInputStream(f);
			ServletOutputStream outs = response.getOutputStream();
			
			
			int bit = 256;
			int i = 0;
	
	
			try {
				while ((bit) >= 0) {
					bit = in.read();
					outs.write(bit);
				}
	
			} catch (IOException ioe) {
				ioe.printStackTrace(System.out);
			}
				
			outs.flush();
			outs.close();
			in.close();	
	    
	}	
	
	

    out.write(_jsp_string16, 0, _jsp_string16.length);
    out.print((trans.tslt("Job Position")));
    out.write(_jsp_string17, 0, _jsp_string17.length);
     int t = 0; 
    out.write(_jsp_string18, 0, _jsp_string18.length);
    out.print((t));
    out.write('>');
    out.print((trans.tslt("Please select one")));
    out.write(_jsp_string19, 0, _jsp_string19.length);
     
		    /*********************
			* Edit By James 14-Nov 2007
			***********************/
	
		 // while(jobPostList.next()) {
		 for(int i=0;i<jobPostList.size();i++){
		 	votblJobPosition voJob=(votblJobPosition)jobPostList.elementAt(i);
	  		int ID = voJob.getJobPositionID();
			String name = voJob.getJobPosition();
			
			jobPost = QR.getJobPostID();
						
			if(jobPost != 0 && ID == jobPost) {
	  
    out.write(_jsp_string20, 0, _jsp_string20.length);
    out.print((ID));
    out.write(_jsp_string12, 0, _jsp_string12.length);
    out.print((name));
    out.write(_jsp_string19, 0, _jsp_string19.length);
     } else {  
    out.write(_jsp_string20, 0, _jsp_string20.length);
    out.print((ID));
    out.write('>');
    out.print((name));
    out.write(_jsp_string19, 0, _jsp_string19.length);
     }
		   } 
	  
    out.write(_jsp_string21, 0, _jsp_string21.length);
    out.print((trans.tslt("Survey")));
    out.write(_jsp_string22, 0, _jsp_string22.length);
    out.print((t));
    out.write('>');
    out.print((trans.tslt("Please select one")));
    out.write(_jsp_string23, 0, _jsp_string23.length);
     if(surveyList != null) { 
			/*********************
			* Edit By James 14-Nov 2007
			***********************/
	
	  		//while(surveyList.next()) {
			for(int j=0;j<surveyList.size();j++){
				votblSurvey voSurvey=(votblSurvey)surveyList.elementAt(j);
				
	  			int ID = voSurvey.getSurveyID();
				String name = voSurvey.getSurveyName();
		
			if(surveyID != 0 && ID == surveyID) {
	  
    out.write(_jsp_string24, 0, _jsp_string24.length);
    out.print((ID));
    out.write(_jsp_string12, 0, _jsp_string12.length);
    out.print((name));
    out.write(_jsp_string23, 0, _jsp_string23.length);
     } else {  
    out.write(_jsp_string24, 0, _jsp_string24.length);
    out.print((ID));
    out.write('>');
    out.print((name));
    out.write(_jsp_string25, 0, _jsp_string25.length);
     }
		   } 
		  }
	  
    out.write(_jsp_string26, 0, _jsp_string26.length);
    out.print((trans.tslt("Division")));
    out.write(_jsp_string27, 0, _jsp_string27.length);
    out.print((t));
    out.write('>');
    out.print((trans.tslt("All")));
    out.write(_jsp_string19, 0, _jsp_string19.length);
     	
		   if(DivisionList != null) {
				for(int k=0;k<DivisionList.size();k++){
					voDivision voD=(voDivision)DivisionList.elementAt(k);
					int ID = voD.getPKDivision();
					String name = voD.getDivisionName();
					divID = QR.getDivisionID();
					
		  			if(divID != 0 && ID == divID){
	  
    out.write(_jsp_string28, 0, _jsp_string28.length);
    out.print((ID));
    out.write(_jsp_string12, 0, _jsp_string12.length);
    out.print((name));
    out.write(_jsp_string29, 0, _jsp_string29.length);
     			} else{ 
	  
    out.write(_jsp_string30, 0, _jsp_string30.length);
    out.print((ID));
    out.write('>');
    out.print((name));
    out.write(_jsp_string31, 0, _jsp_string31.length);
      	  
		 			}
				} 
			}
    out.write(_jsp_string32, 0, _jsp_string32.length);
    out.print((trans.tslt("Department")));
    out.write(_jsp_string33, 0, _jsp_string33.length);
    out.print((t));
    out.write('>');
    out.print((trans.tslt("All")));
    out.write(_jsp_string31, 0, _jsp_string31.length);
     	DepartmentList = QR.getDepartment(QR.getSurveyID(), QR.getDivisionID());
        	//delete duplicate entries with same department name but different IDs
        	Vector<voDepartment> uniqueDeptList = new Vector<voDepartment>();
			for(int i=0; i<DepartmentList.size(); i++){
				voDepartment voDept = (voDepartment) DepartmentList.elementAt(i);
				Boolean duplicated = false;
				for(voDepartment vo : uniqueDeptList){
					if(voDept.getDepartmentName().equals(vo.getDepartmentName())){
						duplicated = true;
					}
				}
				if(!duplicated){
					uniqueDeptList.add(voDept);
				}
			}	
        	if(uniqueDeptList != null) {
				for(int l=0;l<uniqueDeptList.size();l++){
					voDepartment voDep=(voDepartment)uniqueDeptList.elementAt(l);
					int ID = voDep.getPKDepartment();
					String name =voDep.getDepartmentName();						
					deptID = QR.getDepartmentID();		
					if(deptID != 0 && ID == deptID) {
	  
    out.write(_jsp_string34, 0, _jsp_string34.length);
    out.print((ID));
    out.write(_jsp_string12, 0, _jsp_string12.length);
    out.print((name));
    out.write(_jsp_string35, 0, _jsp_string35.length);
     			} else{ 
       
    out.write(_jsp_string36, 0, _jsp_string36.length);
    out.print((ID));
    out.write('>');
    out.print((name));
    out.write(_jsp_string31, 0, _jsp_string31.length);
     	
		  			}
				} 
			}
    out.write(_jsp_string32, 0, _jsp_string32.length);
    out.print((trans.tslt("Group")));
    out.write(_jsp_string37, 0, _jsp_string37.length);
    out.print((t));
    out.write('>');
    out.print((trans.tslt("All")));
    out.write(_jsp_string23, 0, _jsp_string23.length);
    
	  		surveyID = QR.getSurveyID();
	  		divID = QR.getDivisionID();
	  		deptID = QR.getDepartmentID();
	  		groupID = QR.getGroupID();
	  			  		
	  		if(deptID==0){// deptID="All" is selected
	  			groupList = QR.getGroup(surveyID,divID,deptID);
	  		} else{// particular deptID
	  			Vector sameNameDepartment = new Vector();
	  			String currentDepartmentName= "";
	  			//get the current department name
	  			for(int i=0; i<DepartmentList.size(); i++){
	  				voDepartment voDept = (voDepartment) DepartmentList.elementAt(i);
	  				if(voDept.getPKDepartment() == QR.getDepartmentID()) currentDepartmentName=voDept.getDepartmentName();
	  			}
	  			//get all departmentIDs with the same name as the current department name
	  			for(int i=0; i<DepartmentList.size(); i++){
	  				voDepartment voDept = (voDepartment) DepartmentList.elementAt(i);
	  				if(voDept.getDepartmentName().equals(currentDepartmentName)) sameNameDepartment.add(voDept);
	  			}
	  			//get the groups from different departments
	  			groupList = new Vector();
	  			for(int i=0; i<sameNameDepartment.size(); i++){
	  				voDepartment voDept = (voDepartment) sameNameDepartment.elementAt(i);
	  				for(Object o: QR.getGroup(surveyID,divID,voDept.getPKDepartment())) groupList.add(o);
	  			}
	  		}
	  		//delete duplicate entries with same group name but different IDs
	  		Vector<voGroup> uniqueGroupList = new Vector<voGroup>();
			for(int i=0; i<groupList.size(); i++){
				voGroup voGrp = (voGroup) groupList.elementAt(i);
				Boolean duplicated = false;
				for(voGroup vo : uniqueGroupList){
					if(voGrp.getGroupName().equals(vo.getGroupName())){
						duplicated = true;
					}
				}
				if(!duplicated){
					uniqueGroupList.add(voGrp);
				}
			}
	   		if(uniqueGroupList != null) {
				for(int l=0;l<uniqueGroupList.size();l++){
					voGroup voGrp=(voGroup) uniqueGroupList.elementAt(l);
					int ID = voGrp.getPKGroup();
					String name =voGrp.getGroupName();						
					groupID = QR.getGroupID();		
					if(groupID != 0 && ID == groupID) {
	  
    out.write(_jsp_string34, 0, _jsp_string34.length);
    out.print((ID));
    out.write(_jsp_string12, 0, _jsp_string12.length);
    out.print((name));
    out.write(_jsp_string35, 0, _jsp_string35.length);
     			} else{ 
       
    out.write(_jsp_string36, 0, _jsp_string36.length);
    out.print((ID));
    out.write('>');
    out.print((name));
    out.write(_jsp_string31, 0, _jsp_string31.length);
     	
		  			}
				} 
			}
    out.write(_jsp_string38, 0, _jsp_string38.length);
     if(compID != 2 || userType == 1) {

    out.write(_jsp_string39, 0, _jsp_string39.length);
    out.print((trans.tslt("Preview")));
    out.write(_jsp_string40, 0, _jsp_string40.length);
    
} else {

    out.write(_jsp_string41, 0, _jsp_string41.length);
    out.print((trans.tslt("Preview")));
    out.write(_jsp_string42, 0, _jsp_string42.length);
    
}

    out.write(_jsp_string43, 0, _jsp_string43.length);
     } 
    out.write(_jsp_string44, 0, _jsp_string44.length);
    // by lydia Date 05/09/2008 Fix jsp file to support Thai language 
    out.write(_jsp_string45, 0, _jsp_string45.length);
    
	Calendar c = Calendar.getInstance();
	int year = c.get(Calendar.YEAR);

    out.write(_jsp_string46, 0, _jsp_string46.length);
     // Denise 05/01/2010 update new email address 
    out.write(_jsp_string47, 0, _jsp_string47.length);
    out.print((year));
    out.write(_jsp_string48, 0, _jsp_string48.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != -7791540776389363938L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("GroupSummaryReport.jsp"), 5887565659301542305L, false);
    _caucho_depends.add(depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("Footer.jsp"), -6500873733011061252L, false);
    _caucho_depends.add(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string27;
  private final static char []_jsp_string16;
  private final static char []_jsp_string32;
  private final static char []_jsp_string36;
  private final static char []_jsp_string34;
  private final static char []_jsp_string18;
  private final static char []_jsp_string0;
  private final static char []_jsp_string13;
  private final static char []_jsp_string48;
  private final static char []_jsp_string40;
  private final static char []_jsp_string31;
  private final static char []_jsp_string24;
  private final static char []_jsp_string21;
  private final static char []_jsp_string44;
  private final static char []_jsp_string4;
  private final static char []_jsp_string33;
  private final static char []_jsp_string10;
  private final static char []_jsp_string25;
  private final static char []_jsp_string12;
  private final static char []_jsp_string41;
  private final static char []_jsp_string26;
  private final static char []_jsp_string22;
  private final static char []_jsp_string5;
  private final static char []_jsp_string47;
  private final static char []_jsp_string39;
  private final static char []_jsp_string43;
  private final static char []_jsp_string28;
  private final static char []_jsp_string23;
  private final static char []_jsp_string42;
  private final static char []_jsp_string3;
  private final static char []_jsp_string46;
  private final static char []_jsp_string30;
  private final static char []_jsp_string11;
  private final static char []_jsp_string15;
  private final static char []_jsp_string9;
  private final static char []_jsp_string19;
  private final static char []_jsp_string8;
  private final static char []_jsp_string20;
  private final static char []_jsp_string17;
  private final static char []_jsp_string37;
  private final static char []_jsp_string1;
  private final static char []_jsp_string2;
  private final static char []_jsp_string38;
  private final static char []_jsp_string14;
  private final static char []_jsp_string6;
  private final static char []_jsp_string7;
  private final static char []_jsp_string29;
  private final static char []_jsp_string35;
  private final static char []_jsp_string45;
  static {
    _jsp_string27 = " : </td>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n      <td bordercolor=\"#FFFFCC\"><select name=\"division\" onChange=\"populateDept(this.form, this.form.division, this.form.surveyName, this.form.JobPost)\">\r\n          <option value=".toCharArray();
    _jsp_string16 = "\r\n\r\n  <table width=\"460\" boQEr=\"0\" style='font-size:10.0pt;font-family:Arial' bgcolor=\"#FFFFCC\" border=\"2\" bordercolor=\"#3399FF\">\r\n    <tr>\r\n      <td align=\"right\" bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td align=\"right\" bordercolor=\"#FFFFCC\">".toCharArray();
    _jsp_string32 = "\r\n          </select></td>\r\n    </tr>\r\n    <tr>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td align=\"right\" bordercolor=\"#FFFFCC\">".toCharArray();
    _jsp_string36 = "  				<option value = ".toCharArray();
    _jsp_string34 = "				<option value = ".toCharArray();
    _jsp_string18 = "\r\n      <td bordercolor=\"#FFFFCC\">\r\n        <select name=\"JobPost\" onchange = \"getID(this.form, this.form.JobPost.options[JobPost.selectedIndex].value, 1)\">\r\n          <option value=".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n".toCharArray();
    _jsp_string13 = "</option>\r\n\r\n".toCharArray();
    _jsp_string48 = " Pacific Century Consulting Pte Ltd. All Rights Reserved.\r\n		</font>\r\n		</td>\r\n		\r\n	</tr>\r\n		\r\n</table>\r\n\r\n</table>\r\n</body>\r\n</html>".toCharArray();
    _jsp_string40 = "\" onclick = \"return confirmOpen(this.form)\">\r\n".toCharArray();
    _jsp_string31 = "\r\n        ".toCharArray();
    _jsp_string24 = "\r\n	  	<option value = ".toCharArray();
    _jsp_string21 = "\r\n        </select></td>\r\n    </tr>\r\n    <tr>\r\n      <td align=\"right\" bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td width=\"100\" align=\"right\" bordercolor=\"#FFFFCC\">".toCharArray();
    _jsp_string44 = "\r\n</form>\r\n\r\n<p></p>\r\n\r\n\r\n".toCharArray();
    _jsp_string4 = "\r\n\r\n<script language=\"javascript\">\r\nvar x = parseInt(window.screen.width) / 2 - 200;  // the number 250 is the exact half of the width of the pop-up and so should be changed according to the size of the pop-up\r\nvar y = parseInt(window.screen.height) / 2 - 200;\r\n\r\nfunction getID(form, ID, type)\r\n{\r\n	var typeSelected = \"\";\r\n	\r\n	if(ID != 0) {\r\n		switch(type) {\r\n			case 1: typeSelected = \"jobPost\";\r\n					  break;\r\n			case 2: typeSelected = \"surveyID\";\r\n					  break;\r\n		}\r\n\r\n		var query = \"GroupSummaryReport.jsp?groupName=0&\" + typeSelected + \"=\" + ID;\r\n		form.action = query;\r\n		form.method = \"post\";\r\n		form.submit();\r\n	} else {\r\n		alert(\"".toCharArray();
    _jsp_string33 = " : </td>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n      <td bordercolor=\"#FFFFCC\"><select name=\"department\" onChange=\"populateGrp(this.form, this.form.division, this.form.department, this.form.surveyName, this.form.JobPost)\"> \r\n          <option value=".toCharArray();
    _jsp_string10 = "</span> \r\n		:</font></td>\r\n		<td width=\"19\" bordercolor=\"#FFFFFF\">&nbsp;</td>\r\n		<td width=\"238\" bordercolor=\"#FFFFFF\"><select size=\"1\" name=\"selOrg\" onchange=\"proceed(this.form,this.form.selOrg)\" >\r\n			<option value=\"0\" selected>".toCharArray();
    _jsp_string25 = "	  \r\n	  ".toCharArray();
    _jsp_string12 = " selected>".toCharArray();
    _jsp_string41 = "   \r\n<input type=\"button\" name=\"btnOpen\" value=\"".toCharArray();
    _jsp_string26 = "\r\n      </select></td>\r\n    </tr>\r\n    <tr>\r\n      <td align=\"right\" bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n    </tr>\r\n    <tr>\r\n      <td align=\"right\" bordercolor=\"#FFFFCC\">".toCharArray();
    _jsp_string22 = " \r\n		: </td>\r\n      <td width=\"10\" bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n	  <td width=\"230\" bordercolor=\"#FFFFCC\">\r\n	  <select name=\"surveyName\" onchange = \"getID(this.form, this.form.surveyName.options[surveyName.selectedIndex].value, 2)\">\r\n	  <option value=".toCharArray();
    _jsp_string5 = "\");\r\n		return false;\r\n	}\r\n	return true;	\r\n}\r\n\r\nfunction confirmOpen(form)\r\n{\r\n	if(checkField(form)){\r\n	\r\n		if(form.JobPost.value != 0 && form.surveyName.value != 0)  {\r\n			form.action = \"GroupSummaryReport.jsp?open=1\";\r\n			form.submit();\r\n			return true;	\r\n		}else {\r\n			alert(\"".toCharArray();
    _jsp_string47 = "\r\n		<td align=\"center\" height=\"5\" valign=\"top\"><font size=\"1\" color=\"navy\" face=\"Arial\">&nbsp;&nbsp;<a style=\"TEXT-DECORATION: none; color:navy;\" href=\"Login.jsp\">Home</a>&nbsp;| <a color=\"navy\" face=\"Arial\">&nbsp;<a style=\"TEXT-DECORATION: none; color:navy;\" href=\"mailto:3SixtyAdmin@pcc.com.sg?subject=Regarding:\">Contact \r\n		Us</a><a color=\"navy\" face=\"Arial\" href=\"termofuse.jsp\" target=\"_blank\"><span style=\"color: #000080; text-decoration: none\"> | Terms of Use </span></a>| <span style=\"color: #000080; text-decoration: none\"><a style=\"TEXT-DECORATION: none; color:navy;\" href=\"http://www.pcc.com.sg/\" target=\"_blank\">PCC Website</a></span></font></td></tr><tr>\r\n		<font size=\"2\" face=\"Arial\" style=\"font-size: 14pt\" color=\"#000080\">\r\n   \r\n		<td align=\"center\" height=\"5\" valign=\"top\">\r\n		<font size=\"1\" color=\"navy\" face=\"Arial\">&nbsp;Copyright &copy; ".toCharArray();
    _jsp_string39 = "\r\n<input type=\"button\" name=\"btnOpen\" value=\"".toCharArray();
    _jsp_string43 = "\r\n</td>\r\n    </tr>\r\n  </table>\r\n  \r\n\r\n".toCharArray();
    _jsp_string28 = "			<option value = ".toCharArray();
    _jsp_string23 = "\r\n	  ".toCharArray();
    _jsp_string42 = "\" onclick = \"return confirmOpen(this.form)\" disabled>  	\r\n".toCharArray();
    _jsp_string3 = "\r\n<!--avoid exception due to duplicate id with Group Report\r\nQiao Li 06 Jan 2010-->\r\n".toCharArray();
    _jsp_string46 = "\r\n\r\n<table border=\"0\" width=\"610\" height=\"26\" id=\"table1\">\r\n\r\n	<tr>\r\n		<font size=\"2\" face=\"Arial\" style=\"font-size: 14pt\" color=\"#000080\">\r\n		".toCharArray();
    _jsp_string30 = "    		<option value = ".toCharArray();
    _jsp_string11 = "\r\n	<option value=".toCharArray();
    _jsp_string15 = "\r\n</select></td>\r\n		<td width=\"93\" align=\"left\" bordercolor=\"#FFFFFF\">&nbsp;</td>\r\n	</tr>\r\n	<tr>\r\n		<td width=\"100\" bordercolor=\"#FFFFFF\">&nbsp;</td>\r\n		<td width=\"19\" bordercolor=\"#FFFFFF\">&nbsp;</td>\r\n		<td bordercolor=\"#FFFFFF\">&nbsp;</td>\r\n	</tr>\r\n</table>\r\n\r\n".toCharArray();
    _jsp_string9 = " </font></b></td>\r\n    </tr>\r\n</table>\r\n&nbsp;\r\n<table boQEr=\"0\" width=\"460\" cellspacing=\"0\" cellpadding=\"0\" border=\"2\" bordercolor=\"#3399FF\">\r\n	<tr>\r\n	  <td align=\"right\" bordercolor=\"#FFFFFF\">&nbsp;</td>\r\n	  <td bordercolor=\"#FFFFFF\">&nbsp;</td>\r\n	  <td bordercolor=\"#FFFFFF\">&nbsp;</td>\r\n	  <td align=\"left\" bordercolor=\"#FFFFFF\">&nbsp;</td>\r\n    </tr>\r\n	<tr>\r\n		<td width=\"100\" align=\"right\" bordercolor=\"#FFFFFF\"><font face=\"Arial\" style=\"font-size: 11pt\"><span class=\"style1\">".toCharArray();
    _jsp_string19 = "\r\n          ".toCharArray();
    _jsp_string8 = "\r\n\r\n<form name=\"GroupSummaryReport\" method=\"post\" action=\"GroupSummaryReport.jsp\">\r\n<table boQEr=\"0\" width=\"460\" cellspacing=\"0\" cellpadding=\"0\">\r\n	<tr>\r\n	  <td colspan=\"4\" align=\"left\"><b><font color=\"#000080\" size=\"2\" face=\"Arial\">".toCharArray();
    _jsp_string20 = "\r\n          <option value = ".toCharArray();
    _jsp_string17 = ": </td>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n      ".toCharArray();
    _jsp_string37 = " : </td>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n	  <td bordercolor=\"#FFFFCC\"><select name=\"groupName\">\r\n	  <option value=".toCharArray();
    _jsp_string1 = "\r\n<html>\r\n<head>\r\n<title>Group Summary Report</title>\r\n<style type=\"text/css\">\r\n<!--\r\n.style1 {font-size: 10pt}\r\n-->\r\n</style>\r\n\r\n<meta http-equiv=\"Content-Type\" content=\"text/html\">\r\n\r\n\r\n</head>\r\n\r\n<body>\r\n".toCharArray();
    _jsp_string2 = "\r\n".toCharArray();
    _jsp_string38 = "\r\n      </select></td>\r\n    </tr>\r\n    <tr>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n      <td bordercolor=\"#FFFFCC\">&nbsp;</td>\r\n<td align=\"left\" bordercolor=\"#FFFFCC\">\r\n".toCharArray();
    _jsp_string14 = "</option>\r\n".toCharArray();
    _jsp_string6 = "\");\r\n			return false;\r\n		}\r\n	}//End of checkField	\r\n	\r\n}\r\n//This function is created by James. 16 Jun 2008 to make sure all field are selected.\r\nfunction checkField(form){\r\n	var msg = \"Please select following information : \\n\";\r\n	var valid = true;\r\n	if(form.JobPost.selectedIndex == 0 ){\r\n		msg += \"  - Job Position \\n\";\r\n		valid = false;\r\n	}\r\n	if(form.surveyName.selectedIndex == 0 ){\r\n		msg += \"  - Survey Name \\n\";\r\n		valid = false;\r\n	}\r\n	\r\n	if(valid){\r\n		return valid;\r\n	}else{\r\n		alert(msg);\r\n		return false;\r\n	}\r\n}\r\n\r\n/*------------------------------------------------------------start: LOgin modification 1------------------------------------------*/\r\n/*	choosing organization*/\r\n\r\nfunction proceed(form,field)\r\n{\r\n	form.action=\"GroupSummaryReport.jsp?proceed=\"+field.value;\r\n	form.method=\"post\";\r\n	form.submit();\r\n}	\r\n\r\nfunction populateDept(form,field1, field2, field3)\r\n{\r\n	form.action=\"GroupSummaryReport.jsp?groupName=0&div=\"+field1.value + \"&surveyID=\" + field2.value + \"&jobPost=\" + field3.value;\r\n	form.method=\"post\";\r\n	form.submit();\r\n}	\r\n\r\nfunction populateGrp(form,field1, field2, field3, field4)\r\n{\r\n	form.action=\"GroupSummaryReport.jsp?groupName=0&div=\"+field1.value + \"&dept=\" + field2.value + \"&surveyID=\" + field3.value + \"&jobPost=\" + field4.value;\r\n	form.method=\"post\";\r\n	form.submit();\r\n}	\r\n\r\n\r\n</script>\r\n\r\n<p>\r\n  ".toCharArray();
    _jsp_string7 = " <font size=\"2\">\r\n   \r\n    	    	<script>\r\n	parent.location.href = \"index.jsp\";\r\n</script>\r\n".toCharArray();
    _jsp_string29 = "\r\n      ".toCharArray();
    _jsp_string35 = "\r\n       ".toCharArray();
    _jsp_string45 = "\r\n\r\n".toCharArray();
  }
}
