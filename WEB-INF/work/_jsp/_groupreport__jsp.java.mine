/*
 * JSP generated by Resin Professional 4.0.36 (built Fri, 26 Apr 2013 03:33:09 PDT)
 */

package _jsp;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import CP_Classes.*;
import java.io.*;
import java.text.DateFormat;
import java.util.*;
import java.util.Date;
import java.text.*;
import java.lang.String;
import java.util.Vector;
import CP_Classes.vo.*;
import CP_Classes.Calculation;
import CP_Classes.SurveyResult;

public class _groupreport__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html");
    response.setCharacterEncoding("utf-8");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    
	//by  Yiting 19/09/2009 Fix jsp files to support Thai language"

    out.write(_jsp_string1, 0, _jsp_string1.length);
    
	// by lydia Date 05/09/2008 Fix jsp file to support Thai language

    out.write(_jsp_string2, 0, _jsp_string2.length);
    boolean reportCompletion =false; 
    out.write(_jsp_string3, 0, _jsp_string3.length);
    CP_Classes.Database Database;
    synchronized (pageContext.getSession()) {
      Database = (CP_Classes.Database) pageContext.getSession().getAttribute("Database");
      if (Database == null) {
        Database = new CP_Classes.Database();
        pageContext.getSession().setAttribute("Database", Database);
      }
    }
    out.write(_jsp_string3, 0, _jsp_string3.length);
    CP_Classes.QuestionnaireReport QR;
    synchronized (pageContext.getSession()) {
      QR = (CP_Classes.QuestionnaireReport) pageContext.getSession().getAttribute("QR");
      if (QR == null) {
        QR = new CP_Classes.QuestionnaireReport();
        pageContext.getSession().setAttribute("QR", QR);
      }
    }
    out.write(_jsp_string3, 0, _jsp_string3.length);
    CP_Classes.Login logchk;
    synchronized (pageContext.getSession()) {
      logchk = (CP_Classes.Login) pageContext.getSession().getAttribute("logchk");
      if (logchk == null) {
        logchk = new CP_Classes.Login();
        pageContext.getSession().setAttribute("logchk", logchk);
      }
    }
    out.write(_jsp_string3, 0, _jsp_string3.length);
    CP_Classes.User_Jenty User_Jenty;
    synchronized (pageContext.getSession()) {
      User_Jenty = (CP_Classes.User_Jenty) pageContext.getSession().getAttribute("User_Jenty");
      if (User_Jenty == null) {
        User_Jenty = new CP_Classes.User_Jenty();
        pageContext.getSession().setAttribute("User_Jenty", User_Jenty);
      }
    }
    out.write(_jsp_string3, 0, _jsp_string3.length);
    CP_Classes.GroupReport ExcelGroup;
    synchronized (pageContext.getSession()) {
      ExcelGroup = (CP_Classes.GroupReport) pageContext.getSession().getAttribute("ExcelGroup");
      if (ExcelGroup == null) {
        ExcelGroup = new CP_Classes.GroupReport();
        pageContext.getSession().setAttribute("ExcelGroup", ExcelGroup);
      }
    }
    out.write(_jsp_string4, 0, _jsp_string4.length);
    CP_Classes.Setting Setting;
    synchronized (pageContext.getSession()) {
      Setting = (CP_Classes.Setting) pageContext.getSession().getAttribute("Setting");
      if (Setting == null) {
        Setting = new CP_Classes.Setting();
        pageContext.getSession().setAttribute("Setting", Setting);
      }
    }
    out.write(_jsp_string3, 0, _jsp_string3.length);
    CP_Classes.Translate trans;
    synchronized (pageContext.getSession()) {
      trans = (CP_Classes.Translate) pageContext.getSession().getAttribute("trans");
      if (trans == null) {
        trans = new CP_Classes.Translate();
        pageContext.getSession().setAttribute("trans", trans);
      }
    }
    out.write(_jsp_string4, 0, _jsp_string4.length);
    CP_Classes.Organization Org;
    synchronized (pageContext.getSession()) {
      Org = (CP_Classes.Organization) pageContext.getSession().getAttribute("Org");
      if (Org == null) {
        Org = new CP_Classes.Organization();
        pageContext.getSession().setAttribute("Org", Org);
      }
    }
    out.write(_jsp_string3, 0, _jsp_string3.length);
    CP_Classes.Create_Edit_Survey CE_Survey;
    synchronized (pageContext.getSession()) {
      CE_Survey = (CP_Classes.Create_Edit_Survey) pageContext.getSession().getAttribute("CE_Survey");
      if (CE_Survey == null) {
        CE_Survey = new CP_Classes.Create_Edit_Survey();
        pageContext.getSession().setAttribute("CE_Survey", CE_Survey);
      }
    }
    out.write(_jsp_string5, 0, _jsp_string5.length);
    out.print((session.getAttribute("chosenFiles")));
    out.write(_jsp_string6, 0, _jsp_string6.length);
    out.print((trans.tslt("Please select the options")));
    out.write(_jsp_string7, 0, _jsp_string7.length);
    out.print((trans.tslt("Please select the options")));
    out.write(_jsp_string8, 0, _jsp_string8.length);
    
		//response.setHeader("Pragma", "no-cache");
			//response.setHeader("Cache-Control", "no-cache");
			//response.setDateHeader("expires", 0);

			String username=(String)session.getAttribute("username");

			  if (!logchk.isUsable(username)) 
			  {
	
    out.write(_jsp_string9, 0, _jsp_string9.length);
    
		} else {
			if (request.getParameter("proceed") != null) {
				int PKOrg = new Integer(request.getParameter("proceed"))
						.intValue();
				logchk.setOrg(PKOrg);
				QR.setJobPostID(0);
				QR.setSurveyID(0);
				QR.setDivisionID(0);
				QR.setDepartmentID(0);
				QR.setGroupID(0);

			}

			/*-------------------------------------------------------------------end login modification 1--------------------------------------*/

					int compID = logchk.getCompany();
	
					int OrgID = logchk.getOrg();
					int pkUser = logchk.getPKUser();
					int nameSeq = User_Jenty.NameSequence(OrgID);
					int userType = logchk.getUserType(); // 1= super admin
					

					Vector jobPostList = QR.getJobPost(compID,OrgID);
					Vector surveyList = null;
					Vector groupList = null;
					Vector DivisionList = null;
					Vector DepartmentList = null;
					Vector designationList = null;
					String jobPostError ="";
					String surveyIDError="";
					int weightedAverage = 0;
					String templateForm = " ";
					boolean clusterCompetency =false;
					boolean rankTables =false;
					
					 
					//Changed made by Ha 27/05/08 to set respective value to default when changing upper layer
					if (request.getParameter("jobPost") != null) {
						int id = Integer.parseInt(request.getParameter("jobPost"));

						QR.setJobPostID(id);
						QR.setSurveyID(0);
						QR.setDivisionID(0);
						QR.setDepartmentID(0);
						QR.setGroupID(0);
						QR.setDesignationName("");

						surveyList = QR.getSurvey(id);
						DivisionList = null;
						DepartmentList = null;
						groupList = null;
						designationList = null;
					}
					if (request.getParameter("surveyID") != null) {
						int id = Integer.parseInt(request.getParameter("surveyID"));
						QR.setSurveyID(id);
						QR.setDivisionID(0);
						QR.setDepartmentID(0);
						QR.setGroupID(0);
						QR.setDesignationName("");

						DivisionList = QR.getDivision(id);
						DepartmentList = QR.getDepartment(id,QR.getDivisionID());
						groupList = QR.getGroup(id,QR.getDivisionID(),
								QR.getDepartmentID());
						designationList = QR.getDesignation(id,QR.getDivisionID(),
								QR.getDepartmentID(),QR.getGroupID());
					}
					if (request.getParameter("div") != null) {
						int id = Integer.parseInt(request.getParameter("div"));
						QR.setDivisionID(id);
						QR.setDepartmentID(0);
						QR.setGroupID(0);
						QR.setDesignationName("");

						DivisionList = QR.getDivision(QR.getSurveyID());
						DepartmentList = QR.getDepartment(QR.getSurveyID(),
								QR.getDivisionID());
						groupList = QR.getGroup(QR.getSurveyID(),
								QR.getDivisionID(),QR.getDepartmentID());
						designationList = QR.getDesignation(QR.getSurveyID(),
								QR.getDivisionID(),QR.getDepartmentID(),
								QR.getGroupID());
					}

					if (request.getParameter("dept") != null) {
						int id = Integer.parseInt(request.getParameter("dept"));
						QR.setDepartmentID(id);
						QR.setGroupID(0);
						QR.setDesignationName("");

						DivisionList = QR.getDivision(QR.getSurveyID());
						DepartmentList = QR.getDepartment(QR.getSurveyID(),
								QR.getDivisionID());
						groupList = QR.getGroup(QR.getSurveyID(),
								QR.getDivisionID(),QR.getDepartmentID());
						designationList = QR.getDesignation(QR.getSurveyID(),
								QR.getDivisionID(),QR.getDepartmentID(),
								QR.getGroupID());
					}

					if (request.getParameter("groupName") != null) {
						int id = Integer
								.parseInt(request.getParameter("groupName"));
						QR.setGroupID(id);
						QR.setDesignationName("");

						DivisionList = QR.getDivision(QR.getSurveyID());
						DepartmentList = QR.getDepartment(QR.getSurveyID(),
								QR.getDivisionID());
						groupList = QR.getGroup(QR.getSurveyID(),
								QR.getDivisionID(),QR.getDepartmentID());
						designationList = QR.getDesignation(QR.getSurveyID(),
								QR.getDivisionID(),QR.getDepartmentID(),
								QR.getGroupID());
					}
				

					if (request.getParameter("designation") != null) {
						String id = request.getParameter("designation");
						QR.setDesignationName(id);

						DivisionList = QR.getDivision(QR.getSurveyID());
						DepartmentList = QR.getDepartment(QR.getSurveyID(),
								QR.getDivisionID());
						groupList = QR.getGroup(QR.getSurveyID(),
								QR.getDivisionID(),QR.getDepartmentID());
						designationList = QR.getDesignation(QR.getSurveyID(),
								QR.getDivisionID(),QR.getDepartmentID(),
								QR.getGroupID());
					}
					if (request.getParameter("template") != null) {
						templateForm = request.getParameter("template");
						
					}
					if (request.getParameter("weightedAverage") != null) {
						weightedAverage = 1;
					} else {
						weightedAverage = 0;
					}
					if (request.getParameter("clusterCompetency") != null) {
						System.out.println("TRuE");
						clusterCompetency =true;
					
					}
					if (request.getParameter("rankingTable") != null) {
						
						rankTables =true;
					
					}
					

					//End of change made by Ha
					int jobPost = QR.getJobPostID();
					int surveyID = QR.getSurveyID();
					int divID = QR.getDivisionID();
					int deptID = QR.getDepartmentID();
					int groupID = QR.getGroupID();
					String designationName = QR.getDesignationName();

					if (jobPost != 0)
						surveyList = QR.getSurvey(jobPost);

					if (surveyID != 0) {
						DivisionList = QR.getDivision(surveyID);
						DepartmentList = QR.getDepartment(surveyID,
								QR.getDivisionID());
						groupList = QR.getGroup(surveyID,QR.getDivisionID(),
								QR.getDepartmentID());
						designationList = QR.getDesignation(surveyID,
								QR.getDivisionID(),QR.getDepartmentID(),
								QR.getGroupID());
					}

					if (request.getParameter("open") != null) {
						int type = Integer.parseInt(request.getParameter("open"));
						//Denise 16/12/2009. To add the Exclude Group Ranking method
						int exGR = Integer.parseInt(request.getParameter("exGR"));
						Vector assignment = new Vector();
						SurveyResult s = new SurveyResult();
						jobPost = QR.getJobPostID();
						surveyID = QR.getSurveyID();

						// Added by Ha 26/05/08 adding checking null value-re-edit by Ha 06/06/08 name of parameter
						String sDivID = request.getParameter("div");
						if (sDivID != null) {
							if (!(sDivID.equals("0")))
								divID = Integer.parseInt(sDivID);
							else
								divID = 0;
						}

						String sDeptID = request.getParameter("dept");
						if (sDeptID != null) {
							if (!(sDeptID.equals("0")))
								deptID = Integer.parseInt(sDeptID);
							else
								deptID = 0;
						}

						String sGroupID = request.getParameter("groupName");
						if (sGroupID != null) {
							if (!(sGroupID.equals("0")))
								groupID = Integer.parseInt(sGroupID);
							else
								groupID = 0;
						}

						//Gwen Oh - 20/10/2011: Get selected designation (if any)
						String sDesignation = request.getParameter("designation");
						if (sDesignation != null) {
							if (!(designationName.equals("")))
								designationName = sDesignation;
						}
						Vector<Integer> deptIDList = new Vector<Integer>();
						Vector<Integer> groupIDList = new Vector<Integer>();

						if (divID == 0) { //division is all, deptID might be pointing more than one
							if (deptID == 0) { //department is all, group ID might be pointing more than one
								deptIDList.add(0);
								if (groupID == 0) {
									groupIDList.add(0);
								} else {
									String currentGroupName = "";
									groupList = QR.getGroup(QR.getSurveyID(),divID,
											deptID);
									//get the name of the current selected group
									for (int i = 0; i < groupList.size(); i++) {
										voGroup voGrp = (voGroup) groupList
												.elementAt(i);
										if (voGrp.getPKGroup() == groupID) {
											currentGroupName = voGrp.getGroupName();
										}
									}
									//get the groupIDs of all the groups with the same name as the current seleceted one
									for (int i = 0; i < groupList.size(); i++) {
										voGroup voGrp = (voGroup) groupList
												.elementAt(i);
										if (voGrp.getGroupName().equals(
												currentGroupName)) {
											groupIDList.add(voGrp.getPKGroup());
										}
									}
								}//end if groupID==0
							} else { //particular department, might point more than one department actually
								String currentDepartmentName = "";
								DepartmentList = QR.getDepartment(QR.getSurveyID(),
										divID);
								//get the current department name
								for (int i = 0; i < DepartmentList.size(); i++) {
									voDepartment voDept = (voDepartment) DepartmentList
											.elementAt(i);
									if (voDept.getPKDepartment() == deptID)
										currentDepartmentName = voDept
												.getDepartmentName();
								}
								//get all departmentIDs with the same name as the current department name
								for (int i = 0; i < DepartmentList.size(); i++) {
									voDepartment voDept = (voDepartment) DepartmentList
											.elementAt(i);
									if (voDept.getDepartmentName().equals(
											currentDepartmentName))
										deptIDList.add(voDept.getPKDepartment());
								}
								if (groupID == 0) {
									//get the groupIDs from all the groups
									for (int i = 0; i < deptIDList.size(); i++) {
										for (Object o : QR.getGroup(
												QR.getSurveyID(),divID,
												deptIDList.elementAt(i)))
											groupList.add(o);
									}
									for (int i = 0; i < groupList.size(); i++) {
										voGroup voGrp = (voGroup) groupList
												.elementAt(i);
										groupIDList.add(voGrp.getPKGroup());
									}
								} else {
									//get the groupIDs from all the groups
									for (int i = 0; i < deptIDList.size(); i++) {
										for (Object o : QR.getGroup(
												QR.getSurveyID(),divID,
												deptIDList.elementAt(i)))
											groupList.add(o);
									}
									String currentGroupName = "";
									//get the name of the current selected group
									for (int i = 0; i < groupList.size(); i++) {
										voGroup voGrp = (voGroup) groupList
												.elementAt(i);
										if (voGrp.getPKGroup() == groupID) {
											currentGroupName = voGrp.getGroupName();
										}
									}
									//get the groupIDs of all the groups with the same name as the current seleceted one
									for (int i = 0; i < groupList.size(); i++) {
										voGroup voGrp = (voGroup) groupList
												.elementAt(i);
										if (voGrp.getGroupName().equals(
												currentGroupName)) {
											groupIDList.add(voGrp.getPKGroup());
										}
									}
								}//end if groupID==0
							}//end if deptID==0
						} else { //divison is particular ID
							if (deptID == 0) {
								deptIDList.add(0);
								if (groupID == 0) {
									groupIDList.add(0);
								} else {
									String currentGroupName = "";
									groupList = QR.getGroup(QR.getSurveyID(),divID,
											deptID);
									//get the name of the current selected group
									for (int i = 0; i < groupList.size(); i++) {
										voGroup voGrp = (voGroup) groupList
												.elementAt(i);
										if (voGrp.getPKGroup() == groupID) {
											currentGroupName = voGrp.getGroupName();
										}
									}
									//get the groupIDs of all the groups with the same name as the current seleceted one
									for (int i = 0; i < groupList.size(); i++) {
										voGroup voGrp = (voGroup) groupList
												.elementAt(i);
										if (voGrp.getGroupName().equals(
												currentGroupName)) {
											groupIDList.add(voGrp.getPKGroup());
										}
									}
								}
							} else {
								deptIDList.add(deptID);
								groupIDList.add(groupID);
							}
						}

						Vector Target = new Vector();
						Date timeStamp = new java.util.Date();
						SimpleDateFormat dFormat = new SimpleDateFormat(
								"dd-MM-yy[HH.mm]");
						String temp = dFormat.format(timeStamp);
						String orgName = logchk.getOrgName(logchk.getOrg());
						String file_name = "GroupReport_" + orgName;
						if (divID != 0)
							file_name += "_" + QR.getDivisionName(divID);
						if (deptIDList.size() == 1 && deptIDList.get(0) != 0)
							file_name += "_"
									+ QR.getDepartmentName(deptIDList.get(0));
						if (groupIDList.size() == 1 && groupIDList.get(0) != 0)
							file_name += "_" + QR.getGroupName(groupIDList.get(0));
						file_name += "(" + temp + ").xls";
						String temp1 = "";
						System.out.println(surveyID + "--" + groupIDList + "--"
								+ deptIDList + "--" + divID + "--"
								+ designationName + "end" + file_name);

						//Changed by Ha 17/06/08 to automatically calculate if not all the raters have been calculated
						// when generating the report
						Target = s.TargetID(surveyID,divID,deptIDList,groupIDList,
								designationName);
						

						//GWEN: CONTINUE FROM HERE... DON'T HAVE TO CHANGE CALCULATESTATUS METHOD I THINK.. SINCE TARGETID IS ALREADY PASSED IN
						for (int j = 0; j < Target.size(); j++) {
							voUser vo = (voUser) Target.get(j);
							if (!s.checkCalculationStatusComplete(
									vo.getTargetLoginID(),surveyID,divID,deptID,
									groupID)) {
								if (!s.isAllRaterRated(surveyID,groupID,
										vo.getTargetLoginID()))
									s.CalculateStatus(vo.getTargetLoginID(),
											surveyID,divID,deptID,groupID,1);
								else
									s.CalculateStatus(vo.getTargetLoginID(),
											surveyID,divID,deptID,groupID,0);
							}
						}
						//Denise 16/12/2009 set the Exclude Group Ranking value 
						ExcelGroup.setExGroupRanking(exGR);

						//Gwen Oh - 17/10/2011: Set selected users to null if it's a group report (All the users in survey are required)
						ExcelGroup.setSelectedUsers(null);
					
						System.out.println("Template: " + templateForm);
						Vector errors = ExcelGroup.Report(surveyID,groupIDList,deptIDList,divID,pkUser,file_name,type,weightedAverage,clusterCompetency,templateForm,rankTables);
						System.out.println("error size: " + errors.size());
						//session.setAttribute("Errors", errors);
						System.out.println("Redirect Start");
						if(errors.size()==0){
							RequestDispatcher dispatcher = request.getRequestDispatcher("GenerationComplete.jsp?Success="+ file_name);
							
							if(session.getAttribute("chosenFiles")!=null){
								Vector fileNames = (Vector)session.getAttribute("chosenFiles");
								fileNames.add(file_name);
								session.setAttribute("chosenFiles", fileNames);
							} else {
								Vector fileNames=new Vector();
								fileNames.add(file_name);
								session.setAttribute("chosenFiles", fileNames);
							}
							
							//request.setAttribute("open", null);
							//response.sendRedirect("GenerationComplete.jsp?Success="+ file_name); 
							
							 dispatcher.forward( request, response );
						} else {
							RequestDispatcher dispatcher = request.getRequestDispatcher("GroupReport.jsp");
							session.setAttribute("errors", errors);
							dispatcher.forward( request, response );
						}
						 System.out.println("Redirect fail");
						
						 
						
					
					}
					
			
    out.write(_jsp_string10, 0, _jsp_string10.length);
    out.print((trans.tslt("Group Report")));
    out.write(_jsp_string11, 0, _jsp_string11.length);
    if(session.getAttribute("errors")!=null){
					Vector reportError = (Vector)session.getAttribute("errors");
				
					for(int i=0;i<reportError.size();i++){ 
    out.write(_jsp_string12, 0, _jsp_string12.length);
    out.print(((String)reportError.elementAt(i) ));
    out.write(_jsp_string13, 0, _jsp_string13.length);
    }
				}
    out.write(_jsp_string14, 0, _jsp_string14.length);
    out.print((trans.tslt("Organisation")));
    out.write(_jsp_string15, 0, _jsp_string15.length);
    
					// Added to check whether organisation is also a consulting company
						// if yes, will display a dropdown list of organisation managed by this company
						// else, it will display the current organisation only
						// Mark Oei 09 Mar 2010
						String[] UserDetail = new String[14];
						UserDetail = CE_Survey.getUserDetail(logchk.getPKUser());
						boolean isConsulting = true;
						isConsulting = Org.isConsulting(UserDetail[10]); // check whether organisation is a consulting company 
						if (isConsulting) {
				
    out.write(_jsp_string16, 0, _jsp_string16.length);
    out.print((trans.tslt("Please select one")));
    out.write(_jsp_string17, 0, _jsp_string17.length);
    
							Vector vOrg = logchk.getOrgList(logchk.getCompany());

									for (int i = 0; i < vOrg.size(); i++) {
										votblOrganization vo = (votblOrganization) vOrg
												.elementAt(i);
										int PKOrg = vo.getPKOrganization();
										String OrgName = vo.getOrganizationName();

										if (logchk.getOrg() == PKOrg) {
						
    out.write(_jsp_string18, 0, _jsp_string18.length);
    out.print((PKOrg));
    out.write(_jsp_string19, 0, _jsp_string19.length);
    out.print((OrgName));
    out.write(_jsp_string17, 0, _jsp_string17.length);
    
							} else {
						
    out.write(_jsp_string18, 0, _jsp_string18.length);
    out.print((PKOrg));
    out.write('>');
    out.print((OrgName));
    out.write(_jsp_string17, 0, _jsp_string17.length);
    
							}
									}
								} else {
						
    out.write(_jsp_string20, 0, _jsp_string20.length);
    out.print((logchk.getSelfOrg()));
    out.write('>');
    out.print((UserDetail[10]));
    out.write(_jsp_string21, 0, _jsp_string21.length);
    
							} // End of isConsulting
						
    out.write(_jsp_string22, 0, _jsp_string22.length);
    out.print((trans.tslt("Job Position")));
    out.write(_jsp_string23, 0, _jsp_string23.length);
    
					int t = 0;
				
    out.write(_jsp_string24, 0, _jsp_string24.length);
    out.print((t));
    out.write('>');
    out.print((trans.tslt("Please select one")));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    
								/*********************
									 * Edit By James 14-Nov 2007
									 ***********************/

									// while(jobPostList.next()) {
									for (int i = 0; i < jobPostList.size(); i++) {
										votblJobPosition voJob = (votblJobPosition) jobPostList
												.elementAt(i);
										int ID = voJob.getJobPositionID();
										String name = voJob.getJobPosition();

										jobPost = QR.getJobPostID();

										if (jobPost != 0 && ID == jobPost) {
							
    out.write(_jsp_string26, 0, _jsp_string26.length);
    out.print((ID));
    out.write(_jsp_string19, 0, _jsp_string19.length);
    out.print((name));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    
								} else {
							
    out.write(_jsp_string26, 0, _jsp_string26.length);
    out.print((ID));
    out.write('>');
    out.print((name));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    
								}
									}
							
    out.write(_jsp_string27, 0, _jsp_string27.length);
    out.print((jobPostError ));
    out.write(_jsp_string28, 0, _jsp_string28.length);
    out.print((trans.tslt("Survey")));
    out.write(_jsp_string29, 0, _jsp_string29.length);
    out.print((t));
    out.write('>');
    out.print((trans.tslt("Please select one")));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    
								if (surveyList != null) {
										for (int j = 0; j < surveyList.size(); j++) {
											votblSurvey voSurvey = (votblSurvey) surveyList
													.elementAt(j);

											int ID = voSurvey.getSurveyID();
											String name = voSurvey.getSurveyName();
											surveyID = QR.getSurveyID();

											if (surveyID != 0 && ID == surveyID) {
							
    out.write(_jsp_string26, 0, _jsp_string26.length);
    out.print((ID));
    out.write(_jsp_string19, 0, _jsp_string19.length);
    out.print((name));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    
								} else {
							
    out.write(_jsp_string26, 0, _jsp_string26.length);
    out.print((ID));
    out.write('>');
    out.print((name));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    
								}
										}
									}
							
    out.write(_jsp_string27, 0, _jsp_string27.length);
    out.print((surveyIDError ));
    out.write(_jsp_string28, 0, _jsp_string28.length);
    out.print((trans.tslt("Division")));
    out.write(_jsp_string30, 0, _jsp_string30.length);
    out.print((t));
    out.write('>');
    out.print((trans.tslt("All")));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    
								if (DivisionList != null) {
										for (int k = 0; k < DivisionList.size(); k++) {
											voDivision voD = (voDivision) DivisionList.elementAt(k);
											int ID = voD.getPKDivision();
											String name = voD.getDivisionName();
											divID = QR.getDivisionID();

											if (divID != 0 && ID == divID) {
							
    out.write(_jsp_string26, 0, _jsp_string26.length);
    out.print((ID));
    out.write(_jsp_string19, 0, _jsp_string19.length);
    out.print((name));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    
								} else {
							
    out.write(_jsp_string26, 0, _jsp_string26.length);
    out.print((ID));
    out.write('>');
    out.print((name));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    
								}
										}
									}
							
    out.write(_jsp_string31, 0, _jsp_string31.length);
    out.print((trans.tslt("Department")));
    out.write(_jsp_string32, 0, _jsp_string32.length);
    out.print((t));
    out.write('>');
    out.print((trans.tslt("All")));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    
								DepartmentList = QR.getDepartment(QR.getSurveyID(),
											QR.getDivisionID());
									//delete duplicate entries with same department name but different IDs
									Vector<voDepartment> uniqueDeptList = new Vector<voDepartment>();
									for (int i = 0; i < DepartmentList.size(); i++) {
										voDepartment voDept = (voDepartment) DepartmentList
												.elementAt(i);
										Boolean duplicated = false;
										for (voDepartment vo : uniqueDeptList) {
											if (voDept.getDepartmentName().equals(
													vo.getDepartmentName())) {
												duplicated = true;
											}
										}
										if (!duplicated) {
											uniqueDeptList.add(voDept);
										}
									}
									if (uniqueDeptList != null) {
										for (int l = 0; l < uniqueDeptList.size(); l++) {
											voDepartment voDep = (voDepartment) uniqueDeptList
													.elementAt(l);
											int ID = voDep.getPKDepartment();
											String name = voDep.getDepartmentName();
											deptID = QR.getDepartmentID();
											if (deptID != 0 && ID == deptID) {
							
    out.write(_jsp_string26, 0, _jsp_string26.length);
    out.print((ID));
    out.write(_jsp_string19, 0, _jsp_string19.length);
    out.print((name));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    
								} else {
							
    out.write(_jsp_string26, 0, _jsp_string26.length);
    out.print((ID));
    out.write('>');
    out.print((name));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    
								}
										}
									}
							
    out.write(_jsp_string33, 0, _jsp_string33.length);
    out.print((trans.tslt("Group")));
    out.write(_jsp_string34, 0, _jsp_string34.length);
    out.print((t));
    out.write('>');
    out.print((trans.tslt("All")));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    
								surveyID = QR.getSurveyID();
									divID = QR.getDivisionID();
									deptID = QR.getDepartmentID();
									groupID = QR.getGroupID();

									if (deptID == 0) {// deptID="All" is selected
										groupList = QR.getGroup(surveyID,divID,deptID);
									} else {// particular deptID
										Vector sameNameDepartment = new Vector();
										String currentDepartmentName = "";
										//get the current department name
										for (int i = 0; i < DepartmentList.size(); i++) {
											voDepartment voDept = (voDepartment) DepartmentList
													.elementAt(i);
											if (voDept.getPKDepartment() == QR.getDepartmentID())
												currentDepartmentName = voDept.getDepartmentName();
										}
										//get all departmentIDs with the same name as the current department name
										for (int i = 0; i < DepartmentList.size(); i++) {
											voDepartment voDept = (voDepartment) DepartmentList
													.elementAt(i);
											if (voDept.getDepartmentName().equals(
													currentDepartmentName))
												sameNameDepartment.add(voDept);
										}
										//get the groups from different departments
										groupList = new Vector();
										for (int i = 0; i < sameNameDepartment.size(); i++) {
											voDepartment voDept = (voDepartment) sameNameDepartment
													.elementAt(i);
											for (Object o : QR.getGroup(surveyID,divID,
													voDept.getPKDepartment()))
												groupList.add(o);
										}
									}
									//delete duplicate entries with same group name but different IDs
									Vector<voGroup> uniqueGroupList = new Vector<voGroup>();
									for (int i = 0; i < groupList.size(); i++) {
										voGroup voGrp = (voGroup) groupList.elementAt(i);
										Boolean duplicated = false;
										for (voGroup vo : uniqueGroupList) {
											if (voGrp.getGroupName().equals(vo.getGroupName())) {
												duplicated = true;
											}
										}
										if (!duplicated) {
											uniqueGroupList.add(voGrp);
										}
									}
									if (uniqueGroupList != null) {
										for (int l = 0; l < uniqueGroupList.size(); l++) {
											voGroup voGrp = (voGroup) uniqueGroupList.elementAt(l);
											int ID = voGrp.getPKGroup();
											String name = voGrp.getGroupName();
											groupID = QR.getGroupID();
											if (groupID != 0 && ID == groupID) {
							
    out.write(_jsp_string26, 0, _jsp_string26.length);
    out.print((ID));
    out.write(_jsp_string19, 0, _jsp_string19.length);
    out.print((name));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    
								} else {
							
    out.write(_jsp_string26, 0, _jsp_string26.length);
    out.print((ID));
    out.write('>');
    out.print((name));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    
								}
										}
									}
							
    out.write(_jsp_string31, 0, _jsp_string31.length);
    out.print((trans.tslt("Designation")));
    out.write(_jsp_string35, 0, _jsp_string35.length);
    out.print((trans.tslt("All")));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    
								if (designationList != null) {

										for (int m = 0; m < designationList.size(); m++) {

											String name = (String) designationList.elementAt(m);
											String selectedName = QR.getDesignationName();
											if (!name.startsWith("")
													&& name.startsWith(selectedName)) {
							
    out.write(_jsp_string36, 0, _jsp_string36.length);
    out.print((name));
    out.write(_jsp_string37, 0, _jsp_string37.length);
    out.print((name));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    
								} else {
							
    out.write(_jsp_string36, 0, _jsp_string36.length);
    out.print((name));
    out.write(_jsp_string38, 0, _jsp_string38.length);
    out.print((name));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    
								}
										}
									}
							
    out.write(_jsp_string39, 0, _jsp_string39.length);
    
	  		//Added display of templates of different languages, Chun Yeong 1 Aug 2011
	  		File dir = new File(Setting.getOOReportTemplatePath());
			String[] templates = dir.list();
			String defTemplate = "Group Report Template_General.xls"; //default template in English
			String hidTemplate = "Group Report Template.xls"; //template not used anymore in Individual Report but used in MOE Importance
			
			templates = dir.list(new FilenameFilter() {
			public boolean accept(File dir, String name) {
				return (name.startsWith("Group Report Template") && !name.toLowerCase().contains("no_normative") && !name.toLowerCase().contains("nocpr") && !name.toLowerCase().contains("sps") && !name.toLowerCase().contains("old") && !name.toLowerCase().contains("allianz") && !name.toLowerCase().contains("combined"));
			}});
			
			String sel = "";
			
			for(int i=0; i<templates.length; i++) {
				if(templates[i].equalsIgnoreCase(defTemplate) ) { 
					sel = "selected";
				} //End if the default template is the same as the current template, Chun Yeong 1 Aug 2011
				if(templates[i].equalsIgnoreCase(hidTemplate) ) { 
					continue;
				} //End if the default template is the same as the current template, Chun Yeong 1 Aug 2011
	  
    out.write(_jsp_string40, 0, _jsp_string40.length);
    out.print((templates[i]));
    out.write(_jsp_string41, 0, _jsp_string41.length);
    out.print((sel));
    out.write('>');
    out.print((templates[i]));
    out.write(_jsp_string42, 0, _jsp_string42.length);
    
				sel = "";
			} // End for loop, templates array
			//End of display of templates of different languages, Chun Yeong 1 Aug 2011
	  
    out.write(_jsp_string43, 0, _jsp_string43.length);
    
				if (compID != 2 || userType == 1) {
			
    out.write(_jsp_string44, 0, _jsp_string44.length);
    out.print((trans.tslt("Preview Subgroup")));
    out.write(_jsp_string45, 0, _jsp_string45.length);
    out.print((trans.tslt("Generate")));
    out.write(_jsp_string46, 0, _jsp_string46.length);
    
					} else {
				
    out.write(_jsp_string47, 0, _jsp_string47.length);
    out.print((trans.tslt("Preview Subgroup")));
    out.write(_jsp_string48, 0, _jsp_string48.length);
    out.print((trans.tslt("Preview")));
    out.write(_jsp_string49, 0, _jsp_string49.length);
    
						}
					
    out.write(_jsp_string50, 0, _jsp_string50.length);
    
						}
					
    out.write(_jsp_string51, 0, _jsp_string51.length);
    // by lydia Date 05/09/2008 Fix jsp file to support Thai language 
    out.write(_jsp_string52, 0, _jsp_string52.length);
    
	Calendar c = Calendar.getInstance();
	int year = c.get(Calendar.YEAR);

    out.write(_jsp_string53, 0, _jsp_string53.length);
     // Denise 05/01/2010 update new email address 
    out.write(_jsp_string54, 0, _jsp_string54.length);
    out.print((year));
    out.write(_jsp_string55, 0, _jsp_string55.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != -7791540776389363938L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("GroupReport.jsp"), 8344944521935813922L, false);
    _caucho_depends.add(depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("Footer.jsp"), -9159279428429745474L, false);
    _caucho_depends.add(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string3;
  private final static char []_jsp_string12;
  private final static char []_jsp_string45;
  private final static char []_jsp_string20;
  private final static char []_jsp_string26;
  private final static char []_jsp_string41;
  private final static char []_jsp_string37;
  private final static char []_jsp_string24;
  private final static char []_jsp_string29;
  private final static char []_jsp_string25;
  private final static char []_jsp_string11;
  private final static char []_jsp_string2;
  private final static char []_jsp_string14;
  private final static char []_jsp_string36;
  private final static char []_jsp_string40;
  private final static char []_jsp_string22;
  private final static char []_jsp_string18;
  private final static char []_jsp_string23;
  private final static char []_jsp_string17;
  private final static char []_jsp_string0;
  private final static char []_jsp_string19;
  private final static char []_jsp_string49;
  private final static char []_jsp_string46;
  private final static char []_jsp_string21;
  private final static char []_jsp_string38;
  private final static char []_jsp_string54;
  private final static char []_jsp_string6;
  private final static char []_jsp_string47;
  private final static char []_jsp_string27;
  private final static char []_jsp_string33;
  private final static char []_jsp_string15;
  private final static char []_jsp_string34;
  private final static char []_jsp_string42;
  private final static char []_jsp_string1;
  private final static char []_jsp_string31;
  private final static char []_jsp_string13;
  private final static char []_jsp_string4;
  private final static char []_jsp_string50;
  private final static char []_jsp_string8;
  private final static char []_jsp_string51;
  private final static char []_jsp_string32;
  private final static char []_jsp_string28;
  private final static char []_jsp_string5;
  private final static char []_jsp_string53;
  private final static char []_jsp_string9;
  private final static char []_jsp_string10;
  private final static char []_jsp_string44;
  private final static char []_jsp_string30;
  private final static char []_jsp_string7;
  private final static char []_jsp_string43;
  private final static char []_jsp_string39;
  private final static char []_jsp_string48;
  private final static char []_jsp_string35;
  private final static char []_jsp_string55;
  private final static char []_jsp_string52;
  private final static char []_jsp_string16;
  static {
    _jsp_string3 = "\r\n	".toCharArray();
    _jsp_string12 = "\r\n				<span class=\"label label-important\">Error: ".toCharArray();
    _jsp_string45 = "\" onclick = \"return openSubgroup(this.form)\">\r\n-->\r\n			<div class=\"row-fluid\" style=\"padding-top: 50px\">\r\n				<div class=\"offset1 span2\">\r\n					<button type=\"button\" class=\"btn btn-primary generateBtn\" name=\"btnOpen\"\r\n						value=\"".toCharArray();
    _jsp_string20 = "\r\n						<select size=\"1\" name=\"selOrg\"\r\n						onchange=\"proceed(this.form,this.form.selOrg)\">\r\n							<option value=".toCharArray();
    _jsp_string26 = "\r\n						\r\n						<option value=".toCharArray();
    _jsp_string41 = "\" ".toCharArray();
    _jsp_string37 = "' selected>".toCharArray();
    _jsp_string24 = "\r\n				<div class=\"span5\">\r\n					<select name=\"JobPost\"\r\n						onchange=\"getID(this.form, this.form.JobPost.options[JobPost.selectedIndex].value, 1)\">\r\n						<option value=".toCharArray();
    _jsp_string29 = "\r\n					:\r\n				</div>\r\n				<div class=\"span5\">\r\n					<select name=\"surveyName\"\r\n						onchange=\"getID(this.form, this.form.surveyName.options[surveyName.selectedIndex].value, 2)\">\r\n						<option value=".toCharArray();
    _jsp_string25 = "\r\n							".toCharArray();
    _jsp_string11 = "</h2>\r\n				</div>\r\n				\r\n			</div>\r\n			<div class=\"row-fluid\">\r\n				<div class=\"span5\">\r\n				".toCharArray();
    _jsp_string2 = "\r\n\r\n<!-- CSS -->\r\n\r\n<link type=\"text/css\" rel=\"stylesheet\" href=\"lib/css/bootstrap.css\">\r\n<link type=\"text/css\" rel=\"stylesheet\"\r\n	href=\"lib/css/bootstrap-responsive.css\">\r\n<link type=\"text/css\" rel=\"stylesheet\" href=\"lib/css/bootstrap.min.css\">\r\n<link type=\"text/css\" rel=\"stylesheet\"\r\n	href=\"lib/css/bootstrap-responsive.min.css\">\r\n\r\n\r\n<!-- jQuery -->\r\n<script type=\"text/javascript\" src=\"lib/js/bootstrap.min.js\"></script>\r\n<script type=\"text/javascript\" src=\"lib/js/bootstrap.js\"></script>\r\n<script type=\"text/javascript\" src=\"lib/js/jquery-1.9.1.js\"></script>\r\n\r\n\r\n<script src=\"lib/js/bootstrap.min.js\" type=\"text/javascript\"></script>\r\n\r\n\r\n\r\n\r\n	".toCharArray();
    _jsp_string14 = "\r\n				</div></div>\r\n			<div class=\"row-fluid\">\r\n				<div class=\"span2\">\r\n					".toCharArray();
    _jsp_string36 = "\r\n						\r\n						<option value='".toCharArray();
    _jsp_string40 = "			\r\n    			<option value = \"".toCharArray();
    _jsp_string22 = "\r\n					</select>\r\n				</div>\r\n			</div>\r\n\r\n			<div class=\"row-fluid\">\r\n				<div class=\"span2\">\r\n					".toCharArray();
    _jsp_string18 = "\r\n						<option value=".toCharArray();
    _jsp_string23 = ":\r\n				</div>\r\n\r\n				".toCharArray();
    _jsp_string17 = "</option>\r\n						".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n".toCharArray();
    _jsp_string19 = " selected>".toCharArray();
    _jsp_string49 = "\"\r\n							onclick=\"return confirmOpen(this.form)\" disabled>\r\n					</div>\r\n					".toCharArray();
    _jsp_string46 = "\"\r\n						onclick=\"return confirmOpen(this.form)\" data-loading-text=\"Generating...\">Generate</button></div>\r\n						<div class=\"span2\">\r\n					<a type=\"button\" id=\"dlpage\" class =\"btn\" href=\"GenerationComplete.jsp\" >Download Page</a></div>\r\n				</div>\r\n				".toCharArray();
    _jsp_string21 = "</option>\r\n					</select>\r\n						".toCharArray();
    _jsp_string38 = "'>".toCharArray();
    _jsp_string54 = "\r\n		<td align=\"center\" height=\"5\" valign=\"top\"><font size=\"1\" color=\"navy\" face=\"Arial\">&nbsp;&nbsp;<a style=\"TEXT-DECORATION: none; color:navy;\" href=\"Login.jsp\">Home</a>&nbsp;| <a color=\"navy\" face=\"Arial\">&nbsp;<a style=\"TEXT-DECORATION: none; color:navy;\" href=\"mailto:3SixtyAdmin@pcc.com.sg?subject=Regarding:\">Contact \r\n		Us</a><a color=\"navy\" face=\"Arial\" href=\"termofuse.jsp\" target=\"_blank\"><span style=\"color: #000080; text-decoration: none\"> | Terms of Use </span></a>| <span style=\"color: #000080; text-decoration: none\"><a style=\"TEXT-DECORATION: none; color:navy;\" href=\"http://www.pcc.com.sg/\" target=\"_blank\">PCC Website</a></span></font></td></tr><tr>\r\n		<font size=\"2\" face=\"Arial\" style=\"font-size: 14pt\" color=\"#000080\">\r\n   \r\n		<td align=\"center\" height=\"5\" valign=\"top\">\r\n		<font size=\"1\" color=\"navy\" face=\"Arial\">&nbsp;Copyright &copy; ".toCharArray();
    _jsp_string6 = "!=null){\r\n	$('#dlpage').show();\r\n}else{\r\n	$('#dlpage').hide();\r\n}\r\n});\r\n\r\nfunction loading(){\r\n	$('.generateBtn').button('loading');\r\n}\r\nfunction getID(form, ID, type)\r\n{\r\n	var typeSelected = \"\";\r\n	\r\n	if(ID != 0) {\r\n		switch(type) {\r\n			case 1: typeSelected = \"jobPost\";\r\n					  break;\r\n			case 2: typeSelected = \"surveyID\";\r\n					  break;\r\n		}\r\n		//\\\\ changed by Ha 27/05/08 to refresh the group when changing survey name\r\n		var query = \"GroupReport.jsp?groupName=0&\" + typeSelected + \"=\" + ID;\r\n		form.action = query;\r\n		form.method = \"post\";\r\n		form.submit();\r\n	} else {\r\n		alert(\"".toCharArray();
    _jsp_string47 = "\r\n				<!--<input type=\"button\" name=\"btnSubgroup\" value=\"".toCharArray();
    _jsp_string27 = "\r\n						\r\n					</select><span class=\"label label-important\">".toCharArray();
    _jsp_string33 = "\r\n\r\n						</option>\r\n					</select>\r\n				</div>\r\n			</div>\r\n			<div class=\"row-fluid\">\r\n				<div class=\"span2\">\r\n					".toCharArray();
    _jsp_string15 = "	:\r\n				</div>\r\n				\r\n				".toCharArray();
    _jsp_string34 = "\r\n					:\r\n				</div>\r\n				<div class=\"span5\">\r\n					<select name=\"groupName\"\r\n						onChange=\"populateDesignation(this.form, this.form.division, this.form.department, this.form.surveyName, this.form.JobPost, this.form.groupName)\">\r\n						<option value=".toCharArray();
    _jsp_string42 = "</option>\r\n	  ".toCharArray();
    _jsp_string1 = "\r\n<html>\r\n<head>\r\n<title>Group Report</title>\r\n<style type=\"text/css\">\r\n<!--\r\n.style1 {\r\n	font-size: 10pt\r\n}\r\n-->\r\n</style>\r\n\r\n<meta http-equiv=\"Content-Type\" content=\"text/html\">\r\n\r\n".toCharArray();
    _jsp_string31 = "\r\n						\r\n					</select>\r\n				</div>\r\n			</div>\r\n			<div class=\"row-fluid\">\r\n				<div class=\"span2\">\r\n					".toCharArray();
    _jsp_string13 = "</span>\r\n				".toCharArray();
    _jsp_string4 = "\r\n\r\n	".toCharArray();
    _jsp_string50 = "\r\n\r\n\r\n\r\n					".toCharArray();
    _jsp_string8 = "\");\r\n					return false;\r\n				}\r\n			}//End of checkField	\r\n\r\n		}\r\n\r\n		//Gwen Oh - 10/10/11: Open SubgroupReport.jsp for user to select which targets to be in the report\r\n		function openSubgroup(form) {\r\n\r\n			//type 1=simplified;2=standard\r\n			var type = 2;\r\n			if (form.chkReportType.checked)\r\n				type = 1;\r\n\r\n			//exGR = 0. Exclude Group Ranking box is not checked\r\n			var exGR = 0;\r\n			if (form.chkGR.checked)\r\n				exGR = 1;\r\n\r\n			if (checkField(form)) {\r\n				var selectedSurvey = form.surveyName.options[form.surveyName.selectedIndex];\r\n				var str = \"SubgroupReport.jsp?orgName=\"\r\n						+ form.selOrg.options[form.selOrg.selectedIndex].text\r\n						+ \"&surveyName=\" + selectedSurvey.text + \"&surveyID=\"\r\n						+ selectedSurvey.value + \"&divID=\"\r\n						+ form.division.value + \"&deptID=\"\r\n						+ form.department.value + \"&groupID=\"\r\n						+ form.groupName.value + \"&type=\" + type + \"&exGR=\"\r\n						+ exGR;\r\n				var myWindow = window.open(str, 'windowRef',\r\n						'scrollbars=no, width=750, height=650');\r\n				myWindow.moveTo(x, y);\r\n			}\r\n		}\r\n\r\n		//This function is created by James. 16 Jun 2008 to make sure all field are selected.\r\n		function checkField(form) {\r\n			var msg = \"Please select following information : \\n\";\r\n			var valid = true;\r\n			if (form.JobPost.selectedIndex == 0) {\r\n				msg += \"  - Job Position \\n\";\r\n				valid = false;\r\n			}\r\n			if (form.surveyName.selectedIndex == 0) {\r\n				msg += \"  - Survey Name \\n\";\r\n				valid = false;\r\n			}\r\n\r\n			if (valid) {\r\n				return valid;\r\n			} else {\r\n				alert(msg);\r\n				return false;\r\n			}\r\n		}\r\n\r\n		/*------------------------------------------------------------start: LOgin modification 1------------------------------------------*/\r\n		/*	choosing organization*/\r\n\r\n		function proceed(form, field) {\r\n			form.action = \"GroupReport.jsp?proceed=\" + field.value;\r\n			form.method = \"post\";\r\n			form.submit();\r\n		}\r\n		//Changed by Albert 24/05/2012 to set the bottom layer value to default when changing the upper layer value	\r\n		//Changed by Ha 27/05/08 to set group to default when changing upper layer value\r\n		function populateDept(form, field1, field2, field3) {\r\n			form.action = \"GroupReport.jsp?groupName=0&div=\" + field1.value\r\n					+ \"&dept=0&surveyID=\" + field2.value + \"&jobPost=\"\r\n					+ field3.value;\r\n			form.method = \"post\";\r\n			form.submit();\r\n		}\r\n\r\n		function populateGrp(form, field1, field2, field3, field4) {\r\n			form.action = \"GroupReport.jsp?groupName=0&div=\" + field1.value\r\n					+ \"&dept=\" + field2.value + \"&surveyID=\" + field3.value\r\n					+ \"&jobPost=\" + field4.value;\r\n			form.method = \"post\";\r\n			form.submit();\r\n		}\r\n\r\n		function populateDesignation(form, field1, field2, field3, field4,\r\n				field5) {\r\n			form.action = \"GroupReport.jsp?groupName=\" + field5.value + \"&div=\"\r\n					+ field1.value + \"&dept=\" + field2.value + \"&surveyID=\"\r\n					+ field3.value + \"&jobPost=\" + field4.value;\r\n			form.method = \"post\";\r\n			form.submit();\r\n		}\r\n		//Ended changes made by Ha\r\n	</script>\r\n\r\n\r\n	".toCharArray();
    _jsp_string51 = "\r\n				\r\n		</form>\r\n		\r\n\r\n		<!-- Modal -->\r\n		<div id=\"myModal\" class=\"modal hide fade\" tabindex=\"-1\" role=\"dialog\"\r\n			aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\r\n			<div class=\"modal-header\">\r\n				<button type=\"button\" class=\"close\" data-dismiss=\"modal\"\r\n					aria-hidden=\"true\">\u00d7</button>\r\n				<h3 id=\"myModalLabel\">Report Generation</h3>\r\n			</div>\r\n			<div class=\"modal-body\">\r\n				<p>This process may take awhile. Please do not close the main window.</p>\r\n			</div>\r\n\r\n    \r\n  </div>\r\n		</div>\r\n\r\n	</div>\r\n	<script src=\"lib/js/bootstrap-tooltip.js\"></script>\r\n	\r\n\r\n".toCharArray();
    _jsp_string32 = "\r\n					:\r\n				</div>\r\n				<div class=\"span5\">\r\n					<select name=\"department\"\r\n						onChange=\"populateGrp(this.form, this.form.division, this.form.department, this.form.surveyName, this.form.JobPost)\">\r\n						<option value=".toCharArray();
    _jsp_string28 = "</span>\r\n				</div>\r\n			</div>\r\n			<div class=\"row-fluid\">\r\n				<div class=\"span2\">\r\n					".toCharArray();
    _jsp_string5 = "\r\n\r\n	<script type=\"text/javascript\">\r\n	$('.info').tooltip();\r\n	</script>\r\n	<script type=\"text/javascript\">\r\nvar x = parseInt(window.screen.width) / 2 - 200;  // the number 250 is the exact half of the width of the pop-up and so should be changed according to the size of the pop-up\r\nvar y = parseInt(window.screen.height) / 2 - 200;\r\n \r\n\r\n$(document).ready(function(){\r\n$('.info').tooltip();\r\n\r\n\r\nif(".toCharArray();
    _jsp_string53 = "\r\n\r\n<table border=\"0\" width=\"610\" height=\"26\" id=\"table1\">\r\n\r\n	<tr>\r\n		<font size=\"2\" face=\"Arial\" style=\"font-size: 14pt\" color=\"#000080\"/>\r\n		".toCharArray();
    _jsp_string9 = "\r\n	<script>\r\n		parent.location.href = \"index.jsp\";\r\n	</script>\r\n	".toCharArray();
    _jsp_string10 = "\r\n			</head>\r\n\r\n	<body>\r\n		<div class=\"container\">\r\n			<form name=\"GroupReport\" method=\"post\" action=\"GroupReport.jsp\">\r\n\r\n			<div class=\"row-fluid\">\r\n				<div class=\"offset1 span4\">\r\n					<h2>".toCharArray();
    _jsp_string44 = "\r\n			<!-- <input type=\"button\" name=\"btnSubgroup\" value=\"".toCharArray();
    _jsp_string30 = "\r\n					:\r\n				</div>\r\n				<div class=\"span5\">\r\n					<select name=\"division\"\r\n						onChange=\"populateDept(this.form, this.form.division, this.form.surveyName, this.form.JobPost)\">\r\n						<option value=".toCharArray();
    _jsp_string7 = "\");\r\n		return false;\r\n	}\r\n	return true;	\r\n}\r\nfunction closeModal()\r\n{\r\n	$(\"#myModal\").modal(\"hide\");\r\n}\r\nfunction confirmOpen(form)\r\n{\r\n	\r\n	if(checkField(form)){\r\n		//type 1=simplified;2=standard\r\n		var type = 2; \r\n		if(form.chkReportType.checked)\r\n			type = 1;\r\n		\r\n		//Denise 16/12/2009 exGR = 0. Exclude Group Ranking box is not checked\r\n		var exGR = 0;	\r\n		var wAvg =0;\r\n		if(form.chkGR.checked)\r\n			exGR = 1;\r\n		if(form.weightedAverage.checked)\r\n			wAvg=1;\r\n		\r\n		if(form.JobPost.value != 0 && form.surveyName.value != 0)  {\r\n			//myWindow=window.open('GroupReportAll.jsp','GroupReportPopUp','scrollbars=no, width=1280, height=480');\r\n			$(\"#myModal\").modal(\"show\");\r\n			loading();\r\n		//	var query = \"GroupReportAll.jsp\";\r\n		//	myWindow.moveTo(x,y);\r\n		//	myWindow.location.href =  query;\r\n	\r\n			//Denise 16/12/2009 To add the Exclude Group Ranking function\r\n			var query= \"GroupReport.jsp?open=\"+type+\"&exGR=\"+exGR;\r\n			form.action = query;\r\n			form.method = \"post\";\r\n			form.submit();\r\n			\r\n			return true;	\r\n		}else {\r\n			alert(\"".toCharArray();
    _jsp_string43 = "\r\n      </select></div>\r\n			</div>\r\n			<div class=\"row-fluid\" style=\"padding-top: 20px\">\r\n				<h4>Report Customisation</h4>\r\n			</div>\r\n			<div class=\"row-fluid\">\r\n				<label><input type=\"checkbox\"   class =\"roundedTwo\" name=\"chkReportType\" value=\"ON\">\r\n				<span class=\"info\" data-toggle=\"tooltip\" title=\"\" data-placement=\"right\" data-original-title=\"Check this option to omit the Competency charts.\">Simplified Report\r\n</label>\r\n			</div>\r\n			<div class=\"row-fluid\">\r\n<label> <input type=\"checkbox\"  class =\"roundedTwo\"  name=\"chkGR\" value=\"chkGR\"> <span class=\"info\" data-toggle=\"tooltip\" title=\"\" data-placement=\"right\" data-original-title=\"Check this option to omit the group ranking table.\">Exclude\r\n				Group Ranking\r\n			</label></div>\r\n			<div class=\"row-fluid\">\r\n<label>\r\n				<input  class =\"roundedTwo\" type=\"checkbox\" name=\"weightedAverage\"\r\n					value=\"weightedAverage\"><span class=\"info\" data-toggle=\"tooltip\" title=\"\" data-placement=\"right\" data-original-title=\"Check this option for the Current Proficiency(All)'s scores to be calculated based on the average of the different groups of raters' scores\" > Weighted Average</span>\r\n					</label>\r\n			</div>\r\n			\r\n			<div class=\"row-fluid\">\r\n<label>\r\n				<input type=\"checkbox\"  class =\"roundedTwo\"  name=\"clusterCompetency\"\r\n					value=\"clusterCompetency\"/> <span class=\"info\" data-toggle=\"tooltip\" title=\"\" data-placement=\"right\" data-original-title=\"Check this option for the competencies to be grouped under clusters.\">Cluster Competency</span>\r\n			</label></div>\r\n			<div class=\"row-fluid\">\r\n<label> <input type=\"checkbox\"  class =\"roundedTwo\"  name=\"rankingTable\" value=\"rankingTable\"> <span class=\"info\" data-toggle=\"tooltip\" title=\"\" data-placement=\"right\" data-original-title=\"Check this option to include the ranking table of the participants in the survey.\">\r\n				Ranking Tables\r\n			</label></div>\r\n					\r\n			<div class=\"row-fluid\"></div>\r\n			".toCharArray();
    _jsp_string39 = "\r\n						\r\n					</select>\r\n				</div>\r\n			</div>\r\n			<div class=\"row-fluid\">\r\n				<div class=\"span2\">\r\n				Template:</div>\r\n				<div class=\"span6\">\r\n				 <select size=\"1\" name=\"template\" style=\"width:320px\">\r\n      ".toCharArray();
    _jsp_string48 = "\" onclick = \"return openSubgroup(this.form)\" disabled>\r\n-->\r\n				<div class=\"row-fluid\">\r\n					<div class=\"offset2 span2\">\r\n						<input type=\"button\" name=\"btnOpen\"\r\n							value=\"".toCharArray();
    _jsp_string35 = "\r\n					:\r\n				</div>\r\n				<div class=\"span5\">\r\n					<select name=\"designation\">\r\n						<option value=''>".toCharArray();
    _jsp_string55 = " Pacific Century Consulting Pte Ltd. All Rights Reserved.\r\n		</font>\r\n		</td>\r\n		\r\n	</tr>\r\n		\r\n</table>\r\n\r\n\r\n</body>\r\n</html>".toCharArray();
    _jsp_string52 = "\r\n\r\n".toCharArray();
    _jsp_string16 = "\r\n				<div class=\"span5\">\r\n					<select size=\"1\" name=\"selOrg\"\r\n						onchange=\"proceed(this.form,this.form.selOrg)\">\r\n						<option value=\"0\" selected>".toCharArray();
  }
}
