/*
 * JSP generated by Resin Professional 4.0.36 (built Fri, 26 Apr 2013 03:33:09 PDT)
 */

package _jsp;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import java.io.*;
import java.lang.String;
import java.lang.Object;
import java.util.*;
import java.text.*;
import java.util.Date;
import CP_Classes.PrelimQuestion;
import CP_Classes.AdditionalQuestion;
import CP_Classes.vo.voCompetency;
import CP_Classes.vo.voKeyBehaviour;
import CP_Classes.vo.voRatingTask;
import CP_Classes.vo.votblSurvey;

public class _questionnaires__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html");
    response.setCharacterEncoding("utf-8");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    // by lydia Date 05/09/2008 Fix jsp file to support Thai language 
    out.write(_jsp_string1, 0, _jsp_string1.length);
    CP_Classes.Database Database;
    synchronized (pageContext.getSession()) {
      Database = (CP_Classes.Database) pageContext.getSession().getAttribute("Database");
      if (Database == null) {
        Database = new CP_Classes.Database();
        pageContext.getSession().setAttribute("Database", Database);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.RatersDataEntry RDE;
    synchronized (pageContext.getSession()) {
      RDE = (CP_Classes.RatersDataEntry) pageContext.getSession().getAttribute("RDE");
      if (RDE == null) {
        RDE = new CP_Classes.RatersDataEntry();
        pageContext.getSession().setAttribute("RDE", RDE);
      }
    }
    out.write(_jsp_string3, 0, _jsp_string3.length);
    CP_Classes.Questionnaire Questionnaire;
    synchronized (pageContext.getSession()) {
      Questionnaire = (CP_Classes.Questionnaire) pageContext.getSession().getAttribute("Questionnaire");
      if (Questionnaire == null) {
        Questionnaire = new CP_Classes.Questionnaire();
        pageContext.getSession().setAttribute("Questionnaire", Questionnaire);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.SurveyResult SurveyResult;
    synchronized (pageContext.getSession()) {
      SurveyResult = (CP_Classes.SurveyResult) pageContext.getSession().getAttribute("SurveyResult");
      if (SurveyResult == null) {
        SurveyResult = new CP_Classes.SurveyResult();
        pageContext.getSession().setAttribute("SurveyResult", SurveyResult);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.Login logchk;
    synchronized (pageContext.getSession()) {
      logchk = (CP_Classes.Login) pageContext.getSession().getAttribute("logchk");
      if (logchk == null) {
        logchk = new CP_Classes.Login();
        pageContext.getSession().setAttribute("logchk", logchk);
      }
    }
    out.write(_jsp_string3, 0, _jsp_string3.length);
    CP_Classes.User_Jenty User_Jenty;
    synchronized (pageContext.getSession()) {
      User_Jenty = (CP_Classes.User_Jenty) pageContext.getSession().getAttribute("User_Jenty");
      if (User_Jenty == null) {
        User_Jenty = new CP_Classes.User_Jenty();
        pageContext.getSession().setAttribute("User_Jenty", User_Jenty);
      }
    }
    out.write(_jsp_string3, 0, _jsp_string3.length);
    CP_Classes.KeyBehaviour KB;
    synchronized (pageContext.getSession()) {
      KB = (CP_Classes.KeyBehaviour) pageContext.getSession().getAttribute("KB");
      if (KB == null) {
        KB = new CP_Classes.KeyBehaviour();
        pageContext.getSession().setAttribute("KB", KB);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.Translate trans;
    synchronized (pageContext.getSession()) {
      trans = (CP_Classes.Translate) pageContext.getSession().getAttribute("trans");
      if (trans == null) {
        trans = new CP_Classes.Translate();
        pageContext.getSession().setAttribute("trans", trans);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.AdditionalQuestionController AddQController;
    synchronized (pageContext.getSession()) {
      AddQController = (CP_Classes.AdditionalQuestionController) pageContext.getSession().getAttribute("AddQController");
      if (AddQController == null) {
        AddQController = new CP_Classes.AdditionalQuestionController();
        pageContext.getSession().setAttribute("AddQController", AddQController);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.Create_Edit_Survey CE_Survey;
    synchronized (pageContext.getSession()) {
      CE_Survey = (CP_Classes.Create_Edit_Survey) pageContext.getSession().getAttribute("CE_Survey");
      if (CE_Survey == null) {
        CE_Survey = new CP_Classes.Create_Edit_Survey();
        pageContext.getSession().setAttribute("CE_Survey", CE_Survey);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.PrelimQuestionController PrelimQController;
    synchronized (pageContext.getSession()) {
      PrelimQController = (CP_Classes.PrelimQuestionController) pageContext.getSession().getAttribute("PrelimQController");
      if (PrelimQController == null) {
        PrelimQController = new CP_Classes.PrelimQuestionController();
        pageContext.getSession().setAttribute("PrelimQController", PrelimQController);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.SurveyRating RT;
    synchronized (pageContext.getSession()) {
      RT = (CP_Classes.SurveyRating) pageContext.getSession().getAttribute("RT");
      if (RT == null) {
        RT = new CP_Classes.SurveyRating();
        pageContext.getSession().setAttribute("RT", RT);
      }
    }
    out.write(_jsp_string4, 0, _jsp_string4.length);
    
if(logchk.getSystemMaintenance()==false) {

    out.write(_jsp_string5, 0, _jsp_string5.length);
    
}else{

    out.write(_jsp_string6, 0, _jsp_string6.length);
    
}

    out.write(_jsp_string7, 0, _jsp_string7.length);
     	// Change prompt from "are finished" to "have finished" as requested by Ms Ros, Desmond 23 Oct 09
			// Change word rating to ratings, Mark Oei 16 April 2010
    out.write(_jsp_string8, 0, _jsp_string8.length);
    out.print((trans.tslt("If you have finished and do not wish to change the ratings any further, click CANCEL here and click on the FINISH button instead. If you simply want to save your ratings for now, click OK here")));
    out.write(_jsp_string9, 0, _jsp_string9.length);
    out.print((trans.tslt("Your rating will be saved and your assignment status for this target will be set to incomplete")));
    out.write(_jsp_string10, 0, _jsp_string10.length);
    
	String username=(String)session.getAttribute("username");

	if (!logchk.isUsable(username)) 
	{

    out.write(_jsp_string11, 0, _jsp_string11.length);
      
	} 

	int pkUser = logchk.getPKUser();
	int userType = logchk.getUserType();
	int compID = logchk.getCompany();
	int orgID = logchk.getOrg();
	
	String radiobuttonID = "";
	String radiobuttonName = "";
	boolean internalfirstLoop = true;
	boolean internalfirstLoopForComment = true;
	String commentID = "";
	
	//---get survey, target and rater ID.
	int surveyID = RDE.getSurveyID();		
	int targetLoginID = RDE.getTargetID();
	int raterLoginID = RDE.getRaterID();
	
	
	//---beans which are set from Questionnaire.jsp
	int start = Questionnaire.getStartID();
	int assignmentID = Questionnaire.getAssignmentID();
	String name = Questionnaire.getName();
	String jobPost = Questionnaire.getJobPost();
	String timeFrame = Questionnaire.getTimeFrame();
	String futureJob = Questionnaire.getFutureJob();
	//add by Denise 14/12/2009 
	boolean hideNAOption = Questionnaire.getHideNAOption(surveyID);
	
	if(futureJob == null)
		futureJob = "";
	if(timeFrame == null)
		timeFrame = "";

	int RSID[] = Questionnaire.getSurveyRatingScale(surveyID); //RatingScale ID
	int RTID[] = Questionnaire.getRT();
	//int RSID[] = Questionnaire.getRS();
	
	//---check if comment needs to be included
	int included = Questionnaire.commentIncluded(surveyID);
	int selfIncluded = Questionnaire.SelfCommentIncluded(surveyID);
	
	
	//---check if it is self
	String rCode = SurveyResult.RaterCode(assignmentID);
	
	
	//---query database in Questionnaire.java
	int surveyLevel = Questionnaire.getSurveyLevel();
	String [] UserInfo = User_Jenty.getUserDetail(pkUser);

	int pk = Questionnaire.getCurrID();	
	
	
	String surveyName = Questionnaire.getSurveyInfo(surveyID); //get surveyName
		
	String raterName = Questionnaire.UserName(orgID, raterLoginID);

	int totalRatingTask = Questionnaire.getTotalSurveyRating(surveyID); // count total number of rating task.
	int totalAll = 0;
	
	if(surveyLevel == 0)
		totalAll = Questionnaire.TotalList(surveyID, 0);
	else
		totalAll = Questionnaire.TotalList(surveyID, 1);

	
	if(request.getParameter("finishall") != null) {

		String temp = surveyName + "(S); " + name + "(T); " + raterName + "(R); Complete";
		/*try {
			EV.addRecord("Finish", "Questionnaire", temp, UserInfo[2], UserInfo[11], UserInfo[10]);
		}catch(SQLException SE) {}*/
		
		//18-Apr-08 (Rianto): Need to be commented off since Yuni had implemented the 
		//Manual calculation and Timer to run it automatically. The new feature is designed to reduce the processing load 
		//when users submitted their questionnaires
		//SurveyResult.Calculate(assignmentID, 0);		// calculation part, 0=not include/exclude rater				
		
		
		//Wei Han 13 Apr 2012 check if there are additional questions to be answered, if not proceed as usual
		Vector<AdditionalQuestion> v = AddQController.getQuestions(surveyID);
		if(v.size()>0)
		{
			
    out.write(_jsp_string12, 0, _jsp_string12.length);
     
		}
		else
		{
			Questionnaire.SetRaterStatus(assignmentID, 1);

    out.write(_jsp_string13, 0, _jsp_string13.length);
     // Change from "Thank You" to "Thank you" in below alert as requested by Ms Ros, Desmond 23 Oct 09 
    out.write(_jsp_string14, 0, _jsp_string14.length);
    out.print((trans.tslt("Thank you for your participation")));
    out.write(_jsp_string15, 0, _jsp_string15.length);
    								
			if(userType == 1 || userType == 2) {

    out.write(_jsp_string16, 0, _jsp_string16.length);
    						
			} else if(userType == 3) {

    out.write(_jsp_string17, 0, _jsp_string17.length);
    						
			} else if(userType == 4) {		// raters

    out.write(_jsp_string18, 0, _jsp_string18.length);
    
		}
		}
	}
	
	//---get the list of competency assigned to the survey.
	
	
	int iPKComp = 0;
	int iPKKB = 0;
	// by Hemilda Date 13/08/2008 add compentecy name
	String sCompName="";
	String sCompDef = "";
	String sKBDef = "";
	Vector vKBList = new Vector();
	int totalCurrComp = Questionnaire.getTotalCurrComp();	// to mantain the total current competency
	int totalComp = Questionnaire.getTotalComp();


	int totalCompleted = Questionnaire.TotalResult(assignmentID);
	
	int complete = 0;
	if(totalCompleted == (totalAll * totalRatingTask))
		complete = 1;

	Vector vComp = Questionnaire.getCompetency(surveyID);
	voCompetency voComp = new voCompetency();
		
	if(vComp.size() > 0)
		voComp = (voCompetency)vComp.elementAt(0);
	
	if (voComp != null) {

		iPKComp = voComp.getCompetencyID();
		sCompDef = voComp.getCompetencyDefinition();
		sCompName = voComp.getCompetencyName();
		if(surveyLevel == 0)
			vKBList = KB.getKBList(iPKComp, 0, compID, orgID);
		else 
			vKBList = Questionnaire.getKBSurvey(surveyID, iPKComp);
	}
	else 
	{
		if(userType == 1 || userType == 2) {

    out.write(_jsp_string19, 0, _jsp_string19.length);
    						
		} else if(userType == 3) {

    out.write(_jsp_string20, 0, _jsp_string20.length);
    						
		} else if(userType == 4) {

    out.write(_jsp_string21, 0, _jsp_string21.length);
    		}
	}
	
	if(totalCurrComp == 0) {
	
		Questionnaire.setCurrID(iPKComp);
		
	}
	
	if(totalCurrComp == 0 && start == 1) {
		Questionnaire.setStartID(0);
		int total = Questionnaire.TotalResult(assignmentID, iPKComp);
		
		//System.out.println("---------------->" + assignmentID + "---" + iPKComp+ "---" + iPKKB);
		
		int counter = 1;
		int totalRating = 0;
		
		if(surveyLevel == 1)
			totalRating = vKBList.size() * totalRatingTask;
		else 
			totalRating = totalRatingTask;
		
		while(total == totalRating && counter < totalComp && counter < vComp.size()) 
		{
		
			voComp = (voCompetency)vComp.elementAt(counter);
			
			totalCurrComp++;
			iPKComp = voComp.getCompetencyID();
			sCompDef = voComp.getCompetencyDefinition();
			sCompName = voComp.getCompetencyName();
			Questionnaire.setCurrID(iPKComp);
							
			if(surveyLevel == 0)
				vKBList = KB.getKBList(iPKComp, 0, compID, orgID);
			else 
				vKBList = Questionnaire.getKBSurvey(surveyID, iPKComp);
				
			Questionnaire.setTotalCurrComp(totalCurrComp);	
			
			//System.out.println("========>" + totalCurrComp); 
			
			total = Questionnaire.TotalResult(assignmentID, iPKComp);
			
			if(surveyLevel == 1)
				totalRating = vKBList.size() * totalRatingTask;
			//System.out.println(assignmentID + "---" + iPKComp+ "---" + iPKKB + "----" + total);

			counter ++;
		}
	}
		
	if(request.getParameter("go") != null) 
	{
		
		SimpleDateFormat sdfDate = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");//dd/MM/yyyy
	    Date now = new Date();
	    String strDate = sdfDate.format(now);
		System.out.println("Go = " + request.getParameter("go") + " " + strDate);

		totalCurrComp = Questionnaire.getTotalCurrComp();
		int go = Integer.parseInt(request.getParameter("go"));
	
		pk = Questionnaire.getCurrID();
		
		int arrPK[] = new int[1];
	    
	    if(surveyLevel == 1) {
			vKBList = Questionnaire.getKBSurvey(surveyID, pk);
			arrPK = new int[vKBList.size()];
			
			for(int i=0; i<vKBList.size(); i++) {
				voKeyBehaviour voKB = (voKeyBehaviour)vKBList.elementAt(i);
				arrPK[i] = voKB.getKeyBehaviourID();
				//System.out.println("----"+arrPK[i]);
			}
			

		} else {
			arrPK[0] = pk;
		}	
				
	
		if( (go == 1 && totalCurrComp < totalComp) || (go == 2 && totalCurrComp >= 0) || go == 3 ) {
		
			//System.out.println("OKKKKKKKK");
			for(int rs=0; rs<totalRatingTask; rs++) 
			{
				int RTStatus = Questionnaire.RTSetupStatus(RTID[rs], surveyID);
				
				if(RTStatus != 0) 
				{
					for(int i=0; i<arrPK.length; i++) {
						float oldResult = Questionnaire.CheckOldResultExist(assignmentID, arrPK[i], RTID[rs]);
						
						if(oldResult <= 0) {
							try {
								float score = 0;
								
								if (surveyLevel == 0) 
									score = Questionnaire.RTScore(RTID[rs], surveyID, arrPK[i]);
								 else 
									score = Questionnaire.RTScoreBehv(RTID[rs], surveyID, arrPK[i]);
	
								Questionnaire.addResult(assignmentID, arrPK[i], RTID[rs], score); 
							}catch(SQLException SE) {}
						}
					}
					
				} else {
					for(int i=0; i<arrPK.length; i++) {	
							
						String [] scaleValue = request.getParameterValues("rbtnScale" + "_" + arrPK[i] + "_" + RTID[rs]);
						if(scaleValue != null)
						{
							for(int j=0; j<scaleValue.length; j++) {
								if(scaleValue[j] != null){
									float value = Float.parseFloat(scaleValue[j]);
									float oldResult = Questionnaire.CheckOldResultExist(assignmentID, arrPK[i], RTID[rs]);
									
									//System.out.println("*************************"+oldResult);
									if(oldResult < 0) {
										try {
											Questionnaire.addResult(assignmentID, arrPK[i], RTID[rs], value); //add date
										}catch(SQLException SE) {}
									}								
									else if(oldResult >= 0 && oldResult != value)
										Questionnaire.updateOldResult(assignmentID, arrPK[i], RTID[rs], value);
								}
							}
						} // end if scaleValue is not null				
					} // end for loop				
				}
			}
		
			if((rCode.equals("SELF") && selfIncluded == 1) || !(rCode.equals("SELF"))&&included == 1)
			{
			    for(int i=0; i<arrPK.length; i++) {	

					int competency = arrPK[0];
					int keybehaviour = 0;
					
					if(surveyLevel == 1) {
						competency = Questionnaire.CompetencyID(arrPK[i]);
						keybehaviour = arrPK[i];
					}
					
					String commentName = "comments" + competency + keybehaviour;
					if(request.getParameter(commentName) != null) {
						
						String value = request.getParameter(commentName);
						//System.out.println(pk+ "======" + value);

						value = value.trim();
                                                //Removed by DeZ, 16.07.08, Fixed problem where Import Questionaires gives blank narrative comments even though data is available
						//value = Database.SQLFixer(value);
							
						String oldResult = Questionnaire.checkCommentExist(assignmentID, competency, keybehaviour);
						if(oldResult == null) {
							//System.out.println("OK");
							try {
								Questionnaire.addComment(assignmentID, competency, keybehaviour, value); 
							}catch(SQLException SE) {}
						}								
						else if(oldResult != null && !oldResult.equals(value)) {
							Questionnaire.updateComment(assignmentID, competency, keybehaviour, value);
							//System.out.println("OK2");

						}
					}
				}
			}
		
		}
		
		//go == 1 is next and go == 2 is prev
		
		if(go == 2 && (totalCurrComp-1) >= 0 )  {
			totalCurrComp--; 
		} else if(go == 1 && (totalCurrComp+1) < totalComp) {
			totalCurrComp++;
			System.gc();
		}
		
		if(go == 1 || go == 2) {		
			Questionnaire.setTotalCurrComp(totalCurrComp);			
			
			
			if(totalCurrComp >= 0 && totalCurrComp < totalComp && totalCurrComp < vComp.size()) 
			{
				voComp = (voCompetency)vComp.elementAt(totalCurrComp);
				iPKComp = voComp.getCompetencyID();
				sCompDef = voComp.getCompetencyDefinition();
				sCompName = voComp.getCompetencyName();
				Questionnaire.setCurrID(iPKComp);
				//System.out.println("-----------------------------"+totalCurrComp +"-----------------------------"+iPKComp);
		
				if(surveyLevel == 0)
					vKBList = KB.getKBList(iPKComp, 0, compID, orgID);
				else 
					vKBList = Questionnaire.getKBSurvey(surveyID, iPKComp);
	
				}
		}
		
		
		if(request.getParameter("finish") != null) {
			/*************if finish == 3 which indicates exit*******************************/
			if(Integer.parseInt(request.getParameter("finish")) == 3) {
				String temp = surveyName + "(S); " + name + "(T); " + raterName + "(R); Incomplete";
				/*try{
					EV.addRecord("Exit", "Questionnaire", temp, UserInfo[2], UserInfo[11], UserInfo[10]);
				}catch(SQLException SE) {}*/
				
				if(userType == 1 || userType == 2) {
					
    out.write(_jsp_string22, 0, _jsp_string22.length);
    						
				} else if(userType == 3) {
					
    out.write(_jsp_string23, 0, _jsp_string23.length);
    						
				} else if(userType == 4) {
					
    out.write(_jsp_string24, 0, _jsp_string24.length);
    						
				}
			}
			
			/*************if finish == 2 which indicates finish the questionnaire*******************************/
			
			if(Integer.parseInt(request.getParameter("finish")) == 2) { 
				totalCompleted = Questionnaire.TotalResult(assignmentID);
				//System.out.println(totalCompleted + "-------" + totalAll * totalRatingTask);
				//System.out.println("totalCompleted = " + totalCompleted + ", totalAll = " + totalAll + ", totalRatingTask = " + totalRatingTask);
					
				if(totalCompleted == (totalAll * totalRatingTask)) {
					int commentIncluded = Questionnaire.commentIncluded(surveyID);
						
					int commentInput = 1;
					
					if(targetLoginID == raterLoginID)
						commentIncluded = Questionnaire.SelfCommentIncluded(surveyID);
					
					if(commentIncluded == 1)
						commentInput = Questionnaire.checkCommentInput(assignmentID);
						
					Vector<AdditionalQuestion> v = AddQController.getQuestions(surveyID);
					if(commentInput == 0) {
						
						
						if(v.size()>0)
						{
							
    out.write(_jsp_string25, 0, _jsp_string25.length);
    out.print((trans.tslt("No comments included. Do you want to continue")));
    out.write(_jsp_string26, 0, _jsp_string26.length);
    		
						}
						else
						{
						
    out.write(_jsp_string27, 0, _jsp_string27.length);
    out.print((trans.tslt("No comments included. Do you want to finish")));
    out.write(_jsp_string28, 0, _jsp_string28.length);
    				
						}
					}else {		
						if(v.size()>0)
						{
							
    out.write(_jsp_string29, 0, _jsp_string29.length);
     // Change from "clicked" to click as requested by Ms Ros, Desmond 23 Oct 09 
    out.write(_jsp_string30, 0, _jsp_string30.length);
    		
						}
						else
						{
						
    out.write(_jsp_string31, 0, _jsp_string31.length);
     // Change from "clicked" to click as requested by Ms Ros, Desmond 23 Oct 09 
    out.write(_jsp_string32, 0, _jsp_string32.length);
    out.print((trans.tslt("Once you click on the OK button, no more amendments can be made")));
    out.write(_jsp_string33, 0, _jsp_string33.length);
    		
						}
					}
				} else {
					String temp = surveyName + "(S); " + name + "(T); " + raterName + "(R); Incomplete";
					//EV.addRecord("Finish", "Questionnaire", temp, UserInfo[2], UserInfo[11], UserInfo[10]);
					Questionnaire.setStartID(1);
					
    out.write(_jsp_string34, 0, _jsp_string34.length);
    								
					
					if(userType == 1 || userType == 2) {
						
    out.write(_jsp_string35, 0, _jsp_string35.length);
    						
					} else if(userType == 3) {
						
    out.write(_jsp_string35, 0, _jsp_string35.length);
    						
					} else if(userType == 4) {
						
    out.write(_jsp_string35, 0, _jsp_string35.length);
    						
					}			
				}
				
			
			} else {
				if(totalCurrComp >= 0 && totalCurrComp < totalComp && totalCurrComp < vComp.size()) {
					voComp = (voCompetency)vComp.elementAt(totalCurrComp);
					iPKComp = voComp.getCompetencyID();
					sCompDef = voComp.getCompetencyDefinition();
					sCompName = voComp.getCompetencyName();
					Questionnaire.setCurrID(iPKComp);
					
					if(surveyLevel == 0)
						vKBList = KB.getKBList(iPKComp, 0, compID, orgID);
					else 
						vKBList = Questionnaire.getKBSurvey(surveyID, iPKComp);
		
				}
			}
		}
	}	// end request.getParameter("go")


    out.write(_jsp_string36, 0, _jsp_string36.length);
    out.print((trans.tslt("Questionnaire")));
    out.write(_jsp_string37, 0, _jsp_string37.length);
    
	if(request.getParameter("saveSuccessful") != null) {

    out.write(_jsp_string38, 0, _jsp_string38.length);
     		
		if (futureJob.equals("")) { 


    out.write(_jsp_string39, 0, _jsp_string39.length);
    
		} else {

    out.write(_jsp_string40, 0, _jsp_string40.length);
    
		}

    out.write(_jsp_string41, 0, _jsp_string41.length);
    
	}

    out.write(_jsp_string42, 0, _jsp_string42.length);
    out.print((trans.tslt("Target Name")));
    out.write(_jsp_string43, 0, _jsp_string43.length);
    out.print((name));
    out.write(_jsp_string44, 0, _jsp_string44.length);
     
	if (futureJob != "") {

    out.write(_jsp_string45, 0, _jsp_string45.length);
    out.print((trans.tslt("Future Job")));
    out.write(_jsp_string46, 0, _jsp_string46.length);
    out.print((futureJob));
    out.write(_jsp_string47, 0, _jsp_string47.length);
     }
    out.write(_jsp_string48, 0, _jsp_string48.length);
    out.print((trans.tslt("Job Position")));
    out.write(_jsp_string49, 0, _jsp_string49.length);
    out.print((jobPost));
    out.write(_jsp_string47, 0, _jsp_string47.length);
     
	if (timeFrame!= "") {

    out.write(_jsp_string50, 0, _jsp_string50.length);
    out.print((trans.tslt("Time Frame")));
    out.write(_jsp_string51, 0, _jsp_string51.length);
    out.print((timeFrame));
    out.write(_jsp_string47, 0, _jsp_string47.length);
     }
    out.write(_jsp_string52, 0, _jsp_string52.length);
    out.print((trans.tslt("Competency Name")));
    out.write(_jsp_string53, 0, _jsp_string53.length);
    out.print((sCompName));
    out.write(_jsp_string54, 0, _jsp_string54.length);
    
// Hide Competency Definition textbox in Questionnaire if no Competency Definition is available in the database, Desmond 11 August 2010
if(sCompDef.length()>0 && !sCompDef.equalsIgnoreCase("")) {
	
	/*
     *Change(s): added check on the HideCompDesc before printing the competency description
     *Reason(s): To allow toggling of the competency description
     *Updated By: Liu Taichen
     *Updated On: 12/07/2012
     */
	votblSurvey voSurvey = CE_Survey.getSurveyDetail(surveyID);
	if(voSurvey.getHideCompDesc() == 0){

    out.write(_jsp_string55, 0, _jsp_string55.length);
    out.print((trans.tslt("Competency Description")));
    out.write(_jsp_string56, 0, _jsp_string56.length);
    out.print((sCompDef));
    out.write(_jsp_string57, 0, _jsp_string57.length);
    }
}
    out.write(_jsp_string58, 0, _jsp_string58.length);
    
	int [] arrID = new int[1];
	
	if(surveyLevel == 0) {
		arrID[0] = Questionnaire.getCurrID();
		if(CE_Survey.getHideKBDesc(surveyID)==0){

    out.write(_jsp_string59, 0, _jsp_string59.length);
    out.print((trans.tslt("Key Behaviours")));
    out.write(_jsp_string60, 0, _jsp_string60.length);
    
	}
	} else {
		arrID = new int[vKBList.size()];
	}
	
	for(int i=0; i<vKBList.size(); i++) {
	
		voKeyBehaviour voKB = (voKeyBehaviour)vKBList.elementAt(i);
		iPKKB = voKB.getKeyBehaviourID();
		sKBDef = voKB.getKeyBehaviour();
		
		if(surveyLevel == 0) {
		if(CE_Survey.getHideKBDesc(surveyID)==0){

    out.write(_jsp_string61, 0, _jsp_string61.length);
    out.print((sKBDef));
    out.write(_jsp_string62, 0, _jsp_string62.length);
    		
		}
		} else {
			arrID[i] = iPKKB;
		}
	}

	if(surveyLevel == 0) {
	if(CE_Survey.getHideKBDesc(surveyID)==0){

    out.write(_jsp_string63, 0, _jsp_string63.length);
    
	}
	}	


    out.write(_jsp_string64, 0, _jsp_string64.length);
     
	if(surveyLevel == 0) {

    out.write(_jsp_string65, 0, _jsp_string65.length);
    
	} else {

    out.write(_jsp_string66, 0, _jsp_string66.length);
    
	}
	for(int i=0; i<arrID.length; i++) {
		int ID = 0;
		
	
		if(surveyLevel == 0) {
			ID = arrID[i];
			/*
			*Change(s): added a row to display whether the competency rating is completed
			*Reason(s): to let the user know of the status of the completion of the questionnaire
			*Updated By: Liu Taichen
			*Updated On: 29/June/2012
			*
			*/
			if(Questionnaire.isCompletedCompetency(assignmentID, ID)){
			
    out.write(_jsp_string67, 0, _jsp_string67.length);
    	
			}
			else{
				
				
    out.write(_jsp_string68, 0, _jsp_string68.length);
    			
				
			}
		} else if(surveyLevel == 1) { 
			voKeyBehaviour voKB = (voKeyBehaviour)vKBList.elementAt(i);
			ID = voKB.getKeyBehaviourID();
			sKBDef = voKB.getKeyBehaviour();
				
			if(Questionnaire.hasCompleted(assignmentID, ID, RTID.length)) {

    out.write(_jsp_string69, 0, _jsp_string69.length);
    out.print((i+1));
    out.write(_jsp_string70, 0, _jsp_string70.length);
    out.print((sKBDef));
    out.write(_jsp_string71, 0, _jsp_string71.length);
    
			} else {

    out.write(_jsp_string72, 0, _jsp_string72.length);
    out.print((i+1));
    out.write(_jsp_string70, 0, _jsp_string70.length);
    out.print((sKBDef));
    out.write(_jsp_string73, 0, _jsp_string73.length);
    				
			}
			

    out.write(_jsp_string74, 0, _jsp_string74.length);
    
		}

    out.write(_jsp_string75, 0, _jsp_string75.length);
    
		if(surveyLevel == 1) {

    out.write(_jsp_string76, 0, _jsp_string76.length);
    
		}		

    out.write(_jsp_string0, 0, _jsp_string0.length);
    			
    //Rating Scale ID For-Loop
    for(int k=0; k<RSID.length; k++) {

        if(RSID[k] == -1) 
            break;

        float oldRS = 0;

        Vector vRatingTask = Questionnaire.getSurveyRatingTask(surveyID, RSID[k]);

        int iRTID = 0;
        String sRTName = "";
        String sRTCode;
        String colours [] = {"#FFFFCC", "#CCFFCC", "#CCFFCC"};

        int iCount = 0;
        
        //Rating Task Vector For-Loop
        for(int l=0; l<vRatingTask.size(); l++) {
            voRatingTask voRT = (voRatingTask)vRatingTask.elementAt(l);

            iRTID = voRT.getRatingTaskID();

            /************************** CHECK EITHER TO SHOW OR HIDE RATING TASK *********************************************/
            int RTSetup = Questionnaire.RTSetupStatus(iRTID, surveyID);

            if(RTSetup != 2) {
                iCount++;
            }
        } //End of Rating Task Vector For-Loop

    out.write(_jsp_string77, 0, _jsp_string77.length);
    
        Vector vRScale = Questionnaire.getRatingScale(RSID[k]);
        int totalRS   = Questionnaire.getTotalRS(RSID[k]);
       
        int low [] = new int [totalRS];
        int high [] = new int [totalRS];
        int lowValue=0, highValue=0;
        int colspan[] = new int[totalRS];
        String scaleDesc = "";
        String sScaleNADesc = "";

        //iCount Check
        if(iCount != 0) {
            //Ranking Scale Vector For-Loop
            for(int j=0; j<vRScale.size(); j++) {	
                String [] sRS = sRS = new String[3];
                sRS = (String[])vRScale.elementAt(j);
                int value = Integer.parseInt(sRS[0]);
                
                //Denise 17/12/2009 to hide the 0 value if required
                if (value==0 && hideNAOption) value ++;
                low[lowValue] = value; 
                high[highValue] = Integer.parseInt(sRS[1]);
                scaleDesc = sRS[2];

                colspan[lowValue] = high[highValue] - low[lowValue] + 1;
    	
               //edit by Denise 17/12/2009 	to hide the NA value. change equals to equalsIgnoreCase
               if(hideNAOption && (scaleDesc.equalsIgnoreCase("NA") || scaleDesc.equalsIgnoreCase("N/A") || scaleDesc.equals("Not applicable")
              					|| scaleDesc.contains("NA") || scaleDesc.contains("N/A")|| scaleDesc.contains("Not applicable") ||scaleDesc.contains("Not Applicable")||(high[highValue]==0))) {                 					 
                     totalRS --;
                } else { 

    out.write(_jsp_string78, 0, _jsp_string78.length);
    out.print((colspan[lowValue]));
    out.write(_jsp_string79, 0, _jsp_string79.length);
    out.print((scaleDesc));
    out.write(_jsp_string80, 0, _jsp_string80.length);
    					
                //}
                
                lowValue++;
                highValue++;
               }
            } //End of Ranking Scale Vector For-Loop
            
/*            if(!sScaleNADesc.equals("")) {

    out.write(_jsp_string81, 0, _jsp_string81.length);
    out.print((sScaleNADesc));
    out.write(_jsp_string80, 0, _jsp_string80.length);
    			
            }*/
        } //End of iCount Check

    out.write(_jsp_string82, 0, _jsp_string82.length);
    
        //Rating Task Vector For-Loop
        for(int l=0; l<vRatingTask.size(); l++) {
            voRatingTask voRT = (voRatingTask)vRatingTask.elementAt(l);

            iRTID = voRT.getRatingTaskID();
            sRTName = voRT.getRatingTaskName();
            sRTCode = voRT.getRatingCode();
            String RTDesc = RT.getRatingTaskDesc(surveyID, iRTID);
            String RTDisplayCode = RT.getRTDisplayCode(surveyID, iRTID);

            /************************** CHECK EITHER TO SHOW OR HIDE RATING TASK *********************************************/
            int RTSetup = Questionnaire.RTSetupStatus(iRTID, surveyID);
            
            //Rating Task Setup Not 2 Check
            if(RTSetup != 2) {

            oldRS = Questionnaire.CheckOldResultExist(assignmentID, ID, iRTID);
            
            // Updated descriptors displayed when mouse-over Rating Task Code (i.e. CP or CPR) in Questionnaire to include a simple description, Desmond 11 August 2010
            String descriptor = sRTName;
            
            // Updated display code and description to show the specific ones edited by user. 
            if(RTDisplayCode == null)
            	RTDisplayCode = sRTCode;
            
            // The description can be edited during the edition session.
           	if(RTDesc == null || RTDesc == "")
           	{
           		if( sRTCode.equalsIgnoreCase("CPR") ) {
                	RTDesc = " - Level of performance expected of the Target";
                } else if( sRTCode.equalsIgnoreCase("CP") ) {
                	RTDesc = " - Actual level of performance of the Target now";
                } else if( sRTCode.equalsIgnoreCase("IN")) {
                	// For current importance description
                	RTDesc = " - Importance of the competency / key behaviour to the job presently.";
                } else if( sRTCode.equalsIgnoreCase("IF")) {
                	// For future importance description
                	RTDesc = " - Importance of the competency / key behaviour to the job in the future.";
                } else {
                	RTDesc = "";
                }
           	} else
           	{
           		RTDesc = " - " + RTDesc;
           	}
            
            descriptor += RTDesc;

    out.write(_jsp_string83, 0, _jsp_string83.length);
    out.print((descriptor));
    out.write(_jsp_string84, 0, _jsp_string84.length);
    out.print((RTDisplayCode));
    out.write(_jsp_string85, 0, _jsp_string85.length);
    
int j=0;

int totalValue = 0;
//Denise 17/12/2009 to find the number of rating value
for (int x=0; x<totalRS; x++)
{
	totalValue += (high[x] -low[x]+1);
}
while(j < totalRS) {

lowValue = low[j];
highValue = high[j];

while(lowValue <= highValue) {
if (internalfirstLoop != true) {
radiobuttonName = radiobuttonName + "," + Integer.toString(ID) + "_" + Integer.toString(iRTID);
radiobuttonID = radiobuttonID + "," + Integer.toString(ID) + "_" + Integer.toString(iRTID) + "_" + Integer.toString(lowValue);
} else {
radiobuttonName = Integer.toString(ID) + "_" + Integer.toString(iRTID);
radiobuttonID = Integer.toString(ID) + "_" + Integer.toString(iRTID) + "_" + Integer.toString(lowValue);
internalfirstLoop = false;
}//change to adjust the size of the rating value

    out.write(_jsp_string86, 0, _jsp_string86.length);
    out.print((100/(totalValue+1)));
    out.write(_jsp_string87, 0, _jsp_string87.length);
    out.print((colours[l]));
    out.write(_jsp_string88, 0, _jsp_string88.length);
    		

if(RTSetup == 1) 		//Fixed by admin in Survey Setup and display in Questionnaire
oldRS = (int)Questionnaire.RTScore(iRTID, surveyID, iPKComp);

//System.out.println(RTSetup + "---"+iRTID+"----------------------->"+oldRS + "======"+ lowValue);
if(oldRS >= 0 && oldRS == lowValue) {
if(RTSetup == 1) {

    out.write(_jsp_string89, 0, _jsp_string89.length);
    out.print(("rbtnScale"+ "_" + ID + "_" + iRTID + "_" + lowValue));
    out.write(_jsp_string90, 0, _jsp_string90.length);
    out.print(("rbtnScale"+ "_" + ID + "_" + iRTID));
    out.write(_jsp_string91, 0, _jsp_string91.length);
    out.print((lowValue));
    out.write(_jsp_string92, 0, _jsp_string92.length);
    		
} else {

    out.write(_jsp_string93, 0, _jsp_string93.length);
    out.print(("rbtnScale"+ "_" + ID + "_" + iRTID + "_" + lowValue));
    out.write(_jsp_string90, 0, _jsp_string90.length);
    out.print(("rbtnScale"+ "_" + ID + "_" + iRTID));
    out.write(_jsp_string91, 0, _jsp_string91.length);
    out.print((lowValue));
    out.write(_jsp_string94, 0, _jsp_string94.length);
    		
}

} else {

if(RTSetup == 1) {

    out.write(_jsp_string93, 0, _jsp_string93.length);
    out.print(("rbtnScale"+ "_" + ID + "_" + iRTID + "_" + lowValue));
    out.write(_jsp_string90, 0, _jsp_string90.length);
    out.print(("rbtnScale"+ "_" + ID + "_" + iRTID));
    out.write(_jsp_string91, 0, _jsp_string91.length);
    out.print((lowValue));
    out.write(_jsp_string95, 0, _jsp_string95.length);
    		
} else {

    out.write(_jsp_string96, 0, _jsp_string96.length);
    out.print(("rbtnScale"+ "_" + ID + "_" + iRTID + "_" + lowValue));
    out.write(_jsp_string90, 0, _jsp_string90.length);
    out.print(("rbtnScale"+ "_" + ID + "_" + iRTID));
    out.write(_jsp_string91, 0, _jsp_string91.length);
    out.print((lowValue));
    out.write(_jsp_string97, 0, _jsp_string97.length);
     		
}
} 
if(lowValue == 0) {

    out.write(_jsp_string98, 0, _jsp_string98.length);
    out.print(("N/A"));
    out.write(_jsp_string2, 0, _jsp_string2.length);
    			
} else {

    out.write(_jsp_string98, 0, _jsp_string98.length);
    out.print((lowValue));
    out.write(_jsp_string99, 0, _jsp_string99.length);
     	
} 

    out.write(_jsp_string100, 0, _jsp_string100.length);
    				
lowValue++;
} ; //end do while
j++;
} //End of While-Loop



    out.write(_jsp_string82, 0, _jsp_string82.length);
    
            } //End of Rating Task Setup Not 2 Check
        } //Rating Task Vector For-Loop

    out.write(_jsp_string101, 0, _jsp_string101.length);
     
    } //End of Rating Scale ID For-Loop

    out.write(_jsp_string0, 0, _jsp_string0.length);
    
		
	if ((rCode.equals("SELF") && selfIncluded == 1) || !(rCode.equals("SELF"))&&included == 1){
	

    out.write(_jsp_string102, 0, _jsp_string102.length);
    out.print((trans.tslt("Narrative Comments")));
    out.write(_jsp_string103, 0, _jsp_string103.length);
    
					int competency = iPKComp;
					int keybehaviour = 0;
				
					if(surveyLevel == 1) {
						keybehaviour = ID;
					}
		
					//System.out.println("comment : " + assignmentID + ", " + competency + ", " + keybehaviour);
					String oldComment = Questionnaire.checkCommentExist(assignmentID, competency, keybehaviour);
					String commentName = "comments" + competency + keybehaviour;
					
					//System.out.println("----->" + oldComment);
					if(oldComment == null)
						oldComment = "";
					
					if (internalfirstLoopForComment != true) {
						commentID = commentID + "," + commentName;
					} else {
						commentID = commentName;
						internalfirstLoopForComment = false;
					}

    out.write(_jsp_string104, 0, _jsp_string104.length);
    out.print((commentName));
    out.write(_jsp_string105, 0, _jsp_string105.length);
    out.print((oldComment));
    out.write(_jsp_string106, 0, _jsp_string106.length);
     				} 
    out.write(_jsp_string107, 0, _jsp_string107.length);
    		
		
	} // end Competency / KBList

    out.write(_jsp_string108, 0, _jsp_string108.length);
    out.print((complete));
    out.write(_jsp_string109, 0, _jsp_string109.length);
     // Removed "Factor" from bottom left corner of screen as requested by Ms Ros, Desmond 23 Oct 09 
    out.write(_jsp_string110, 0, _jsp_string110.length);
    out.print((totalCurrComp + 1));
    out.write(_jsp_string111, 0, _jsp_string111.length);
    out.print((totalComp));
    out.write(_jsp_string112, 0, _jsp_string112.length);
    
				Vector<PrelimQuestion> v = PrelimQController.getQuestions(RDE.getSurveyID());
				if(v.size() > 0){

    out.write(_jsp_string113, 0, _jsp_string113.length);
    
				}

    out.write(_jsp_string114, 0, _jsp_string114.length);
    out.print(( radiobuttonName));
    out.write(_jsp_string115, 0, _jsp_string115.length);
    out.print(( radiobuttonID));
    out.write(_jsp_string116, 0, _jsp_string116.length);
    out.print(( commentID));
    out.write(_jsp_string117, 0, _jsp_string117.length);
    
			int total = totalCurrComp;

			if(total == 0) {

    out.write(_jsp_string118, 0, _jsp_string118.length);
     			
			} else {

    out.write(_jsp_string119, 0, _jsp_string119.length);
     
			} 
			
			if(total+1 == totalComp) {

    out.write(_jsp_string120, 0, _jsp_string120.length);
     
			} else {

    out.write(_jsp_string121, 0, _jsp_string121.length);
     
			}

    out.write(_jsp_string122, 0, _jsp_string122.length);
    // by lydia Date 05/09/2008 Fix jsp file to support Thai language 
    out.write(_jsp_string0, 0, _jsp_string0.length);
    
	Calendar c = Calendar.getInstance();
	int year = c.get(Calendar.YEAR);

    out.write(_jsp_string123, 0, _jsp_string123.length);
     // Denise 05/01/2010 update new email address 
    out.write(_jsp_string124, 0, _jsp_string124.length);
    out.print((year));
    out.write(_jsp_string125, 0, _jsp_string125.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != -7791540776389363938L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("Questionnaires.jsp"), -2875856559416636246L, false);
    _caucho_depends.add(depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("Footer.jsp"), -9159279428429745474L, false);
    _caucho_depends.add(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string81;
  private final static char []_jsp_string87;
  private final static char []_jsp_string50;
  private final static char []_jsp_string49;
  private final static char []_jsp_string28;
  private final static char []_jsp_string100;
  private final static char []_jsp_string52;
  private final static char []_jsp_string64;
  private final static char []_jsp_string7;
  private final static char []_jsp_string69;
  private final static char []_jsp_string24;
  private final static char []_jsp_string71;
  private final static char []_jsp_string30;
  private final static char []_jsp_string116;
  private final static char []_jsp_string60;
  private final static char []_jsp_string1;
  private final static char []_jsp_string122;
  private final static char []_jsp_string29;
  private final static char []_jsp_string59;
  private final static char []_jsp_string25;
  private final static char []_jsp_string107;
  private final static char []_jsp_string53;
  private final static char []_jsp_string47;
  private final static char []_jsp_string22;
  private final static char []_jsp_string34;
  private final static char []_jsp_string5;
  private final static char []_jsp_string103;
  private final static char []_jsp_string113;
  private final static char []_jsp_string74;
  private final static char []_jsp_string42;
  private final static char []_jsp_string111;
  private final static char []_jsp_string117;
  private final static char []_jsp_string43;
  private final static char []_jsp_string86;
  private final static char []_jsp_string77;
  private final static char []_jsp_string110;
  private final static char []_jsp_string45;
  private final static char []_jsp_string31;
  private final static char []_jsp_string12;
  private final static char []_jsp_string97;
  private final static char []_jsp_string120;
  private final static char []_jsp_string102;
  private final static char []_jsp_string80;
  private final static char []_jsp_string89;
  private final static char []_jsp_string9;
  private final static char []_jsp_string91;
  private final static char []_jsp_string75;
  private final static char []_jsp_string76;
  private final static char []_jsp_string98;
  private final static char []_jsp_string67;
  private final static char []_jsp_string54;
  private final static char []_jsp_string37;
  private final static char []_jsp_string79;
  private final static char []_jsp_string83;
  private final static char []_jsp_string84;
  private final static char []_jsp_string93;
  private final static char []_jsp_string108;
  private final static char []_jsp_string21;
  private final static char []_jsp_string88;
  private final static char []_jsp_string124;
  private final static char []_jsp_string27;
  private final static char []_jsp_string101;
  private final static char []_jsp_string55;
  private final static char []_jsp_string90;
  private final static char []_jsp_string114;
  private final static char []_jsp_string72;
  private final static char []_jsp_string44;
  private final static char []_jsp_string62;
  private final static char []_jsp_string58;
  private final static char []_jsp_string85;
  private final static char []_jsp_string109;
  private final static char []_jsp_string14;
  private final static char []_jsp_string48;
  private final static char []_jsp_string94;
  private final static char []_jsp_string26;
  private final static char []_jsp_string23;
  private final static char []_jsp_string18;
  private final static char []_jsp_string63;
  private final static char []_jsp_string95;
  private final static char []_jsp_string61;
  private final static char []_jsp_string40;
  private final static char []_jsp_string20;
  private final static char []_jsp_string65;
  private final static char []_jsp_string73;
  private final static char []_jsp_string66;
  private final static char []_jsp_string118;
  private final static char []_jsp_string11;
  private final static char []_jsp_string99;
  private final static char []_jsp_string57;
  private final static char []_jsp_string35;
  private final static char []_jsp_string8;
  private final static char []_jsp_string38;
  private final static char []_jsp_string19;
  private final static char []_jsp_string119;
  private final static char []_jsp_string39;
  private final static char []_jsp_string125;
  private final static char []_jsp_string115;
  private final static char []_jsp_string16;
  private final static char []_jsp_string123;
  private final static char []_jsp_string15;
  private final static char []_jsp_string106;
  private final static char []_jsp_string10;
  private final static char []_jsp_string6;
  private final static char []_jsp_string13;
  private final static char []_jsp_string4;
  private final static char []_jsp_string78;
  private final static char []_jsp_string2;
  private final static char []_jsp_string51;
  private final static char []_jsp_string36;
  private final static char []_jsp_string82;
  private final static char []_jsp_string70;
  private final static char []_jsp_string92;
  private final static char []_jsp_string121;
  private final static char []_jsp_string3;
  private final static char []_jsp_string33;
  private final static char []_jsp_string17;
  private final static char []_jsp_string96;
  private final static char []_jsp_string32;
  private final static char []_jsp_string105;
  private final static char []_jsp_string112;
  private final static char []_jsp_string68;
  private final static char []_jsp_string56;
  private final static char []_jsp_string104;
  private final static char []_jsp_string0;
  private final static char []_jsp_string46;
  private final static char []_jsp_string41;
  static {
    _jsp_string81 = "\r\n                <td height=\"10\" width=\"80\" bgcolor=\"#CCCCCC\" colspan=\"1\" align=\"center\"><b>".toCharArray();
    _jsp_string87 = "% bgcolor=\"".toCharArray();
    _jsp_string50 = "\r\n	<td width=\"84\" align=\"left\">".toCharArray();
    _jsp_string49 = "</td>\r\n		<td width=\"5\"> : </td>\r\n		<td>".toCharArray();
    _jsp_string28 = "?\"))\r\n								window.location.href = \"Questionnaires.jsp?finishall=1\";\r\n						</script>\r\n						".toCharArray();
    _jsp_string100 = "\r\n</td>\r\n".toCharArray();
    _jsp_string52 = "\r\n	</tr>\r\n	<tr>\r\n	<td></td>\r\n	<td></td>\r\n	<td></td>\r\n	</tr>\r\n	<tr><td width=\"157\">".toCharArray();
    _jsp_string64 = "	\r\n\r\n</table>\r\n\r\n<p></p>\r\n\r\n".toCharArray();
    _jsp_string7 = "\r\n<script language=\"javascript\">\r\n\r\n\r\n//Textarea Size Check\r\n//By: Chun Pong\r\n//Date: 10 Jun 2008\r\nfunction checkTextAreaSize(txtAreaField, iMaxLimit) {\r\n	if(txtAreaField.value.length > iMaxLimit) {\r\n		alert(\"Maximum characters exceeded. Maximum characters allowed: \" + iMaxLimit);\r\n		txtAreaField.value = txtAreaField.value.substring(0,iMaxLimit);\r\n	}\r\n}\r\n\r\n//Edited by Xuehai 25 May 2011. Removed 'void' to enable running on Chrome&Firefox\r\n//Begin.\r\nfunction disableButton(form)\r\n{\r\n	//Disable User to click again while system is processing\r\n	form.btnNext.disabled = true;\r\n	form.btnPrev.disabled = true;\r\n	form.btnFinish.disabled = true;\r\n	form.btnExit.disabled = true;\r\n	form.btnSave.disabled = true;\r\n}\r\n\r\nfunction enableButton(form)\r\n{\r\n	//Disable User to click again while system is processing\r\n	form.btnNext.disabled = false;\r\n	form.btnPrev.disabled = false;\r\n	form.btnFinish.disabled = false;\r\n	form.btnExit.disabled = false;\r\n	form.btnSave.disabled = false;\r\n}\r\n\r\nfunction goNext(form)\r\n{\r\n	//disableButton(form);\r\n	\r\n	form.action = \"Questionnaires.jsp?go=1\";\r\n	form.method = \"post\";\r\n	form.submit();\r\n}\r\n\r\nfunction goPrev(form)\r\n{\r\n	//disableButton(form);\r\n	\r\n	form.action = \"Questionnaires.jsp?go=2\";\r\n	form.method = \"post\";\r\n	form.submit();\r\n}\r\n//End. Removing 'void'\r\n\r\n/*\r\n * Change(s): added autosave\r\n * Reason(s): to prevent the data from being lost because of session time out\r\n * Updated By :Liu Taichen\r\n * Updated On :19/06/2012\r\n */\r\n\r\nfunction autoSave(){\r\n	alert(\"Your session is about to expire. Any Response up to this point of time will be saved by the system. \");\r\n	Questionnaire.action = \"Questionnaires.jsp?go=3&finish=1\";\r\n	Questionnaire.method = \"post\";\r\n	Questionnaire.submit();\r\n	parent.location.href = \"index.jsp\";\r\n	\r\n}\r\n\r\nfunction autoSaveMaintenance(){\r\n	alert(\"The system will be undergoing maintenance. Your inputs so far will be automatically saved by the system. We are sorry for any inconvenience caused. \");\r\n	Questionnaire.action = \"Questionnaires.jsp?go=3&finish=1\";\r\n	Questionnaire.method = \"post\";\r\n	Questionnaire.submit();\r\n	parent.location.href = \"index.jsp\";\r\n	\r\n}\r\n\r\nsetTimeout(\"autoSave()\",29.5*60*1000); \r\n\r\nfunction confirmBackToPrelim(form){\r\n	form.action = \"PrelimQAnswers.jsp?entry=1\";\r\n	form.method = \"post\";\r\n	form.submit();\r\n}\r\n\r\nfunction confirmFinish(form, type)\r\n{\r\n	//type 1=save, 2=finish\r\n	var clicked = false;\r\n	\r\n	if(type == 1) {\r\n		".toCharArray();
    _jsp_string69 = "			\r\n			<tr bgcolor=\"navy\" font style='color:white'>\r\n			<td bordercolor=\"#000080\">".toCharArray();
    _jsp_string24 = "\r\n					<script language=\"javascript\">\r\n							window.location.href = \"RatersToDoList.jsp\";\r\n					</script>\r\n					".toCharArray();
    _jsp_string71 = "</font></td>\r\n			<td align =\"right\" bordercolor=\"#000080\" bgcolor=\"navy\"><img src=\"images/RaterCompleted.bmp\"></td>\r\n\r\n".toCharArray();
    _jsp_string30 = "\r\n									window.location.href = \"Questionnaires.jsp?finishall=1\";\r\n							</script>\r\n							".toCharArray();
    _jsp_string116 = "\">\r\n				<input type=\"hidden\" id=\"commentID\" name=\"commentID\" value=\"".toCharArray();
    _jsp_string60 = "</td>\r\n	<td>:</td>\r\n	<td><table border=\"1\" font style='font-size:10.0pt;font-family:Arial' width=\"515\" height=\"8\">\r\n<tr>\r\n<td>\r\n<div style='width:504px; height:60px; z-index:1; overflow:auto'>\r\n<table border=\"1\" font style='font-size:10.0pt;font-family:Arial' width=\"487\" bgcolor=\"#FFFFCC\">\r\n".toCharArray();
    _jsp_string1 = "\r\n\r\n  \r\n\r\n<html>\r\n<head>\r\n".toCharArray();
    _jsp_string122 = "\r\n			</tr>\r\n		</table>\r\n		</div>\r\n		</td>\r\n	</tr>\r\n</table>\r\n\r\n\r\n</form>\r\n</body>\r\n<p></p>\r\n\r\n\r\n".toCharArray();
    _jsp_string29 = "\r\n							<script>\r\n							".toCharArray();
    _jsp_string59 = "\r\n	<tr>\r\n	<td>".toCharArray();
    _jsp_string25 = "\r\n							<script>\r\n								if(confirm(\"".toCharArray();
    _jsp_string107 = "\r\n\r\n<!------------------------------------------------------- ADD COMMENTS ------------------------------------------------------------------->\r\n\r\n\r\n\r\n<strong>\r\n</td></tr>\r\n\r\n\r\n".toCharArray();
    _jsp_string53 = "</td>\r\n		<td width=\"4\"> : </td>\r\n		<td>".toCharArray();
    _jsp_string47 = "</td>\r\n".toCharArray();
    _jsp_string22 = "\r\n					<script language=\"javascript\">\r\n							window.location.href = \"SurveyList_Process.jsp\";\r\n					</script>\r\n					".toCharArray();
    _jsp_string34 = "\r\n					<script language=\"javascript\">\r\n					alert(\"You have not completed the questionnaire. Your rating will be saved and you will need to return to provide ratings to the rest of the questions. Your participation is critical to the sucess of this survey.\");\r\n					</script>\r\n					<!----------------------------------------Incomplete Questionnaire------------------------------------------->\r\n					".toCharArray();
    _jsp_string5 = "\r\n<body>\r\n".toCharArray();
    _jsp_string103 = ":</font></strong>\r\n<br>\r\n".toCharArray();
    _jsp_string113 = "\r\n					<td width=\"35\">\r\n					<input type=button value=\"Back to Preliminary Questions\" name=\"btnBackToPrelim\" onClick=\"confirmBackToPrelim(this.form)\"></td>\r\n".toCharArray();
    _jsp_string74 = "		\r\n		\r\n		</tr>\r\n\r\n\r\n		\r\n".toCharArray();
    _jsp_string42 = "\r\n	\r\n	<tr><td width=\"80\">".toCharArray();
    _jsp_string111 = " \r\n		of ".toCharArray();
    _jsp_string117 = "\">\r\n\r\n\r\n".toCharArray();
    _jsp_string43 = "</td>\r\n		<td width=\"5\"> : </td>\r\n		<td width=\"250\">".toCharArray();
    _jsp_string86 = "	\r\n<td width = ".toCharArray();
    _jsp_string77 = "		\r\n        <table width=\"600\" border=\"0\"  font style='font-size:10.0pt;font-family:Arial'>\r\n            <tr align=\"center\" height=\"5\">\r\n            	<td width=\"60\">&nbsp;</td>\r\n".toCharArray();
    _jsp_string110 = "\r\n		<p align=\"left\" font style='color:white'> ".toCharArray();
    _jsp_string45 = "\r\n	<td width=\"80\" align=\"left\">".toCharArray();
    _jsp_string31 = "\r\n						<script>\r\n						".toCharArray();
    _jsp_string12 = "\r\n			<script language=\"javascript\">\r\n			window.location.href = \"AdditionalAnswers.jsp?entry=1\";\r\n			</script>\r\n			".toCharArray();
    _jsp_string97 = "\"></br>\r\n".toCharArray();
    _jsp_string120 = "\r\n		\r\n			<td><input type=button name=\"btnNext\" value=\"   >   \" disabled></td>\r\n".toCharArray();
    _jsp_string102 = "\r\n<p></p>\r\n<font class=\"fontstyle\">".toCharArray();
    _jsp_string80 = "</b></td>\r\n".toCharArray();
    _jsp_string89 = "							\r\n<input type=\"radio\" id=\"".toCharArray();
    _jsp_string9 = ".\"))\r\n			clicked = true;\r\n		else \r\n		{\r\n			return false;				\r\n		}\r\n	}\r\n	else if(type == 2)\r\n		clicked = true;\r\n	else {\r\n		if(confirm(\"".toCharArray();
    _jsp_string91 = "\" value=\"".toCharArray();
    _jsp_string75 = "\r\n\r\n		<tr>\r\n		\r\n".toCharArray();
    _jsp_string76 = "		\r\n			<td colspan=\"2\">\r\n".toCharArray();
    _jsp_string98 = "		\r\n".toCharArray();
    _jsp_string67 = "			\r\n			<tr bgcolor=\"navy\">\r\n			<td align =\"right\" bordercolor=\"#000080\" bgcolor=\"navy\" colspan = \"2\"><img src=\"images/RaterCompleted.bmp\"></td>\r\n			</tr>\r\n".toCharArray();
    _jsp_string54 = "</td>\r\n	</tr>\r\n<table>	\r\n<table width=\"610\" class=\"fontstyle\">	\r\n".toCharArray();
    _jsp_string37 = "<span class=\"style2\"></span></font></b></th>\r\n</table>\r\n<p></p>\r\n\r\n\r\n<table width=\"610\" class=\"fontstyle\">\r\n".toCharArray();
    _jsp_string79 = " align=\"center\"><b>".toCharArray();
    _jsp_string83 = "\r\n	<tr align=\"center\">\r\n		<td width =\"60\" bgcolor=\"99CCFF\"><a onMouseOver=\"showtip(this,event,'".toCharArray();
    _jsp_string84 = "')\" onMouseout=\"hidetip()\">".toCharArray();
    _jsp_string93 = "			\r\n<input type=\"radio\" id=\"".toCharArray();
    _jsp_string108 = "\r\n      \r\n	</table>\r\n<input name=\"totalCompleted\" type=\"hidden\" id=\"totalCompleted\" value=\"".toCharArray();
    _jsp_string21 = "			<script language=\"javascript\">\r\n				window.location.href = \"RatersToDoList.jsp\";\r\n			</script>\r\n".toCharArray();
    _jsp_string88 = "\">\r\n".toCharArray();
    _jsp_string124 = "\r\n		<td align=\"center\" height=\"5\" valign=\"top\"><font size=\"1\" color=\"navy\" face=\"Arial\">&nbsp;&nbsp;<a style=\"TEXT-DECORATION: none; color:navy;\" href=\"Login.jsp\">Home</a>&nbsp;| <a color=\"navy\" face=\"Arial\">&nbsp;<a style=\"TEXT-DECORATION: none; color:navy;\" href=\"mailto:3SixtyAdmin@pcc.com.sg?subject=Regarding:\">Contact \r\n		Us</a><a color=\"navy\" face=\"Arial\" href=\"termofuse.jsp\" target=\"_blank\"><span style=\"color: #000080; text-decoration: none\"> | Terms of Use </span></a>| <span style=\"color: #000080; text-decoration: none\"><a style=\"TEXT-DECORATION: none; color:navy;\" href=\"http://www.pcc.com.sg/\" target=\"_blank\">PCC Website</a></span></font></td></tr><tr>\r\n		<font size=\"2\" face=\"Arial\" style=\"font-size: 14pt\" color=\"#000080\">\r\n   \r\n		<td align=\"center\" height=\"5\" valign=\"top\">\r\n		<font size=\"1\" color=\"navy\" face=\"Arial\">&nbsp;Copyright &copy; ".toCharArray();
    _jsp_string27 = "\r\n						<script>\r\n							if(confirm(\"".toCharArray();
    _jsp_string101 = "				\r\n</table>\r\n<p></p>\r\n\r\n".toCharArray();
    _jsp_string55 = "\r\n	<tr><td width=\"157\">".toCharArray();
    _jsp_string90 = "\" name=\"".toCharArray();
    _jsp_string114 = "\r\n				<td width=\"35\">\r\n				<input type=button value=\"Save\" name=\"btnSave\" onClick=\"confirmFinish(this.form, 1)\"></td>\r\n				<td width=\"35\">\r\n				<input type=button value=\"Finish\" name=\"btnFinish\" onClick=\"return confirmFinish(this.form, 2)\"></td>\r\n			</tr>\r\n			</table>\r\n		</td>\r\n		\r\n		<td>\r\n		<div align=\"right\">\r\n		<table border=\"0\" width=\"42%\">\r\n			<tr>\r\n				<input type=\"hidden\" id=\"radiobuttonName\" name=\"radiobuttonName\" value=\"".toCharArray();
    _jsp_string72 = "			\r\n			<tr bgcolor=\"yellow\" font style='color:black'>\r\n			<td bordercolor=\"yellow\">".toCharArray();
    _jsp_string44 = "</td>\r\n		\r\n".toCharArray();
    _jsp_string62 = "</td>\r\n	</tr>\r\n\r\n".toCharArray();
    _jsp_string58 = "\r\n	<tr>\r\n	<td></td>\r\n	<td></td>\r\n	<td></td>\r\n	</tr>\r\n	<tr>\r\n	<td></td>\r\n	<td></td>\r\n	<td></td>\r\n	</tr>\r\n\r\n    \r\n".toCharArray();
    _jsp_string85 = "</td>				\r\n".toCharArray();
    _jsp_string109 = "\">\r\n<table border=\"1\" width=\"610\" class=\"fontstyle\"  bgcolor=\"navy\">\r\n	<tr>\r\n		<td width=\"179\">\r\n		".toCharArray();
    _jsp_string14 = "\r\nalert(\"".toCharArray();
    _jsp_string48 = "\r\n	</tr>\r\n	<tr>\r\n	<td></td>\r\n	<td></td>\r\n	<td></td>\r\n	</tr>\r\n	<tr><td width=\"80\">".toCharArray();
    _jsp_string94 = "\" checked></br>\r\n".toCharArray();
    _jsp_string26 = "?\"))\r\n									window.location.href = \"Questionnaires.jsp?finishall=1\";\r\n							</script>\r\n							".toCharArray();
    _jsp_string23 = "\r\n					<script language=\"javascript\">\r\n							window.location.href = \"RatersDataEntry.jsp\";\r\n					</script>\r\n					".toCharArray();
    _jsp_string18 = "\r\n<script language=\"javascript\">\r\n		window.location.href = \"RatersToDoList.jsp\";\r\n</script>\r\n".toCharArray();
    _jsp_string63 = "\r\n	</table></div></td>\r\n	\r\n	</tr></table></td></tr>\r\n\r\n".toCharArray();
    _jsp_string95 = "\" disabled></br>\r\n".toCharArray();
    _jsp_string61 = "\r\n		<tr onMouseOver = \"this.bgColor = '#99ccff'\"\r\n   		onMouseOut = \"this.bgColor = '#FFFFCC'\">\r\n		<td>".toCharArray();
    _jsp_string40 = "\r\n	<td colspan=\"6\" align=\"center\"><font color=\"red\"><b>Saved Successfully!</b></font></td>	\r\n".toCharArray();
    _jsp_string20 = "			<script language=\"javascript\">\r\n				window.location.href = \"RatersDataEntry.jsp\";\r\n			</script>\r\n".toCharArray();
    _jsp_string65 = "	\r\n  <table width=\"600\" class=\"fontstyle\" border=\"0\">\r\n".toCharArray();
    _jsp_string73 = "</font></td>\r\n			<td align =\"right\" bordercolor=\"yellow\"><img src=\"images/RaterIncomplete.bmp\"></td>\r\n\r\n".toCharArray();
    _jsp_string66 = "\r\n  <table width=\"600\" class=\"fontstyle\" border=\"3\" bordercolor=\"#99ccff\" cellspacing=\"0\">\r\n\r\n".toCharArray();
    _jsp_string118 = "	  \r\n			<td width=\"35\"><input type=button name=\"btnPrev\" value=\"   <   \" disabled></td>\r\n\r\n".toCharArray();
    _jsp_string11 = " \r\n		<script>\r\n			parent.location.href = \"index.jsp\";\r\n		</script>\r\n".toCharArray();
    _jsp_string99 = "	\r\n".toCharArray();
    _jsp_string57 = "</textarea></td>\r\n	</tr>\r\n".toCharArray();
    _jsp_string35 = "\r\n						<script language=\"javascript\">\r\n								window.location.href = \"Questionnaire.jsp\";\r\n						</script>\r\n						".toCharArray();
    _jsp_string8 = "\r\n		if(confirm(\"".toCharArray();
    _jsp_string38 = "\r\n	<tr>\r\n".toCharArray();
    _jsp_string19 = "			<script language=\"javascript\">\r\n				window.location.href = \"SurveyList_Process.jsp\";\r\n			</script>\r\n".toCharArray();
    _jsp_string119 = "\r\n			<td width=\"35\"><input type=\"button\" name=\"btnPrev\" value=\"   <   \" onClick=\"goPrev(this.form)\">\r\n\r\n".toCharArray();
    _jsp_string39 = "\r\n	<td colspan=\"3\" align=\"center\"><font color=\"red\"><b>Saved Successfully!</b></font></td>\r\n	\r\n".toCharArray();
    _jsp_string125 = " Pacific Century Consulting Pte Ltd. All Rights Reserved.\r\n		</font>\r\n		</td>\r\n		\r\n	</tr>\r\n		\r\n</table>\r\n</html>".toCharArray();
    _jsp_string115 = "\">\r\n				<input type=\"hidden\" id=\"radiobuttonID\" name=\"radiobuttonID\" value=\"".toCharArray();
    _jsp_string16 = "\r\n<script language=\"javascript\">\r\n		window.location.href = \"SurveyList_Process.jsp\";\r\n</script>\r\n".toCharArray();
    _jsp_string123 = "\r\n\r\n<table border=\"0\" width=\"610\" height=\"26\" id=\"table1\">\r\n\r\n	<tr>\r\n		<font size=\"2\" face=\"Arial\" style=\"font-size: 14pt\" color=\"#000080\"/>\r\n		".toCharArray();
    _jsp_string15 = "\");\r\n</script>\r\n".toCharArray();
    _jsp_string106 = "</textarea>\r\n".toCharArray();
    _jsp_string10 = ".\"))\r\n			clicked = true;\r\n		else \r\n		{\r\n			return false;				\r\n		}				\r\n	}\r\n					\r\n	if(clicked == true) {\r\n		form.action = \"Questionnaires.jsp?go=3&finish=\" + type;\r\n		form.method = \"post\";\r\n		form.submit();\r\n	}\r\n	\r\n	return true;\r\n}\r\n\r\n<!--if (!document.layers&&!document.all&&!document.getElementById)\r\n	//event=\"test\"-->\r\n\r\nfunction showtip(current,e,text){\r\n	if (document.all||document.getElementById){\r\n		thetitle=text.split('<br>')\r\n	\r\n		if (thetitle.length>1){\r\n			thetitles=''\r\n\r\n			for (i=0;i<thetitle.length;i++)\r\n				thetitles+=thetitle[i]\r\n				current.title=thetitles\r\n		} else\r\n			current.title=text\r\n	\r\n	} else if (document.layers){\r\n		document.tooltip.document.write('<layer bgColor=\"white\" style=\"border:1px solid black;font-size:12px;\">'+text+'</layer>')\r\n		document.tooltip.document.close()\r\n		document.tooltip.left=e.pageX+5\r\n		document.tooltip.top=e.pageY+5\r\n		document.tooltip.visibility=\"show\"\r\n	}\r\n}\r\n\r\nfunction hidetip(){\r\n	if (document.layers)\r\n		document.tooltip.visibility=\"hidden\"\r\n}\r\n\r\n//Add by James 4-June 2008\r\nfunction displayExpiredWarning(){\r\n	alert('Warning, your session is about to expire');\r\n	if (window.opener && !window.opener.closed){\r\n	    window.opener.location.href=\"Top_Login.jsp?logoff=1\";\r\n		self.close();\r\n	    }else{\r\n		window.location.href=\"Top_Login.jsp?logoff=1\";\r\n	}\r\n	\r\n}//End of displayExpiredWarning\r\n\r\n//Add by James 4-June 2008\r\nfunction displayWarning(){\r\nvar answer = confirm('This session will expire in two minutes. Would you like to extend this session?')\r\n	if (answer){\r\n		document.Questionnaire.action = \"Questionnaires.jsp?go=3&finish=1\";\r\n		document.Questionnaire.method = \"post\";\r\n		document.Questionnaire.submit();	\r\n	}\r\n	else{\r\n		setTimeout(\"displayExpiredWarning()\",2*60*1000);\r\n	}\r\n}//End of displayWarning\r\n\r\n//let's call this function after 29 minutes of loading this page to the browser\r\n//setTimeout(\"displayWarning()\",27*60*1000); \r\n\r\nsetTimeout(\"displayWarning()\",27*60*1000); \r\n\r\n</script>\r\n\r\n".toCharArray();
    _jsp_string6 = "\r\n<body onload=\"autoSaveMaintenance()\">\r\n".toCharArray();
    _jsp_string13 = "\r\n<script language=\"javascript\">\r\n".toCharArray();
    _jsp_string4 = "\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<link REL=\"stylesheet\" TYPE=\"text/css\" href=\"Settings\\Settings.css\">\r\n\r\n<title>Questionnaire</title>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html\">\r\n<style type=\"text/css\">\r\n<!--\r\n.style1 {\r\n	color: #CCFFCC;\r\n	font-weight: bold;\r\n}\r\n.style2 {font-size: 14pt}\r\nbody {\r\n	background-color: #FFFFFF;\r\n}\r\n.style3 {color: #FFCCCC}\r\n-->\r\n</style>\r\n\r\n</head>\r\n\r\n".toCharArray();
    _jsp_string78 = "\r\n                <td height=\"10\" bgcolor=\"#CCCCCC\"  colspan=".toCharArray();
    _jsp_string2 = "\r\n".toCharArray();
    _jsp_string51 = "</td>\r\n	<td width=\"5\"> : </td>\r\n	<td>".toCharArray();
    _jsp_string36 = "\r\n\r\n<form name = \"Questionnaire\" method=\"post\">\r\n\r\n<table width=\"610\" border=\"1\" font style='font-size:12.0pt;font-family:Arial'>\r\n<th align=\"center\" bgcolor=\"navy\"><b><font style='color:white'>".toCharArray();
    _jsp_string82 = "\r\n</tr>\r\n\r\n".toCharArray();
    _jsp_string70 = ". ".toCharArray();
    _jsp_string92 = "\" disabled checked></br>\r\n".toCharArray();
    _jsp_string121 = "\r\n				\r\n			<td><input type=button name=\"btnNext\" value=\"   >   \" onClick=\"goNext(this.form)\"></td>\r\n".toCharArray();
    _jsp_string3 = " \r\n".toCharArray();
    _jsp_string33 = ".\"))\r\n								window.location.href = \"Questionnaires.jsp?finishall=1\";\r\n						</script>\r\n						".toCharArray();
    _jsp_string17 = "\r\n<script language=\"javascript\">\r\n		window.location.href = \"RatersDataEntry.jsp\";\r\n</script>\r\n".toCharArray();
    _jsp_string96 = "			\r\n<input type=\"radio\" align = \"center\" id=\"".toCharArray();
    _jsp_string32 = "\r\n							if(confirm(\"".toCharArray();
    _jsp_string105 = " cols=\"96\" rows=\"5\" style='width:100%;height:80px;' style=\"font-size: 10pt; font-family: Arial\" onKeyUp=\"checkTextAreaSize(this,4000);\">".toCharArray();
    _jsp_string112 = "</font></td>\r\n		<td align=\"center\">\r\n			<table border=\"0\" width=\"60%\">\r\n			<tr>\r\n".toCharArray();
    _jsp_string68 = "			\r\n				<tr bgcolor=\"yellow\" font style='color:black'>\r\n				<td align =\"right\" bordercolor=\"yellow\"  colspan = \"2\"><img src=\"images/RaterIncomplete.bmp\"></td>\r\n\r\n	".toCharArray();
    _jsp_string56 = "</td>\r\n		<td width=\"4\"> : </td>\r\n		<td><textarea name=\"compStatement\" cols=\"82\" rows=\"3\" style='width:100%;height:80px;' readonly>".toCharArray();
    _jsp_string104 = "\r\n\r\n					<textarea name=".toCharArray();
    _jsp_string0 = "\r\n\r\n".toCharArray();
    _jsp_string46 = "</td>\r\n	<td width=\"5\"> : </td>\r\n	<td width=\"250\">".toCharArray();
    _jsp_string41 = "\r\n	</tr>\r\n".toCharArray();
  }
}
