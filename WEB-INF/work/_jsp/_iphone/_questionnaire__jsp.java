/*
 * JSP generated by Resin Professional 4.0.36 (built Fri, 26 Apr 2013 03:33:09 PDT)
 */

package _jsp._iphone;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import java.util.*;

public class _questionnaire__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html");
    response.setCharacterEncoding("utf-8");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    CP_Classes.RatersDataEntry RDE;
    synchronized (pageContext.getSession()) {
      RDE = (CP_Classes.RatersDataEntry) pageContext.getSession().getAttribute("RDE");
      if (RDE == null) {
        RDE = new CP_Classes.RatersDataEntry();
        pageContext.getSession().setAttribute("RDE", RDE);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    CP_Classes.Questionnaire Questionnaire;
    synchronized (pageContext.getSession()) {
      Questionnaire = (CP_Classes.Questionnaire) pageContext.getSession().getAttribute("Questionnaire");
      if (Questionnaire == null) {
        Questionnaire = new CP_Classes.Questionnaire();
        pageContext.getSession().setAttribute("Questionnaire", Questionnaire);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    CP_Classes.Calculation Calculation;
    synchronized (pageContext.getSession()) {
      Calculation = (CP_Classes.Calculation) pageContext.getSession().getAttribute("Calculation");
      if (Calculation == null) {
        Calculation = new CP_Classes.Calculation();
        pageContext.getSession().setAttribute("Calculation", Calculation);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    CP_Classes.Login logchk;
    synchronized (pageContext.getSession()) {
      logchk = (CP_Classes.Login) pageContext.getSession().getAttribute("logchk");
      if (logchk == null) {
        logchk = new CP_Classes.Login();
        pageContext.getSession().setAttribute("logchk", logchk);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.AdditionalQuestionController AddQController;
    synchronized (pageContext.getSession()) {
      AddQController = (CP_Classes.AdditionalQuestionController) pageContext.getSession().getAttribute("AddQController");
      if (AddQController == null) {
        AddQController = new CP_Classes.AdditionalQuestionController();
        pageContext.getSession().setAttribute("AddQController", AddQController);
      }
    }
    out.write(_jsp_string3, 0, _jsp_string3.length);
    
	String username=(String)session.getAttribute("username");
	if(!logchk.isUsable(username)){

    out.write(_jsp_string4, 0, _jsp_string4.length);
    }else{

	int surveyID = RDE.getSurveyID();
	int targetID = RDE.getTargetID();
	int raterID = RDE.getRaterID();
	int orgID = logchk.getOrg();	
	
	int assignmentID = Questionnaire.AssignmentID(surveyID, targetID, raterID);
	Questionnaire.setAssignmentID(assignmentID);
	
	String timeFrame = Questionnaire.TimeFrame(surveyID);
	Questionnaire.setTimeFrame(timeFrame);
	
	int TotalCurrComp = 0;
	Questionnaire.setTotalCurrComp(TotalCurrComp);
	
	
	String name = Questionnaire.UserName(orgID, targetID);	
	String jobPost = RDE.getJobPosition(surveyID);

	Questionnaire.setName(name);
	Questionnaire.setJobPost(jobPost);
	
	String futureJob = Questionnaire.FutureJob(surveyID);
	Questionnaire.setFutureJob(futureJob);
		
	int surveyLevel = Calculation.LevelOfSurvey(surveyID);
	Questionnaire.setSurveyLevel(surveyLevel);
			
	int totalComp = Questionnaire.TotalList(surveyID,0);		// total = total Competency = total questions
	Questionnaire.setTotalComp(totalComp);
	

	Vector vSurveyRating = Questionnaire.getSurveyRating(surveyID);
	int totalRatingTask = Questionnaire.getTotalSurveyRating(surveyID);		// total rating task for the specific survey
	int ratingTaskID[] = new int[totalRatingTask];
	int ratingScaleID[] = new int[totalRatingTask];
	int id = 0;
	
	for(int i=0; i<vSurveyRating.size(); i++) {
		int [] ids = new int [2];
		ids = (int[])vSurveyRating.elementAt(i);
	
		ratingTaskID[id] = ids[0];		// store all the ratings ID in an array
		ratingScaleID[id] = ids[1];
		id++;
	}
	
	Questionnaire.setRT(ratingTaskID);
	Questionnaire.setRS(ratingScaleID);
	Questionnaire.setStartID(1);
	if(!AddQController.getQuestionnaireHeader(surveyID).equals(""))
	{
	
    out.write(_jsp_string5, 0, _jsp_string5.length);
    pageContext.forward("QuestionnaireInstructions.jsp");if (true) return;
    out.write(_jsp_string6, 0, _jsp_string6.length);
     
	}
	else
	{
		
    out.write(_jsp_string7, 0, _jsp_string7.length);
    pageContext.forward("Questionnaires.jsp");if (true) return;
    out.write(_jsp_string7, 0, _jsp_string7.length);
    
	}
}
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != -7791540776389363938L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("iphone/Questionnaire.jsp"), 1995196161059972788L, false);
    _caucho_depends.add(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string5;
  private final static char []_jsp_string0;
  private final static char []_jsp_string4;
  private final static char []_jsp_string6;
  private final static char []_jsp_string7;
  private final static char []_jsp_string1;
  private final static char []_jsp_string2;
  private final static char []_jsp_string3;
  static {
    _jsp_string5 = "\r\n	".toCharArray();
    _jsp_string0 = "\r\n\r\n  \r\n".toCharArray();
    _jsp_string4 = "\r\n<script>\r\n	window.location.href = \"index.jsp\";\r\n</script>\r\n".toCharArray();
    _jsp_string6 = "\r\n\r\n	".toCharArray();
    _jsp_string7 = "\r\n		".toCharArray();
    _jsp_string1 = "\r\n".toCharArray();
    _jsp_string2 = "   \r\n".toCharArray();
    _jsp_string3 = "\r\n\r\n".toCharArray();
  }
}
