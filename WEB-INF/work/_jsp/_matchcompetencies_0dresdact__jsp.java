/*
 * JSP generated by Resin Professional 4.0.36 (built Fri, 26 Apr 2013 03:33:09 PDT)
 */

package _jsp;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import java.io.*;
import java.text.DateFormat;
import java.util.*;
import java.util.Date;
import java.text.*;
import java.lang.String;
import CP_Classes.vo.votblDRA;
import CP_Classes.vo.votblDRARES;

public class _matchcompetencies_0dresdact__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html");
    response.setCharacterEncoding("utf-8");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    CP_Classes.Competency Comp;
    synchronized (pageContext.getSession()) {
      Comp = (CP_Classes.Competency) pageContext.getSession().getAttribute("Comp");
      if (Comp == null) {
        Comp = new CP_Classes.Competency();
        pageContext.getSession().setAttribute("Comp", Comp);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    CP_Classes.Login logchk;
    synchronized (pageContext.getSession()) {
      logchk = (CP_Classes.Login) pageContext.getSession().getAttribute("logchk");
      if (logchk == null) {
        logchk = new CP_Classes.Login();
        pageContext.getSession().setAttribute("logchk", logchk);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    CP_Classes.Translate trans;
    synchronized (pageContext.getSession()) {
      trans = (CP_Classes.Translate) pageContext.getSession().getAttribute("trans");
      if (trans == null) {
        trans = new CP_Classes.Translate();
        pageContext.getSession().setAttribute("trans", trans);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    CP_Classes.DevelopmentActivities DRAQuery;
    synchronized (pageContext.getSession()) {
      DRAQuery = (CP_Classes.DevelopmentActivities) pageContext.getSession().getAttribute("DRAQuery");
      if (DRAQuery == null) {
        DRAQuery = new CP_Classes.DevelopmentActivities();
        pageContext.getSession().setAttribute("DRAQuery", DRAQuery);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    CP_Classes.DevelopmentActivities DRA;
    synchronized (pageContext.getSession()) {
      DRA = (CP_Classes.DevelopmentActivities) pageContext.getSession().getAttribute("DRA");
      if (DRA == null) {
        DRA = new CP_Classes.DevelopmentActivities();
        pageContext.getSession().setAttribute("DRA", DRA);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    CP_Classes.DevelopmentResources DRAResQuery;
    synchronized (pageContext.getSession()) {
      DRAResQuery = (CP_Classes.DevelopmentResources) pageContext.getSession().getAttribute("DRAResQuery");
      if (DRAResQuery == null) {
        DRAResQuery = new CP_Classes.DevelopmentResources();
        pageContext.getSession().setAttribute("DRAResQuery", DRAResQuery);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    CP_Classes.DevelopmentResources DRARes;
    synchronized (pageContext.getSession()) {
      DRARes = (CP_Classes.DevelopmentResources) pageContext.getSession().getAttribute("DRARes");
      if (DRARes == null) {
        DRARes = new CP_Classes.DevelopmentResources();
        pageContext.getSession().setAttribute("DRARes", DRARes);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    CP_Classes.Database Database;
    synchronized (pageContext.getSession()) {
      Database = (CP_Classes.Database) pageContext.getSession().getAttribute("Database");
      if (Database == null) {
        Database = new CP_Classes.Database();
        pageContext.getSession().setAttribute("Database", Database);
      }
    }
    out.write(_jsp_string1, 0, _jsp_string1.length);
    CP_Classes.Organization Org;
    synchronized (pageContext.getSession()) {
      Org = (CP_Classes.Organization) pageContext.getSession().getAttribute("Org");
      if (Org == null) {
        Org = new CP_Classes.Organization();
        pageContext.getSession().setAttribute("Org", Org);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    // by lydia Date 05/09/2008 Fix jsp file to support Thai language 
    out.write(_jsp_string3, 0, _jsp_string3.length);
    	

	int newPKOrg = 0;
	int newComp = 0;
	int PKOrg = 0;
	int comp = 0;
	int res = -1;
	
	if(request.getParameter("org") != null)
	{ 
		newPKOrg = new Integer(request.getParameter("org")).intValue();
		newComp = new Integer(request.getParameter("comp")).intValue();
	
		PKOrg = new Integer(request.getParameter("org2")).intValue();
		
		comp = new Integer(request.getParameter("comp2")).intValue();
		DRA.setFKCom(comp);
		DRARes.setFKComp(comp);
		
		res = new Integer(request.getParameter("res")).intValue();
	}

	int fkComp = DRA.getFKCom();
	int orgID = PKOrg;	
	int compID = logchk.getCompany();
	int pkUser = logchk.getPKUser();
	int userType = logchk.getUserType();	// 1= super admin
	
	String resName [] = new String [5];

	resName[0] = trans.tslt("All");		
	resName[1] = trans.tslt("Books");
	resName[2] = trans.tslt("Web Resources");
	resName[3] = trans.tslt("Training Courses");
	resName[4] = trans.tslt("AV Resources");
	
	//If user click on save button
	if(request.getParameter("save") != null)
	{
		String [] chkSelectDRA = null;
		String [] chkSelectDRARes = null;
		
		//Checkbox Development Activities
		if (request.getParameterValues("chkComp")!=null) chkSelectDRA = request.getParameterValues("chkComp");
		
		//Checkbox Development Resources
		if (request.getParameterValues("chkRes")!=null)	chkSelectDRARes = request.getParameterValues("chkRes");
		
		if(chkSelectDRA != null){
			int count = 0;
			for(String s: chkSelectDRA){
				votblDRA voDRA = (votblDRA) DRA.getDRA(Integer.parseInt(s));
				
				String DRAStatement = Database.SQLFixer(voDRA.getDRAStatement());	
				
				int exist = DRA.CheckDRAExist(newComp, DRAStatement, compID, newPKOrg);
				if(exist == 0) {
					try {
						String isSysGen = "1";
						if (userType != 1) isSysGen = "0";
						
						boolean save = DRA.addRecord(newComp, DRAStatement, isSysGen, compID, newPKOrg, pkUser, userType);
						//DRA.setFKCom(fkComp);
						if(save) {
							count++;

    out.write(_jsp_string4, 0, _jsp_string4.length);
    
						}
					} catch(SQLException SE) {

    out.write(_jsp_string5, 0, _jsp_string5.length);
    out.print((SE.toString()));
    out.write(_jsp_string6, 0, _jsp_string6.length);
    out.print((newPKOrg));
    out.write(_jsp_string7, 0, _jsp_string7.length);
    out.print((newComp));
    out.write(_jsp_string8, 0, _jsp_string8.length);
    out.print((PKOrg));
    out.write(_jsp_string9, 0, _jsp_string9.length);
    out.print((comp));
    out.write(_jsp_string10, 0, _jsp_string10.length);
    
					}
				} //End if else statement
			} //End loop, for each string in checkbox		


    out.write(_jsp_string11, 0, _jsp_string11.length);
    out.print((count));
    out.write(_jsp_string12, 0, _jsp_string12.length);
    
		} //End if array is not null
		
		if(chkSelectDRARes != null){
			int count = 0;
			for(String s: chkSelectDRARes){
				votblDRARES voDRARES = (votblDRARES)DRARes.getRecord(Integer.parseInt(s));
				String Resource = Database.SQLFixer(voDRARES.getResource());	
				int resType = voDRARES.getResType();
				
				int exist = DRARes.CheckDRAResExist(newComp, Resource, resType, compID, newPKOrg);
				if(exist == 0) {
					try {
					
						String isSysGen = "1";
						if (userType != 1) isSysGen = "0";

						boolean save = DRARes.addRecord(newComp, Resource, resType, isSysGen, compID, newPKOrg, pkUser, userType);
						
						if(save) {
							count++;			
						}
					} catch(SQLException SE) {

    out.write(_jsp_string5, 0, _jsp_string5.length);
    out.print((SE.toString()));
    out.write(_jsp_string6, 0, _jsp_string6.length);
    out.print((newPKOrg));
    out.write(_jsp_string7, 0, _jsp_string7.length);
    out.print((newComp));
    out.write(_jsp_string8, 0, _jsp_string8.length);
    out.print((PKOrg));
    out.write(_jsp_string9, 0, _jsp_string9.length);
    out.print((comp));
    out.write(_jsp_string13, 0, _jsp_string13.length);
    
					}
				} //End if doesn't exists 
			} //End for loop

    out.write(_jsp_string11, 0, _jsp_string11.length);
    out.print((count));
    out.write(_jsp_string14, 0, _jsp_string14.length);
    out.print((newPKOrg));
    out.write(_jsp_string7, 0, _jsp_string7.length);
    out.print((newComp));
    out.write(_jsp_string8, 0, _jsp_string8.length);
    out.print((PKOrg));
    out.write(_jsp_string9, 0, _jsp_string9.length);
    out.print((comp));
    out.write(_jsp_string13, 0, _jsp_string13.length);
    
		} //End if array not null
	
	} //End if user click save
	

	Vector DRAResult = DRAQuery.FilterRecord(fkComp, compID, orgID);
	Vector DRAResResult = DRAResQuery.FilterRecordByType(fkComp, res, compID, orgID);
	

    out.write(_jsp_string15, 0, _jsp_string15.length);
    out.print((newPKOrg));
    out.write(_jsp_string16, 0, _jsp_string16.length);
    out.print((newComp));
    out.write(_jsp_string17, 0, _jsp_string17.length);
    out.print((PKOrg));
    out.write(_jsp_string18, 0, _jsp_string18.length);
    out.print((comp));
    out.write(_jsp_string19, 0, _jsp_string19.length);
    out.print((Org.getOrganisationName(PKOrg)));
    out.write(_jsp_string20, 0, _jsp_string20.length);
    out.print((Comp.CompetencyName(comp)));
    out.write(_jsp_string21, 0, _jsp_string21.length);
    out.print(( trans.tslt("Development Activity") ));
    out.write(_jsp_string22, 0, _jsp_string22.length);
    out.print(( trans.tslt("Origin") ));
    out.write(_jsp_string23, 0, _jsp_string23.length);
     	
	int DRAID = 0;
	String DRAName = "";
	String origin = "";
	for(int i=0; i<DRAResult.size(); i++){
		votblDRA voDRA = (votblDRA)DRAResult.elementAt(i);
		DRAID = voDRA.getDRAID();		
		DRAName =  voDRA.getDRAStatement();
		origin = voDRA.getDescription();

    out.write(_jsp_string24, 0, _jsp_string24.length);
    out.print((DRAID));
    out.write(_jsp_string25, 0, _jsp_string25.length);
     out.print(DRAName);
    out.write(_jsp_string26, 0, _jsp_string26.length);
     out.print(origin);
    out.write(_jsp_string27, 0, _jsp_string27.length);
     	
	} 

    out.write(_jsp_string28, 0, _jsp_string28.length);
    out.print(( trans.tslt("Resource Type") ));
    out.write(_jsp_string29, 0, _jsp_string29.length);
    			
            for(int i=0; i<resName.length; i++) {

    out.write(_jsp_string30, 0, _jsp_string30.length);
     				if(res != -1 && res == i) {		  	
    out.write(_jsp_string31, 0, _jsp_string31.length);
    out.print((i));
    out.write(_jsp_string32, 0, _jsp_string32.length);
     					res = -1;
            	} else {

    out.write(_jsp_string33, 0, _jsp_string33.length);
    out.print((i));
    out.write(_jsp_string34, 0, _jsp_string34.length);
     				}

    out.write(_jsp_string35, 0, _jsp_string35.length);
    out.print((resName[i]));
    out.write(_jsp_string36, 0, _jsp_string36.length);
    			} 

			//get the Resource value again
			if(request.getParameter("res") != null) {	 
				res = new Integer(request.getParameter("res")).intValue();
			}	

    out.write(_jsp_string37, 0, _jsp_string37.length);
    out.print((trans.tslt("Development Resource")));
    out.write(_jsp_string23, 0, _jsp_string23.length);
    			if(res == 0) {		
    out.write(_jsp_string38, 0, _jsp_string38.length);
    out.print(( trans.tslt("Resource Type") ));
    out.write(_jsp_string39, 0, _jsp_string39.length);
    			}					
    out.write(_jsp_string40, 0, _jsp_string40.length);
    out.print((trans.tslt("Origin")));
    out.write(_jsp_string23, 0, _jsp_string23.length);
     	
	int ResID = 0;
	int resType = 0;
	String DRAResName = "";
	for(int i=0; i<DRAResResult.size(); i++){
		votblDRARES voDRARES = (votblDRARES)DRAResResult.elementAt(i);
		ResID = voDRARES.getResID();		
		DRAResName =  voDRARES.getResource();
		origin =  voDRARES.getDescription();
		resType = voDRARES.getResType();

    out.write(_jsp_string41, 0, _jsp_string41.length);
    out.print((ResID));
    out.write(_jsp_string42, 0, _jsp_string42.length);
     out.print(DRAResName);
    out.write(_jsp_string43, 0, _jsp_string43.length);
    				if(res == 0) {
					if(resType == 1) {				
    out.write(_jsp_string44, 0, _jsp_string44.length);
    out.print((resName[1]));
    out.write(_jsp_string43, 0, _jsp_string43.length);
    					} else if (resType == 2) {		
    out.write(_jsp_string44, 0, _jsp_string44.length);
    out.print((resName[2]));
    out.write(_jsp_string43, 0, _jsp_string43.length);
    					} else if (resType == 3) {		
    out.write(_jsp_string44, 0, _jsp_string44.length);
    out.print((resName[3]));
    out.write(_jsp_string43, 0, _jsp_string43.length);
    					} else if (resType == 4) {		
    out.write(_jsp_string44, 0, _jsp_string44.length);
    out.print((resName[4]));
    out.write(_jsp_string43, 0, _jsp_string43.length);
    					}
				}								
    out.write(_jsp_string45, 0, _jsp_string45.length);
     out.print(origin);
    out.write(_jsp_string27, 0, _jsp_string27.length);
     
	} 

    out.write(_jsp_string46, 0, _jsp_string46.length);
    out.print((trans.tslt("Save")));
    out.write(_jsp_string47, 0, _jsp_string47.length);
    out.print((trans.tslt("Close")));
    out.write(_jsp_string48, 0, _jsp_string48.length);
    
	
	if(request.getParameter("org") != null){ 
	//	logchk.setOrg(newPKOrg);
		DRA.setFKCom(0);
		DRARes.setFKComp(0);
		DRARes.setResType(0);
	}
	

    out.write(_jsp_string49, 0, _jsp_string49.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != -7791540776389363938L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("MatchCompetencies_DResDAct.jsp"), -2364433872093145570L, false);
    _caucho_depends.add(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string31;
  private final static char []_jsp_string8;
  private final static char []_jsp_string17;
  private final static char []_jsp_string0;
  private final static char []_jsp_string49;
  private final static char []_jsp_string32;
  private final static char []_jsp_string47;
  private final static char []_jsp_string4;
  private final static char []_jsp_string14;
  private final static char []_jsp_string16;
  private final static char []_jsp_string22;
  private final static char []_jsp_string30;
  private final static char []_jsp_string33;
  private final static char []_jsp_string41;
  private final static char []_jsp_string48;
  private final static char []_jsp_string43;
  private final static char []_jsp_string9;
  private final static char []_jsp_string10;
  private final static char []_jsp_string26;
  private final static char []_jsp_string6;
  private final static char []_jsp_string39;
  private final static char []_jsp_string37;
  private final static char []_jsp_string18;
  private final static char []_jsp_string40;
  private final static char []_jsp_string5;
  private final static char []_jsp_string35;
  private final static char []_jsp_string15;
  private final static char []_jsp_string46;
  private final static char []_jsp_string3;
  private final static char []_jsp_string34;
  private final static char []_jsp_string36;
  private final static char []_jsp_string44;
  private final static char []_jsp_string38;
  private final static char []_jsp_string25;
  private final static char []_jsp_string23;
  private final static char []_jsp_string11;
  private final static char []_jsp_string20;
  private final static char []_jsp_string7;
  private final static char []_jsp_string21;
  private final static char []_jsp_string19;
  private final static char []_jsp_string27;
  private final static char []_jsp_string29;
  private final static char []_jsp_string1;
  private final static char []_jsp_string45;
  private final static char []_jsp_string12;
  private final static char []_jsp_string42;
  private final static char []_jsp_string28;
  private final static char []_jsp_string13;
  private final static char []_jsp_string24;
  private final static char []_jsp_string2;
  static {
    _jsp_string31 = "\r\n                	<input name=\"rbtnRes\" type=\"radio\" value=".toCharArray();
    _jsp_string8 = " + '&org2=' + ".toCharArray();
    _jsp_string17 = "\" name=\"newComp\">\r\n<input type=\"hidden\" value=\"".toCharArray();
    _jsp_string0 = "   \r\n\r\n".toCharArray();
    _jsp_string49 = "\r\n</form>\r\n\r\n</body>\r\n</html>".toCharArray();
    _jsp_string32 = " checked onClick=\"changeResourceType(this.form, this.form.newPKOrg, this.form.newComp, this.form.PKOrg, this.form.comp, rbtnRes)\">\r\n".toCharArray();
    _jsp_string47 = "\" onClick=\"confirmSave(this.form, this.form.chkComp, this.form.chkRes, this.form.newPKOrg, this.form.newComp, this.form.PKOrg, this.form.comp, this.form.rbtnRes)\" ></td>\r\n	<td><input type=\"button\" value=\"".toCharArray();
    _jsp_string4 = "			\r\n\r\n".toCharArray();
    _jsp_string14 = " Development Resources successfully added.\");\r\n			window.close();\r\n			opener.location.href = 'MatchCompetencies.jsp?org=' + ".toCharArray();
    _jsp_string16 = "\" name=\"newPKOrg\">\r\n<input type=\"hidden\" value=\"".toCharArray();
    _jsp_string22 = "</u></font></b></a></th>\r\n			<th bgcolor=\"navy\" class=\"sorted-asc\"><a href=\"#\"><b><font style='font-family:Arial;color:white' size=\"2\"><u>".toCharArray();
    _jsp_string30 = "\r\n            <td><font face = \"Arial\"; size = \"2\">\r\n".toCharArray();
    _jsp_string33 = "	\r\n                	<input name=\"rbtnRes\" type=\"radio\" value=".toCharArray();
    _jsp_string41 = "\r\n   			<tr onMouseOver = \"this.bgColor = '#99ccff'\" onMouseOut = \"this.bgColor = '#FFFFcc'\">\r\n       			<td width=\"3%\"><font face=\"Arial\" style=\"font-size: 11.0pt; font-family: Arial\">\r\n	   				<input type=\"checkbox\" id=\"chkRes\" name=\"chkRes\" value=".toCharArray();
    _jsp_string48 = "\" name=\"btnClose\" onClick=\"closeWindow()\"></td>\r\n</tr>\r\n</table>\r\n\r\n&nbsp;&nbsp;&nbsp;\r\n".toCharArray();
    _jsp_string43 = "</font></td>\r\n".toCharArray();
    _jsp_string9 = " + '&comp2=' + ".toCharArray();
    _jsp_string10 = "\r\n</script>				\r\n".toCharArray();
    _jsp_string26 = "</font></td>\r\n	   			<td width=\"10%\"><font style='font-family:Arial' size=\"2\">".toCharArray();
    _jsp_string6 = "\");\r\n						window.close();\r\n						opener.location.href = 'MatchCompetencies.jsp?org=' + ".toCharArray();
    _jsp_string39 = "</u></font></b></a></th>	\r\n".toCharArray();
    _jsp_string37 = "\r\n		</tr>\r\n    	</table>\r\n    </td>\r\n</tr>\r\n<tr>\r\n	<td>\r\n    	<div style='width:900px; height:250px; z-index:1; overflow:auto;'>  \r\n		<table id=\"tblDRARes\" name=\"tblDRARes\" border=\"1\" bgcolor=\"#FFFFCC\" bordercolor=\"#3399FF\">\r\n			<th bgcolor=\"navy\" class=\"sorted-asc\"><font style='font-family:Arial' size=\"2\"><input type=\"checkbox\" id=\"chkAllDRARes\" name=\"chkAllDRARes\" value=\"1\"></font></th>\r\n			<th bgcolor=\"navy\" class=\"sorted-asc\"><a href=\"#\"><b><font style='font-family:Arial;color:white' size=\"2\"><u>".toCharArray();
    _jsp_string18 = "\" name=\"PKOrg\">\r\n<input type=\"hidden\" value=\"".toCharArray();
    _jsp_string40 = "\r\n			<th bgcolor=\"navy\" class=\"sorted-asc\"><a href=\"#\"><b><font style='font-family:Arial;color:white' size=\"2\"><u>".toCharArray();
    _jsp_string5 = "\r\n<script>\r\n						alert(\"SQLException ".toCharArray();
    _jsp_string35 = "			".toCharArray();
    _jsp_string15 = "\r\n<form id=\"MatchCompetencies_DResDAct\" name=\"MatchCompetencies_DResDAct\" method=\"post\" action=\"MatchCompetencies_DResDAct.jsp\">\r\n<input type=\"hidden\" value=\"".toCharArray();
    _jsp_string46 = "\r\n		</table></div>\r\n	</td>\r\n</tr>\r\n</table>\r\n<p></p>\r\n<table border=\"0\" width=\"55%\" cellspacing=\"0\" cellpadding=\"0\">\r\n<tr>\r\n   	<td width=\"210\"><input type=\"button\" name=\"Save\" value=\"".toCharArray();
    _jsp_string3 = "\r\n</head>\r\n\r\n<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.5/jquery.min.js\"></script>\r\n<script > \r\n	$(document).ready(function(){\r\n	   //$('#MatchCompetencies_DResDAct').ajaxForm();\r\n	   $(\"#chkAllDRA\").click(function(){\r\n		  if (this.checked) {\r\n			$(this).attr('checked', true);\r\n			$('input:checkbox[id^=chkComp]').each(function(){\r\n				$(this).attr('checked', true);\r\n			})\r\n		  } else {\r\n			$(this).attr('checked', false);\r\n			$('input:checkbox[id^=chkComp]').each(function(){\r\n				$(this).attr('checked', false);\r\n			})\r\n		  }\r\n	   });\r\n	   \r\n	   $(\"#chkAllDRARes\").click(function(){\r\n		  if (this.checked) {\r\n			$(this).attr('checked', true);\r\n			$('input:checkbox[id^=chkRes]').each(function(){\r\n				$(this).attr('checked', true);\r\n			})\r\n		  } else {\r\n			$(this).attr('checked', false);\r\n			$('input:checkbox[id^=chkRes]').each(function(){\r\n				$(this).attr('checked', false);\r\n			})\r\n		  }\r\n	   });\r\n	   \r\n	   $('table[id^=tbl]').each(function() {\r\n			var $table = $(this);\r\n			$('th', $table).each(function(column) {\r\n				var $header = $(this);\r\n				$header.click(function() {\r\n				\r\n					var sortDirection = 1;\r\n					if ($header.is('.sorted-asc')) {\r\n						sortDirection = -1;\r\n					}\r\n				\r\n					var rows = $table.find('tbody > tr').nextAll().get();\r\n	\r\n					rows.sort(function(a, b) {\r\n						var keyA = $(a).children('td').eq(column).text().toUpperCase();\r\n						var keyB = $(b).children('td').eq(column).text().toUpperCase();\r\n						if (keyA < keyB) return -sortDirection;\r\n						if (keyA > keyB) return sortDirection;\r\n						return 0;\r\n					});\r\n				\r\n					$.each(rows, function(index, row) {\r\n						$table.children('tbody').append(row);\r\n					});\r\n					\r\n					$table.find('th').removeClass('sorted-asc').removeClass('sorted-desc');\r\n					if (sortDirection == 1) {\r\n						$header.addClass('sorted-asc');\r\n					}\r\n					else {\r\n						$header.addClass('sorted-desc');\r\n					}\r\n				});\r\n			});\r\n		});\r\n	})\r\n</script>\r\n<SCRIPT LANGUAGE=\"JavaScript\">\r\n\r\nfunction check(field)\r\n{\r\n	var isValid = 0;\r\n	var clickedValue = 0;\r\n		\r\n	if( field == null ) {\r\n		isValid = 2;\r\n	\r\n	} else {\r\n		for (i = 0; i < field.length; i++) \r\n			if(field[i].checked) {		\r\n				clickedValue = field[i].value;\r\n				isValid = 1;\r\n			}\r\n    \r\n		if(isValid == 0 && field != null)  {\r\n			if(field.checked) {\r\n				clickedValue = field.value;\r\n				isValid = 1;\r\n			}\r\n		}\r\n    }\r\n	\r\n	if(isValid == 1)\r\n		return clickedValue;\r\n	else if(isValid == 0)\r\n		return; //alert(\"No record selected\");\r\n	else if(isValid == 2)\r\n		return; //alert(\"No record available\");\r\n	\r\n	isValid = 0;	\r\n	\r\n}\r\n\r\nfunction confirmSave(form, chkComp, chkRes, org, comp, selOrg, selComp, res)\r\n{\r\n	if(!check(chkComp) && !check(chkRes)) {\r\n		alert(\"No records selected.\");\r\n		return;\r\n	}\r\n	\r\n	//get the radio button resource type\r\n	var clickedValue = 0;\r\n\r\n	for (i = 0; i < res.length; i++) \r\n	if(res[i].checked) {\r\n		clickedValue = res[i].value;\r\n		res[i].checked = false;\r\n	}\r\n	\r\n	form.action=\"MatchCompetencies_DResDAct.jsp?save=1\" + \"&org=\" + org.value + \"&comp=\" + comp.value + \"&org2=\"+selOrg.value + \"&comp2=\" + selComp.value + \"&res=\" + clickedValue;\r\n	form.method=\"post\";\r\n	form.submit();\r\n} \r\n\r\nfunction changeResourceType(form, org, comp, selOrg, selComp, res)\r\n{\r\n	var clickedValue = 0;\r\n	\r\n	for (i = 0; i < res.length; i++) \r\n	if(res[i].checked) {\r\n		clickedValue = res[i].value;\r\n		res[i].checked = false;\r\n	}\r\n	\r\n	form.action=\"MatchCompetencies_DResDAct.jsp?org=\" + org.value + \"&comp=\" + comp.value + \"&org2=\"+selOrg.value + \"&comp2=\" + selComp.value + \"&res=\" + clickedValue;\r\n	form.method=\"post\";\r\n	form.submit();\r\n}\r\n\r\nfunction closeWindow()\r\n{\r\n	window.close();\r\n}\r\n\r\n</script>\r\n\r\n<body>\r\n".toCharArray();
    _jsp_string34 = " onClick=\"changeResourceType(this.form, this.form.newPKOrg, this.form.newComp, this.form.PKOrg, this.form.comp, rbtnRes)\">\r\n".toCharArray();
    _jsp_string36 = "</font></td>\r\n            <td>&nbsp;&nbsp;</td>\r\n".toCharArray();
    _jsp_string44 = "\r\n						<td width=\"7%\"><font style='font-family:Arial' size=\"2\">".toCharArray();
    _jsp_string38 = "\r\n				<th bgcolor=\"navy\" class=\"sorted-asc\"><a href=\"#\"><b><font style='font-family:Arial;color:white' size=\"2\"><u>".toCharArray();
    _jsp_string25 = "></font></td>\r\n	   			<td width=\"87%\"><font style='font-family:Arial' size=\"2\">".toCharArray();
    _jsp_string23 = "</u></font></b></a></th>\r\n".toCharArray();
    _jsp_string11 = "\r\n<script>\r\n			alert(\"".toCharArray();
    _jsp_string20 = "</u></b>; Competency: <b><u>".toCharArray();
    _jsp_string7 = " + '&comp=' + ".toCharArray();
    _jsp_string21 = "</u></b></font></td>\r\n</tr>\r\n<tr>\r\n	<td>\r\n		<div style='width:900px; height:250px; z-index:1; overflow:auto;'>  \r\n		<table id=\"tblDRA\" name=\"tblDRA\" border=\"1\" bgcolor=\"#FFFFCC\" bordercolor=\"#3399FF\">\r\n			<th bgcolor=\"navy\" class=\"sorted-asc\"><font style='font-family:Arial' size=\"2\"><input type=\"checkbox\" id=\"chkAllDRA\" name=\"chkAllDRA\"></font></th>\r\n			<th bgcolor=\"navy\" class=\"sorted-asc\"><a href=\"#\"><b><font style='font-family:Arial;color:white' size=\"2\"><u>".toCharArray();
    _jsp_string19 = "\" name=\"comp\">\r\n<table border=\"0\">\r\n<tr>\r\n    <td><font style='font-family:Arial' size=\"2\">Organisation: <b><u>".toCharArray();
    _jsp_string27 = "</font></td>\r\n   			</tr>\r\n".toCharArray();
    _jsp_string29 = "</font></td>\r\n            <td width=\"20\">&nbsp;&nbsp;</td>\r\n".toCharArray();
    _jsp_string1 = "\r\n".toCharArray();
    _jsp_string45 = "\r\n	   			<td width=\"10%\"><font style='font-family:Arial' size=\"2\">".toCharArray();
    _jsp_string12 = " Development Activities successfully added.\");\r\n			\r\n</script>\r\n".toCharArray();
    _jsp_string42 = "></font></td>\r\n	   			<td width=\"80%\"><font style='font-family:Arial' size=\"2\">".toCharArray();
    _jsp_string28 = "\r\n		</table></div>\r\n	</td>\r\n</tr>\r\n<tr>\r\n    <td>&nbsp;</td>\r\n</tr>\r\n<tr>\r\n	<td>\r\n        <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n        <tr>\r\n            <td><font face = \"Arial\" size = \"2\">".toCharArray();
    _jsp_string13 = "\r\n</script>\r\n".toCharArray();
    _jsp_string24 = "\r\n   			<tr onMouseOver = \"this.bgColor = '#99ccff'\" onMouseOut = \"this.bgColor = '#FFFFcc'\">\r\n       			<td width=\"3%\"><font face=\"Arial\" style=\"font-size: 11.0pt; font-family: Arial\">\r\n	   				<input type=\"checkbox\" id=\"chkComp\" name=\"chkComp\" value=".toCharArray();
    _jsp_string2 = "\r\n\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html\">\r\n\r\n".toCharArray();
  }
}
