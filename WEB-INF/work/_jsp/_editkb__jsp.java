/*
 * JSP generated by Resin Professional 4.0.36 (built Fri, 26 Apr 2013 03:33:09 PDT)
 */

package _jsp;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;
import java.sql.*;
import java.util.*;
import CP_Classes.vo.*;

public class _editkb__jsp extends com.caucho.jsp.JavaPage
{
  private static final java.util.HashMap<String,java.lang.reflect.Method> _jsp_functionMap = new java.util.HashMap<String,java.lang.reflect.Method>();
  private boolean _caucho_isDead;
  private boolean _caucho_isNotModified;
  private com.caucho.jsp.PageManager _jsp_pageManager;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    javax.servlet.http.HttpSession session = request.getSession(true);
    com.caucho.server.webapp.WebApp _jsp_application = _caucho_getApplication();
    com.caucho.jsp.PageContextImpl pageContext = _jsp_pageManager.allocatePageContext(this, _jsp_application, request, response, null, session, 8192, true, false);

    TagState _jsp_state = null;

    try {
      _jspService(request, response, pageContext, _jsp_application, session, _jsp_state);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      _jsp_pageManager.freePageContext(pageContext);
    }
  }
  
  private void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response,
              com.caucho.jsp.PageContextImpl pageContext,
              javax.servlet.ServletContext application,
              javax.servlet.http.HttpSession session,
              TagState _jsp_state)
    throws Throwable
  {
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    final javax.el.ELContext _jsp_env = pageContext.getELContext();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    javax.servlet.jsp.tagext.JspTag _jsp_parent_tag = null;
    com.caucho.jsp.PageContextImpl _jsp_parentContext = pageContext;
    response.setContentType("text/html");
    response.setCharacterEncoding("utf-8");

    out.write(_jsp_string0, 0, _jsp_string0.length);
    // by lydia Date 05/09/2008 Fix jsp file to support Thai language 
    out.write(_jsp_string1, 0, _jsp_string1.length);
    CP_Classes.Database Database;
    synchronized (pageContext.getSession()) {
      Database = (CP_Classes.Database) pageContext.getSession().getAttribute("Database");
      if (Database == null) {
        Database = new CP_Classes.Database();
        pageContext.getSession().setAttribute("Database", Database);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.KeyBehaviour EditKB;
    synchronized (pageContext.getSession()) {
      EditKB = (CP_Classes.KeyBehaviour) pageContext.getSession().getAttribute("EditKB");
      if (EditKB == null) {
        EditKB = new CP_Classes.KeyBehaviour();
        pageContext.getSession().setAttribute("EditKB", EditKB);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.Competency Competency;
    synchronized (pageContext.getSession()) {
      Competency = (CP_Classes.Competency) pageContext.getSession().getAttribute("Competency");
      if (Competency == null) {
        Competency = new CP_Classes.Competency();
        pageContext.getSession().setAttribute("Competency", Competency);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.KeyBehaviour KB;
    synchronized (pageContext.getSession()) {
      KB = (CP_Classes.KeyBehaviour) pageContext.getSession().getAttribute("KB");
      if (KB == null) {
        KB = new CP_Classes.KeyBehaviour();
        pageContext.getSession().setAttribute("KB", KB);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.Competency Comp;
    synchronized (pageContext.getSession()) {
      Comp = (CP_Classes.Competency) pageContext.getSession().getAttribute("Comp");
      if (Comp == null) {
        Comp = new CP_Classes.Competency();
        pageContext.getSession().setAttribute("Comp", Comp);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.Translate trans;
    synchronized (pageContext.getSession()) {
      trans = (CP_Classes.Translate) pageContext.getSession().getAttribute("trans");
      if (trans == null) {
        trans = new CP_Classes.Translate();
        pageContext.getSession().setAttribute("trans", trans);
      }
    }
    out.write(_jsp_string2, 0, _jsp_string2.length);
    CP_Classes.Login logchk;
    synchronized (pageContext.getSession()) {
      logchk = (CP_Classes.Login) pageContext.getSession().getAttribute("logchk");
      if (logchk == null) {
        logchk = new CP_Classes.Login();
        pageContext.getSession().setAttribute("logchk", logchk);
      }
    }
    out.write(_jsp_string3, 0, _jsp_string3.length);
    out.print((trans.tslt("Edit Key Behaviour")));
    out.write(_jsp_string4, 0, _jsp_string4.length);
    out.print((trans.tslt("Please enter Statement for English version")));
    out.write(_jsp_string5, 0, _jsp_string5.length);
    
	//response.setHeader("Pragma", "no-cache");
	//response.setHeader("Cache-Control", "no-cache");
	//response.setDateHeader("expires", 0);
String username=(String)session.getAttribute("username");

  if (!logchk.isUsable(username)) 
  {
    out.write(_jsp_string6, 0, _jsp_string6.length);
      } 
  else 
  { 	
  	
	int pkKB = 0, fkComp = 0, KBLevel = 0, Level = 0, fkComp1 = 0;
	int OrgID = logchk.getOrg();	
	int compID = logchk.getCompany();
	int pkUser = logchk.getPKUser();
	int userType = logchk.getUserType();	// 1= super admin
	
	fkComp1 = Comp.getPKComp();		
	KBLevel = KB.getKBLevel();
	pkKB = EditKB.getKBID();
	
	boolean clicked = false;
	// fkComp is used to fill up the select options menu
	// fkComp1 is used as reference for edition
	String statement[] = new String[6];
	String CompName = "";
	
	Vector CompResult = Competency.FilterRecord(compID, OrgID);
	
 			
	if (request.getParameter("clicked") != null) 
	{
		clicked = true;
		pkKB = Integer.parseInt(request.getParameter("clicked"));
		
		
		EditKB.setKBID(pkKB);
		/****************************
		*Edit By James 15 - Nov 2007
		****************************/
		
		voKeyBehaviour vo_KeyBehaviour=EditKB.getRecord(pkKB);
		if(vo_KeyBehaviour!=null){
						
		fkComp1 = vo_KeyBehaviour.getFKCompetency();
		Comp.setPKComp(fkComp1);
		statement = vo_KeyBehaviour.getAllKeyBehaviour();
		for(int i = 0; i < statement.length; i++){
			if(statement[i] == null)
				statement[i] = "";
		}
		Level = vo_KeyBehaviour.getKBLevel();
		KB.setKBLevel(Level);

		}
		
		int check = EditKB.CheckSysLibKB(pkKB);
			
			if(check == 1 && userType != 1) {				

    out.write(_jsp_string7, 0, _jsp_string7.length);
    out.print((trans.tslt("The edited System Generated Key Behaviour will be saved as a new User Generated Key Behaviour")));
    out.write(_jsp_string8, 0, _jsp_string8.length);
    									
			}				
		
	}
  	else {
		if(request.getParameter("edited") != null)
		{
			statement[0] = request.getParameter("Statement0");
			statement[1] = request.getParameter("Statement1");
			statement[2] = request.getParameter("Statement2");
			statement[3] = request.getParameter("Statement3");
			statement[4] = request.getParameter("Statement4");
			statement[5] = request.getParameter("Statement5");
			pkKB = Integer.parseInt(request.getParameter("pkKB"));
    		fkComp1 = Integer.parseInt(request.getParameter("CompList"));
			Level = Integer.parseInt(request.getParameter("KBLevel"));
		
			statement[0] = Database.SQLFixer(statement[0]);	
			statement[1] = Database.SQLFixer(statement[1]);	
			statement[2] = Database.SQLFixer(statement[2]);	
			statement[3] = Database.SQLFixer(statement[3]);	
			statement[4] = Database.SQLFixer(statement[4]);	
			statement[5] = Database.SQLFixer(statement[5]);	

			if(Integer.parseInt(request.getParameter("edited")) == 1) {	
				int exist = EditKB.CheckKBExist(statement[0], fkComp1, Level, compID, OrgID);
			
				if(exist != 0 && exist != pkKB) {
					clicked = true;


    out.write(_jsp_string9, 0, _jsp_string9.length);
    out.print((trans.tslt("Record exists")));
    out.write(_jsp_string10, 0, _jsp_string10.length);
    								
			
				} else {
				
   					try {
						boolean edit = EditKB.editRecord(fkComp1, pkKB, statement, Level, pkUser);
							
						if(edit) {

    out.write(_jsp_string11, 0, _jsp_string11.length);
    
						}
					}catch(SQLException SE) {
						clicked = true;

    out.write(_jsp_string9, 0, _jsp_string9.length);
    out.print((trans.tslt("Record exists")));
    out.write(_jsp_string12, 0, _jsp_string12.length);
    					
					}
					
				}
			}
			else if(Integer.parseInt(request.getParameter("edited")) == 2) {	// admin or syslib
				int exist = EditKB.CheckKBExist(statement[0], fkComp1, Level, compID, OrgID);
			
				if(exist == 0) {
				
				try {
					boolean add = EditKB.addRecord(fkComp1, statement, Level, compID, OrgID, pkUser, userType);
					
					if(add) {

    out.write(_jsp_string13, 0, _jsp_string13.length);
    					
					}
				}catch(SQLException SE) {

    out.write(_jsp_string14, 0, _jsp_string14.length);
    						
				
				}
				
				} else {
					clicked = true;

    out.write(_jsp_string9, 0, _jsp_string9.length);
    out.print((trans.tslt("Record exists")));
    out.write(_jsp_string15, 0, _jsp_string15.length);
    		
			}

			}
		}
	}

    out.write(_jsp_string16, 0, _jsp_string16.length);
    out.print(( trans.tslt("Level") ));
    out.write(_jsp_string17, 0, _jsp_string17.length);
    
			for(KBLevel = 1; KBLevel <= 10; KBLevel++) {
				if(clicked == true && KBLevel == Level) {
		
    out.write(_jsp_string18, 0, _jsp_string18.length);
    out.print((KBLevel));
    out.write(_jsp_string19, 0, _jsp_string19.length);
    out.print((KBLevel));
    out.write(_jsp_string20, 0, _jsp_string20.length);
    	} else {
		
    out.write(_jsp_string18, 0, _jsp_string18.length);
    out.print((KBLevel));
    out.write('>');
    out.print((KBLevel));
    out.write(_jsp_string20, 0, _jsp_string20.length);
    
			}
			}
		
    out.write(_jsp_string21, 0, _jsp_string21.length);
    out.print(( trans.tslt("Competency") ));
    out.write(_jsp_string22, 0, _jsp_string22.length);
    
						/********************
						* Edited by James 30 Oct 2007
						************************/
			  //while(CompResult.next()) {
			  for(int i=0; i<CompResult.size(); i++) {
				voCompetency voC = (voCompetency)CompResult.elementAt(i);
				fkComp = 	voC.getPKCompetency();
				CompName =  voC.getCompetencyName();
				if(fkComp == fkComp1) {
		
    out.write(_jsp_string18, 0, _jsp_string18.length);
    out.print((fkComp));
    out.write(_jsp_string19, 0, _jsp_string19.length);
    out.print((CompName));
    out.write(_jsp_string20, 0, _jsp_string20.length);
    	} else {
		
    out.write(_jsp_string18, 0, _jsp_string18.length);
    out.print((fkComp));
    out.write('>');
    out.print((CompName));
    out.write(_jsp_string20, 0, _jsp_string20.length);
    
			}
			}
		
    out.write(_jsp_string23, 0, _jsp_string23.length);
    out.print(( trans.tslt("Statement") ));
    out.write(_jsp_string24, 0, _jsp_string24.length);
    out.print(( trans.tslt("English") ));
    out.write(_jsp_string25, 0, _jsp_string25.length);
    out.print((statement[0]));
    out.write(_jsp_string26, 0, _jsp_string26.length);
    out.print(( trans.tslt("Indonesian") ));
    out.write(_jsp_string27, 0, _jsp_string27.length);
    out.print((statement[1]));
    out.write(_jsp_string26, 0, _jsp_string26.length);
    out.print(( trans.tslt("Thai") ));
    out.write(_jsp_string28, 0, _jsp_string28.length);
    out.print((statement[2]));
    out.write(_jsp_string29, 0, _jsp_string29.length);
    out.print(( trans.tslt("Korean") ));
    out.write(_jsp_string30, 0, _jsp_string30.length);
    out.print((statement[3]));
    out.write(_jsp_string29, 0, _jsp_string29.length);
    out.print(( trans.tslt("Traditional Chinese") ));
    out.write(_jsp_string31, 0, _jsp_string31.length);
    out.print((statement[4]));
    out.write(_jsp_string29, 0, _jsp_string29.length);
    out.print(( trans.tslt("Simplified Chinese") ));
    out.write(_jsp_string32, 0, _jsp_string32.length);
    out.print((statement[5]));
    out.write(_jsp_string33, 0, _jsp_string33.length);
    out.print((pkKB));
    out.write(_jsp_string34, 0, _jsp_string34.length);
    
	if(EditKB.CheckSysLibKB(pkKB) == 1 && userType != 1) {

    out.write(_jsp_string35, 0, _jsp_string35.length);
    out.print(( trans.tslt("Save") ));
    out.write(_jsp_string36, 0, _jsp_string36.length);
    	
	} else {

    out.write(_jsp_string37, 0, _jsp_string37.length);
    out.print(( trans.tslt("Save") ));
    out.write(_jsp_string38, 0, _jsp_string38.length);
     } 
    out.write(_jsp_string39, 0, _jsp_string39.length);
    out.print(( trans.tslt("Save As New") ));
    out.write(_jsp_string40, 0, _jsp_string40.length);
    out.print(( trans.tslt("Cancel") ));
    out.write(_jsp_string41, 0, _jsp_string41.length);
     } 
    out.write(_jsp_string42, 0, _jsp_string42.length);
  }

  private com.caucho.make.DependencyContainer _caucho_depends
    = new com.caucho.make.DependencyContainer();

  public java.util.ArrayList<com.caucho.vfs.Dependency> _caucho_getDependList()
  {
    return _caucho_depends.getDependencies();
  }

  public void _caucho_addDepend(com.caucho.vfs.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    _caucho_depends.add(depend);
  }

  protected void _caucho_setNeverModified(boolean isNotModified)
  {
    _caucho_isNotModified = true;
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;

    if (_caucho_isNotModified)
      return false;

    if (com.caucho.server.util.CauchoSystem.getVersionId() != -7791540776389363938L)
      return true;

    return _caucho_depends.isModified();
  }

  public long _caucho_lastModified()
  {
    return 0;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
    TagState tagState;
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.server.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("EditKB.jsp"), -8024524933712339221L, false);
    _caucho_depends.add(depend);
  }

  final static class TagState {

    void release()
    {
    }
  }

  public java.util.HashMap<String,java.lang.reflect.Method> _caucho_getFunctionMap()
  {
    return _jsp_functionMap;
  }

  public void caucho_init(ServletConfig config)
  {
    try {
      com.caucho.server.webapp.WebApp webApp
        = (com.caucho.server.webapp.WebApp) config.getServletContext();
      init(config);
      if (com.caucho.jsp.JspManager.getCheckInterval() >= 0)
        _caucho_depends.setCheckInterval(com.caucho.jsp.JspManager.getCheckInterval());
      _jsp_pageManager = webApp.getJspApplicationContext().getPageManager();
      com.caucho.jsp.TaglibManager manager = webApp.getJspApplicationContext().getTaglibManager();
      com.caucho.jsp.PageContextImpl pageContext = new com.caucho.jsp.InitPageContextImpl(webApp, this);
    } catch (Exception e) {
      throw com.caucho.config.ConfigException.create(e);
    }
  }

  private final static char []_jsp_string13;
  private final static char []_jsp_string21;
  private final static char []_jsp_string10;
  private final static char []_jsp_string27;
  private final static char []_jsp_string22;
  private final static char []_jsp_string42;
  private final static char []_jsp_string25;
  private final static char []_jsp_string16;
  private final static char []_jsp_string7;
  private final static char []_jsp_string9;
  private final static char []_jsp_string5;
  private final static char []_jsp_string8;
  private final static char []_jsp_string26;
  private final static char []_jsp_string14;
  private final static char []_jsp_string38;
  private final static char []_jsp_string19;
  private final static char []_jsp_string41;
  private final static char []_jsp_string24;
  private final static char []_jsp_string0;
  private final static char []_jsp_string3;
  private final static char []_jsp_string35;
  private final static char []_jsp_string11;
  private final static char []_jsp_string30;
  private final static char []_jsp_string28;
  private final static char []_jsp_string40;
  private final static char []_jsp_string23;
  private final static char []_jsp_string29;
  private final static char []_jsp_string18;
  private final static char []_jsp_string4;
  private final static char []_jsp_string20;
  private final static char []_jsp_string31;
  private final static char []_jsp_string34;
  private final static char []_jsp_string2;
  private final static char []_jsp_string36;
  private final static char []_jsp_string6;
  private final static char []_jsp_string12;
  private final static char []_jsp_string39;
  private final static char []_jsp_string33;
  private final static char []_jsp_string1;
  private final static char []_jsp_string32;
  private final static char []_jsp_string17;
  private final static char []_jsp_string37;
  private final static char []_jsp_string15;
  static {
    _jsp_string13 = "\r\n<script>\r\n	alert(\"Added successfully\");\r\n	window.close();\r\n	opener.location.href = 'KeyBehaviour.jsp';\r\n</script>	\r\n\r\n\r\n".toCharArray();
    _jsp_string21 = "\r\n	</select>\r\n	</td>\r\n    </tr>\r\n    <tr>\r\n      <td height=\"12\"></td>\r\n      <td height=\"12\"></td>\r\n      <td height=\"12\"></td>\r\n    </tr>\r\n    <tr>\r\n      <td height=\"12\">".toCharArray();
    _jsp_string10 = "');\r\n	\r\n</script>	\r\n\r\n".toCharArray();
    _jsp_string27 = "</td>\r\n           <td width=\"478\" height=\"75\">\r\n    <textarea span style='font-size:10.0pt;font-family:Arial' name=\"Statement1\" cols=\"50\" rows=\"4\" id=\"textarea\">".toCharArray();
    _jsp_string22 = "</td>\r\n      <td height=\"12\">\r\n        <select name=\"CompList\">\r\n        ".toCharArray();
    _jsp_string42 = "\r\n</body>\r\n</html>\r\n".toCharArray();
    _jsp_string25 = "</td>\r\n      <td width=\"478\" height=\"75\">\r\n    <textarea span style='font-size:10.0pt;font-family:Arial' name=\"Statement0\" cols=\"50\" rows=\"4\" id=\"textarea\">".toCharArray();
    _jsp_string16 = "	\r\n\r\n<form name=\"EditKB\" method=\"post\">\r\n  <table border=\"0\" width=\"400\" height=\"165\" font span style='font-size:10.0pt;font-family:Arial'>\r\n    <tr>\r\n      <td width=\"77\" height=\"20\">".toCharArray();
    _jsp_string7 = "\r\n<script>\r\n	alert(\"".toCharArray();
    _jsp_string9 = "\r\n<script>\r\n	alert('".toCharArray();
    _jsp_string5 = "\");		\r\n		form.Statement0.focus();\r\n		return false;\r\n	}\r\n	return true;\r\n}\r\n\r\n//Edited by Xuehai 02 Jun 2011. Remove 'void'. Enable to run on different browers like Chrome&Firefox.\r\n//void function cancelEdit()\r\nfunction cancelEdit()\r\n{\r\n	window.close();\r\n}\r\n</script>\r\n\r\n".toCharArray();
    _jsp_string8 = "\")\r\n</script>	\r\n\r\n".toCharArray();
    _jsp_string26 = "</textarea></td>\r\n     </tr><tr>\r\n     <td width=\"77\" height=\"75\">".toCharArray();
    _jsp_string14 = "\r\n<script>\r\n	window.close();\r\n	opener.location.href = \"KeyBehaviour.jsp\";\r\n</script>	\r\n\r\n".toCharArray();
    _jsp_string38 = "\" onClick=\"return editText(this.form, this.form.CompList.options[CompList.selectedIndex].value, this.form.KBLevel.options[KBLevel.selectedIndex].value, 1)\">\r\n</font>		\r\n".toCharArray();
    _jsp_string19 = " selected>".toCharArray();
    _jsp_string41 = "\" onClick=\"cancelEdit(this.form)\">\r\n      </p>\r\n    </blockquote>\r\n  </blockquote>\r\n</form>\r\n".toCharArray();
    _jsp_string24 = "</td>\r\n    </tr>\r\n    <tr> \r\n      <td width=\"77\" height=\"75\">".toCharArray();
    _jsp_string0 = "\r\n\r\n\r\n\r\n".toCharArray();
    _jsp_string3 = " \r\n\r\n<script language = \"javascript\">\r\n//Edited by Xuehai 02 Jun 2011. Remove 'void'. Enable to run on different browers like Chrome&Firefox.\r\n//void function editText(form, CompList, KBLevel, type)\r\nfunction editText(form, CompList, KBLevel, type)\r\n{\r\n	if(form.Statement0.value != \"\") {\r\n		if(confirm(\"".toCharArray();
    _jsp_string35 = "		\r\n<font span style='font-size:10.0pt;font-family:Arial'>\r\n<input name=\"Submit\" type=\"button\" id=\"Submit\" value=\"".toCharArray();
    _jsp_string11 = "\r\n	<script>\r\n		alert(\"Edited successfully\");\r\n  		window.close();\r\n		opener.location.href = 'KeyBehaviour.jsp';\r\n	</script>\r\n".toCharArray();
    _jsp_string30 = "</td>\r\n     <td width=\"478\" height=\"75\">\r\n    <textarea span style='font-size:10.0pt;font-family:Arial' name=\"Statement3\" cols=\"50\" rows=\"4\" id=\"textarea\">".toCharArray();
    _jsp_string28 = "</td>\r\n          <td width=\"478\" height=\"75\">\r\n    <textarea span style='font-size:10.0pt;font-family:Arial' name=\"Statement2\" cols=\"50\" rows=\"4\" id=\"textarea\">".toCharArray();
    _jsp_string40 = "\" onClick=\"return editText(this.form, this.form.CompList.options[CompList.selectedIndex].value, this.form.KBLevel.options[KBLevel.selectedIndex].value, 2)\">\r\n</font>		\r\n		&nbsp;&nbsp;\r\n        <input name=\"Cancel\" type=\"button\" id=\"Cancel\" value=\"".toCharArray();
    _jsp_string23 = "\r\n        </select></td>\r\n    </tr>\r\n    <tr>\r\n      <td width=\"77\" height=\"12\"></td>\r\n      <td width=\"16\" height=\"12\"></td>\r\n      <td width=\"478\" height=\"12\"></td>\r\n    </tr>\r\n    <tr>\r\n      <td width=\"77\" height=\"20\">".toCharArray();
    _jsp_string29 = "</textarea></td>\r\n    </tr><tr>\r\n    <td width=\"77\" height=\"75\">".toCharArray();
    _jsp_string18 = "\r\n			<option value=".toCharArray();
    _jsp_string4 = "?\")) {\r\n			form.action = \"EditKB.jsp?edited=\" + type + \"&CompList=\" + CompList + \"&KBLevel=\" + KBLevel;\r\n			form.method = \"post\";\r\n			form.submit();\r\n			return true;\r\n		}else\r\n			return false;\r\n	} else {\r\n		alert(\"".toCharArray();
    _jsp_string20 = "\r\n		".toCharArray();
    _jsp_string31 = "</td>\r\n         <td width=\"478\" height=\"75\">\r\n    <textarea span style='font-size:10.0pt;font-family:Arial' name=\"Statement4\" cols=\"50\" rows=\"4\" id=\"textarea\">".toCharArray();
    _jsp_string34 = "\" size=\"10\">\r\n".toCharArray();
    _jsp_string2 = "\r\n".toCharArray();
    _jsp_string36 = "\" onClick=\"return editText(this.form, this.form.CompList.options[CompList.selectedIndex].value, this.form.KBLevel.options[KBLevel.selectedIndex].value, 1)\" disabled>\r\n</font>		\r\n".toCharArray();
    _jsp_string6 = " <font size=\"2\">\r\n   \r\n    	    	<script>\r\n	parent.location.href = \"index.jsp\";\r\n</script>\r\n".toCharArray();
    _jsp_string12 = "');\r\n\r\n</script>\r\n\r\n".toCharArray();
    _jsp_string39 = "&nbsp;&nbsp;&nbsp;\r\n<font span style='font-size:10.0pt;font-family:Arial'>\r\n<input name=\"SaveAs\" type=\"button\" id=\"Submit\" value=\"".toCharArray();
    _jsp_string33 = "</textarea></td>\r\n    </tr>\r\n  </table>\r\n  <blockquote>\r\n    <blockquote>\r\n	<p>\r\n<input name=\"pkKB\" type=\"hidden\" id=\"pkKB\" value=\"".toCharArray();
    _jsp_string1 = "\r\n\r\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n<html>\r\n<head>\r\n<title>Key Behaviour</title>\r\n\r\n<meta http-equiv=\"Content-Type\" content=\"text/html\">\r\n\r\n<style type=\"text/css\">\r\n<!--\r\nbody {\r\n	background-color: #eaebf4;\r\n}\r\n-->\r\n</style></head>\r\n\r\n<body>\r\n".toCharArray();
    _jsp_string32 = "</td>\r\n         <td width=\"478\" height=\"75\">\r\n    <textarea span style='font-size:10.0pt;font-family:Arial' name=\"Statement5\" cols=\"50\" rows=\"4\" id=\"textarea\">".toCharArray();
    _jsp_string17 = "</td>\r\n      <td width=\"478\" height=\"20\">    \r\n    <select name=\"KBLevel\">\r\n    	".toCharArray();
    _jsp_string37 = "\r\n<font span style='font-size:10.0pt;font-family:Arial'>\r\n<input name=\"Submit\" type=\"button\" id=\"Submit\" value=\"".toCharArray();
    _jsp_string15 = "');\r\n</script>	\r\n\r\n".toCharArray();
  }
}
